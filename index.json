{
  "api/Global.AnimationUtils.html": {
    "href": "api/Global.AnimationUtils.html",
    "title": "Class AnimationUtils | 塔防游戏API文档",
    "keywords": "Class AnimationUtils 动画的工具类。 Inheritance System.Object AnimationUtils Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AnimationUtils : MonoBehaviour Methods Destroy() Declaration public void Destroy() LookToMouse(Single) Declaration public void LookToMouse(float duration) Parameters Type Name Description System.Single duration ResetRotation(Single) Declaration public void ResetRotation(float duration) Parameters Type Name Description System.Single duration"
  },
  "api/Global.AttackType.html": {
    "href": "api/Global.AttackType.html",
    "title": "Enum AttackType | 塔防游戏API文档",
    "keywords": "Enum AttackType 攻击类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum AttackType Fields Name Description NonSourceFired 无源头发射 SourceFired 有源头发射 Surround 环绕 Swing 挥舞"
  },
  "api/Global.AutoSorting2D.html": {
    "href": "api/Global.AutoSorting2D.html",
    "title": "Class AutoSorting2D | 塔防游戏API文档",
    "keywords": "Class AutoSorting2D 根据y轴自动处理遮挡关系。 Inheritance System.Object AutoSorting2D Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AutoSorting2D : MonoBehaviour Fields sortingRenderer Declaration public List<Renderer> sortingRenderer Field Value Type Description List < Renderer >"
  },
  "api/Global.BaseConfigItem.html": {
    "href": "api/Global.BaseConfigItem.html",
    "title": "Class BaseConfigItem | 塔防游戏API文档",
    "keywords": "Class BaseConfigItem 所有配置项的父类。 Inheritance System.Object BaseConfigItem LanguageConfigItem LevelsConfigItem PlatformCommonConfigItem SceneConfigItem SkillsConfigItem StatesConfigItem TasksConfigItem UnitsConfigItem Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class BaseConfigItem Fields description 描述 Declaration public string description Field Value Type Description System.String id ID Declaration public string id Field Value Type Description System.String name 名称 Declaration public string name Field Value Type Description System.String remark 备注 Declaration public string remark Field Value Type Description System.String"
  },
  "api/Global.BaseConfigTable-1.html": {
    "href": "api/Global.BaseConfigTable-1.html",
    "title": "Class BaseConfigTable<T> | 塔防游戏API文档",
    "keywords": "Class BaseConfigTable<T> 所有配置表的父类。 Inheritance System.Object BaseConfigTable<T> LanguageConfig LevelsConfig PlatformCommonConfig SceneConfig SkillsConfig StatesConfig TasksConfig UnitsConfig Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseConfigTable<T> : ScriptableObject where T : BaseConfigItem, new() Type Parameters Name Description T 配置项类型 Fields configList 配置项列表 Declaration public List<T> configList Field Value Type Description List <T> enableConsole 是否启用控制台输出 Declaration public bool enableConsole Field Value Type Description System.Boolean frameVersion 框架版本 Declaration public string frameVersion Field Value Type Description System.String tabName 标签页名称 Declaration public string tabName Field Value Type Description System.String version 配置表版本 Declaration public int version Field Value Type Description System.Int32 Properties ConfigCount 获得配置表长度。 Declaration public int ConfigCount { get; } Property Value Type Description System.Int32 ConfigNameList 配置项名称列表。 设置后将锁定配置表长度。 Declaration public virtual List<string> ConfigNameList { get; } Property Value Type Description List < System.String > ConfigTableVersion 当前配置表版本。 Declaration public virtual int ConfigTableVersion { get; } Property Value Type Description System.Int32 Item[Int32] 根据索引获得配置项。 Declaration public T this[int index] { get; } Parameters Type Name Description System.Int32 index 配置项索引 Property Value Type Description T 配置项 Item[String] 根据ID获得配置项。 Declaration public T this[string id] { get; } Parameters Type Name Description System.String id 配置项ID Property Value Type Description T 配置项 Methods GetConfigByName(String) 根据名称获得配置项。 Declaration public T GetConfigByName(string name) Parameters Type Name Description System.String name 配置项名称 Returns Type Description T 配置项 GetConfigIndex(T) 获得配置项索引。 Declaration public int GetConfigIndex(T config) Parameters Type Name Description T config 配置项 Returns Type Description System.Int32 配置项索引"
  },
  "api/Global.BaseEvent-1.html": {
    "href": "api/Global.BaseEvent-1.html",
    "title": "Class BaseEvent<T> | 塔防游戏API文档",
    "keywords": "Class BaseEvent<T> 事件触发类。 注意事件被触发并不意味着本单位参与了该事件，一般要先判断本单位是参与者再执行逻辑。 Inheritance System.Object BaseEvent<T> LevelEvent SkillEvent StateEvent TaskEvent UnitEvent Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseEvent<T> : ScriptableObject Type Parameters Name Description T Properties Owner 事件的所有者。 Declaration public T Owner { get; set; } Property Value Type Description T Methods CreateAfterimage(SpriteRenderer, Single) 创建残影效果。 Declaration protected void CreateAfterimage(SpriteRenderer spriteRenderer, float duration = 0.5F) Parameters Type Name Description SpriteRenderer spriteRenderer 残影形象 System.Single duration OnAnyViewClose(BaseView) Declaration protected virtual void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view OnDestroy() Declaration protected virtual void OnDestroy() SetInScreen(Transform, Single, Single) 将物体设置在屏幕边缘以标记父物体的位置。 若父物体在屏幕内则为父物体的位置。 Declaration protected IEnumerator SetInScreen(Transform target, float bufferX = 512F, float bufferY = 192F) Parameters Type Name Description Transform target 目标物体 System.Single bufferX 距离屏幕左右边缘的最小距离 System.Single bufferY 距离屏幕上下边缘的最小距离 Returns Type Description IEnumerator"
  },
  "api/Global.BaseSingleton-1.html": {
    "href": "api/Global.BaseSingleton-1.html",
    "title": "Class BaseSingleton<T> | 塔防游戏API文档",
    "keywords": "Class BaseSingleton<T> 单例模式父类。 Inheritance System.Object BaseSingleton<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseSingleton<T> where T : new() Type Parameters Name Description T Properties Instance 获得单例对象。 Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/Global.BaseUserData.html": {
    "href": "api/Global.BaseUserData.html",
    "title": "Class BaseUserData | 塔防游戏API文档",
    "keywords": "Class BaseUserData 处理用户数据的类。 本类为抽象类，具体数据由子类管理。 Inheritance System.Object BaseUserData ObservableUserData<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseUserData Methods AfterLoad() 读取后触发的事件。 Declaration public abstract void AfterLoad() BeforeSave() 保存前触发的事件。 Declaration public abstract void BeforeSave()"
  },
  "api/Global.BaseView.html": {
    "href": "api/Global.BaseView.html",
    "title": "Class BaseView | 塔防游戏API文档",
    "keywords": "Class BaseView 所有视图的父类。 Inheritance System.Object BaseView GameOverView GameView GetItemView GlobalView InventoryView LevelUpView LevelView LoadingView MapView PopWindowView SettingsView TitleView UnitInfoView Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseView : MonoBehaviour Fields allButtons 视图内的所有按钮 Declaration public List<Button> allButtons Field Value Type Description List < Button > layer 视图层级 除第0层外，相同层级的视图最多同时打开一个。 Declaration public int layer Field Value Type Description System.Int32 onClose 视图关闭事件 Declaration public UnityEvent onClose Field Value Type Description UnityEvent onOpen 视图打开事件 Declaration public UnityEvent onOpen Field Value Type Description UnityEvent onRefresh 视图刷新事件 Declaration public UnityEvent onRefresh Field Value Type Description UnityEvent Properties FloatingViews 所有已打开的浮动视图。 Declaration public static ReadOnlyCollection<BaseView> FloatingViews { get; } Property Value Type Description ReadOnlyCollection < BaseView > IsAnyViewOpen 是否存在打开的视图。 Declaration public static bool IsAnyViewOpen { get; } Property Value Type Description System.Boolean IsOpen 视图是否已经打开。 Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean OpenedViews 所有已打开的层级视图。 Declaration public static ReadOnlyCollection<BaseView> OpenedViews { get; } Property Value Type Description ReadOnlyCollection < BaseView > Methods Close() 关闭视图。 Declaration public void Close() OnClose() 视图关闭时调用此方法。 Declaration protected abstract void OnClose() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnOpen() 视图打开时调用此方法。 Declaration protected abstract void OnOpen() Open() 打开视图。 Declaration public void Open() RealRefresh() 实际刷新视图。 Declaration protected abstract void RealRefresh() Refresh() 刷新视图。 为避免重复调用方法导致频繁刷新的情况，调用该方法不会立即刷新视图，实际刷新会在最多20毫秒内触发。 Declaration public void Refresh() Start() Declaration protected virtual void Start() Events OnButtonClick 按钮点击事件 Declaration public static event UnityAction<BaseView, Button> OnButtonClick Event Type Type Description UnityAction < BaseView , Button > OnViewClose 视图关闭事件 Declaration public static event UnityAction<BaseView> OnViewClose Event Type Type Description UnityAction < BaseView > OnViewOpen 视图打开事件 Declaration public static event UnityAction<BaseView> OnViewOpen Event Type Type Description UnityAction < BaseView >"
  },
  "api/Global.BaseWindow.html": {
    "href": "api/Global.BaseWindow.html",
    "title": "Class BaseWindow | 塔防游戏API文档",
    "keywords": "Class BaseWindow 所有窗口的父类。 Inheritance System.Object BaseWindow PopMessageWindow PopWindow Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseWindow : MonoBehaviour Fields autoClose 视图关闭时自动关闭窗口 Declaration public bool autoClose Field Value Type Description System.Boolean canvasGroup Declaration protected CanvasGroup canvasGroup Field Value Type Description CanvasGroup closeButton 窗口关闭按钮 Declaration public Button closeButton Field Value Type Description Button isFloating 是否为浮动窗口 Declaration public bool isFloating Field Value Type Description System.Boolean onClose 窗口关闭事件 Declaration public UnityEvent onClose Field Value Type Description UnityEvent onOpen 窗口打开事件 Declaration public UnityEvent onOpen Field Value Type Description UnityEvent onRefresh 窗口刷新事件 Declaration public UnityEvent onRefresh Field Value Type Description UnityEvent Properties Current 当前窗口。 Declaration public static BaseWindow Current { get; } Property Value Type Description BaseWindow IsAnyWindowOpen 是否存在打开的窗口。 Declaration public static bool IsAnyWindowOpen { get; } Property Value Type Description System.Boolean IsOpen 窗口是否已经打开 Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean Methods AddListener() 添加监听器。 Declaration protected abstract void AddListener() Awake() Declaration protected virtual void Awake() Close() 关闭窗口。 Declaration public void Close() OnClose() 窗口关闭时调用此方法。 Declaration protected abstract void OnClose() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnOpen() 窗口打开时调用此方法。 Declaration protected abstract void OnOpen() Open() 打开窗口。 Declaration public void Open() OpenOrClose() 切换窗口打开状态。 Declaration public void OpenOrClose() PlayCloseAnimation() 设置窗口关闭动画。 Declaration protected virtual void PlayCloseAnimation() PlayOpenAnimation() 设置窗口出现动画。 注意需要将canvasGroup.alpha设为1才能显示窗口。 注意需要将canvasGroup.blocksRaycasts设为true才能点击窗口。 Declaration protected virtual void PlayOpenAnimation() RealRefresh() 实际刷新窗口。 Declaration protected abstract void RealRefresh() Refresh() 刷新窗口。 为避免重复调用方法导致频繁刷新的情况，调用该方法不会立即刷新窗口，实际刷新会在最多20毫秒内触发。 Declaration public void Refresh() RemoveListener() 移除监听器。 Declaration protected abstract void RemoveListener() Start() Declaration protected virtual void Start() Events OnWindowClose 窗口关闭事件 Declaration public static event UnityAction<BaseWindow> OnWindowClose Event Type Type Description UnityAction < BaseWindow > OnWindowOpen 窗口打开事件 Declaration public static event UnityAction<BaseWindow> OnWindowOpen Event Type Type Description UnityAction < BaseWindow >"
  },
  "api/Global.ComboInfo.html": {
    "href": "api/Global.ComboInfo.html",
    "title": "Struct ComboInfo | 塔防游戏API文档",
    "keywords": "Struct ComboInfo 连段信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct ComboInfo Fields comboIndex 连段序号 Declaration public int comboIndex Field Value Type Description System.Int32 skillID 技能ID Declaration public string skillID Field Value Type Description System.String Properties SkillSource Declaration public Skill SkillSource { readonly get; set; } Property Value Type Description Skill Methods Equals(ComboInfo) Declaration public bool Equals(ComboInfo other) Parameters Type Name Description ComboInfo other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(ComboInfo, ComboInfo) Declaration public static bool operator ==(ComboInfo left, ComboInfo right) Parameters Type Name Description ComboInfo left ComboInfo right Returns Type Description System.Boolean Inequality(ComboInfo, ComboInfo) Declaration public static bool operator !=(ComboInfo left, ComboInfo right) Parameters Type Name Description ComboInfo left ComboInfo right Returns Type Description System.Boolean"
  },
  "api/Global.ComboUseInfo.html": {
    "href": "api/Global.ComboUseInfo.html",
    "title": "Struct ComboUseInfo | 塔防游戏API文档",
    "keywords": "Struct ComboUseInfo 连段使用信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct ComboUseInfo Fields comboID 所属连段ID Declaration public string comboID Field Value Type Description System.String comboInfo 连段信息 Declaration public ComboInfo comboInfo Field Value Type Description ComboInfo isChargeAttack 是否为蓄力攻击 Declaration public bool isChargeAttack Field Value Type Description System.Boolean"
  },
  "api/Global.ConfigEditor.html": {
    "href": "api/Global.ConfigEditor.html",
    "title": "Class ConfigEditor | 塔防游戏API文档",
    "keywords": "Class ConfigEditor 配置表的Inspector窗口。 Inheritance System.Object ConfigEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Global.ConfigEditorWindow.html": {
    "href": "api/Global.ConfigEditorWindow.html",
    "title": "Class ConfigEditorWindow | 塔防游戏API文档",
    "keywords": "Class ConfigEditorWindow 配置表的编辑器窗口。 Inheritance System.Object ConfigEditorWindow Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigEditorWindow : EditorWindow Methods ShowWindow() 显示窗口。 Declaration public static ConfigEditorWindow ShowWindow() Returns Type Description ConfigEditorWindow 窗口对象 ShowWindow(ScriptableObject) 显示窗口。 Declaration public static ConfigEditorWindow ShowWindow(ScriptableObject selectedConfig) Parameters Type Name Description ScriptableObject selectedConfig 默认选中项 Returns Type Description ConfigEditorWindow 窗口对象"
  },
  "api/Global.ConfigItemDrawer.html": {
    "href": "api/Global.ConfigItemDrawer.html",
    "title": "Class ConfigItemDrawer | 塔防游戏API文档",
    "keywords": "Class ConfigItemDrawer 引用类型配置项在编辑器内的绘制逻辑。 Inheritance System.Object ConfigItemDrawer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigItemDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Global.ConfigItemReference-1.html": {
    "href": "api/Global.ConfigItemReference-1.html",
    "title": "Class ConfigItemReference<T> | 塔防游戏API文档",
    "keywords": "Class ConfigItemReference<T> 用于引用配置项的类。 Inheritance System.Object ConfigItemReference<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class ConfigItemReference<T> where T : BaseConfigItem, new() Type Parameters Name Description T 配置项类型 Constructors ConfigItemReference(String) Declaration public ConfigItemReference(string configID) Parameters Type Name Description System.String configID Fields configID 配置项ID Declaration public string configID Field Value Type Description System.String Properties Config 配置项对象 Declaration public T Config { get; } Property Value Type Description T Methods Equals(ConfigItemReference<T>) Declaration public bool Equals(ConfigItemReference<T> other) Parameters Type Name Description ConfigItemReference <T> other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Operators Equality(ConfigItemReference<T>, ConfigItemReference<T>) Declaration public static bool operator ==(ConfigItemReference<T> left, ConfigItemReference<T> right) Parameters Type Name Description ConfigItemReference <T> left ConfigItemReference <T> right Returns Type Description System.Boolean Inequality(ConfigItemReference<T>, ConfigItemReference<T>) Declaration public static bool operator !=(ConfigItemReference<T> left, ConfigItemReference<T> right) Parameters Type Name Description ConfigItemReference <T> left ConfigItemReference <T> right Returns Type Description System.Boolean"
  },
  "api/Global.ConfigManager.html": {
    "href": "api/Global.ConfigManager.html",
    "title": "Class ConfigManager | 塔防游戏API文档",
    "keywords": "Class ConfigManager 配置管理器。 该管理器会自动查找Resources文件夹下的所有配置表数据并记录。 Inheritance System.Object ConfigManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigManager Methods GetConfigDataAt<T>(Int32) 获得配置项。 Declaration public static T GetConfigDataAt<T>(int index) where T : BaseConfigItem, new() Parameters Type Name Description System.Int32 index 配置项索引 Returns Type Description T 配置项 Type Parameters Name Description T 配置项类型 GetConfigDataByID<T>(String) 获得配置项。 Declaration public static T GetConfigDataByID<T>(string configID) where T : BaseConfigItem, new() Parameters Type Name Description System.String configID 配置项ID Returns Type Description T 配置项 Type Parameters Name Description T 配置项类型 GetConfigDataByName<T>(String) 获得配置项。 Declaration public static T GetConfigDataByName<T>(string configName) where T : BaseConfigItem, new() Parameters Type Name Description System.String configName 配置项名称 Returns Type Description T 配置项 Type Parameters Name Description T 配置项类型 GetConfigDataIndex<T>(T) 获得配置项索引。 Declaration public static int GetConfigDataIndex<T>(T configItem) where T : BaseConfigItem, new() Parameters Type Name Description T configItem 配置项 Returns Type Description System.Int32 配置项索引 Type Parameters Name Description T 配置项类型 GetConfigLength<T>() 获得配置表长度。 Declaration public static int GetConfigLength<T>() where T : BaseConfigItem, new() Returns Type Description System.Int32 配置表长度 Type Parameters Name Description T 配置项类型 GetConfigTable<TTable, TItem>() 获得配置表。 Declaration public static TTable GetConfigTable<TTable, TItem>() where TTable : BaseConfigTable<TItem> where TItem : BaseConfigItem, new() Returns Type Description TTable 配置表 Type Parameters Name Description TTable 配置表类型 TItem 配置项类型 Load() 加载配置。 Declaration public static void Load()"
  },
  "api/Global.DamageInfo.html": {
    "href": "api/Global.DamageInfo.html",
    "title": "Class DamageInfo | 塔防游戏API文档",
    "keywords": "Class DamageInfo 伤害信息 Inheritance System.Object DamageInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DamageInfo Fields comboUseInfo 连段使用信息 若id为null则代表该伤害并非来源于具体的连段 Declaration public ComboUseInfo comboUseInfo Field Value Type Description ComboUseInfo damage 伤害量 Declaration public int damage Field Value Type Description System.Int32 damageType 伤害类型 Declaration public DamageType damageType Field Value Type Description DamageType triggerController 造成伤害的技能控制器 若为null则代表该伤害并非来源于具体的技能控制器 Declaration public SkillController triggerController Field Value Type Description SkillController"
  },
  "api/Global.DamageType.html": {
    "href": "api/Global.DamageType.html",
    "title": "Enum DamageType | 塔防游戏API文档",
    "keywords": "Enum DamageType 伤害类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum DamageType Fields Name Description Energy 能量 Physical 物理"
  },
  "api/Global.EventManager.html": {
    "href": "api/Global.EventManager.html",
    "title": "Class EventManager | 塔防游戏API文档",
    "keywords": "Class EventManager 事件管理器。 管理游戏中的各种事件。 Inheritance System.Object EventManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EventManager Fields AfterDamageCalculator 伤害计算后事件 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫 该事件触发于伤害计算之后，此时修改攻击者或受击者的属性值不会影响到最终伤害，通常与BeforeDamageCalculator事件成对使用 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> AfterDamageCalculator Field Value Type Description UnityAction < Unit , Unit , DamageInfo > AfterUnitDash 单位冲刺结束事件 参数1：冲刺的单位控制器 Declaration public static UnityAction<UnitController> AfterUnitDash Field Value Type Description UnityAction < UnitController > BeforeAttack 攻击前事件 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeAttack Field Value Type Description UnityAction < Unit , Unit , DamageInfo > BeforeDamage 受到真实伤害前事件 受到伤害不一定触发该事件，伤害可能被护盾等抵挡 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeDamage Field Value Type Description UnityAction < Unit , Unit , DamageInfo > BeforeDamageCalculator 伤害计算前事件 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫 该事件触发于伤害计算之前，此时可通过修改攻击者或受击者的属性值影响最终伤害，但要记得在AfterDamageCalculator事件中将属性值改回来 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeDamageCalculator Field Value Type Description UnityAction < Unit , Unit , DamageInfo > BeforeDeath 死亡前事件 可以在此通过增加target的HP实现复活效果 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeDeath Field Value Type Description UnityAction < Unit , Unit , DamageInfo > OnAttackImmune 免疫攻击事件 参数1：攻击者 参数2：受击者 参数3：伤害信息 参数4：触发免疫的状态 Declaration public static UnityAction<Unit, Unit, DamageInfo, State> OnAttackImmune Field Value Type Description UnityAction < Unit , Unit , DamageInfo , State > OnDeath 死亡事件 触发此事件时target必定死亡 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> OnDeath Field Value Type Description UnityAction < Unit , Unit , DamageInfo > OnInventoryUnitClick 背包单位点击事件 参数1：点击的单位 参数2：点击事件数据 Declaration public static UnityAction<Unit, PointerEventData> OnInventoryUnitClick Field Value Type Description UnityAction < Unit , PointerEventData > OnLevelEnd 关卡结束事件 Declaration public static UnityAction OnLevelEnd Field Value Type Description UnityAction OnLevelStart 关卡开始事件 Declaration public static UnityAction OnLevelStart Field Value Type Description UnityAction OnPlayerComboChanged 玩家连段变化事件 Declaration public static UnityAction OnPlayerComboChanged Field Value Type Description UnityAction OnSkillControllerDisable 技能控制器失活事件 参数1：失活的技能控制器 Declaration public static UnityAction<SkillController> OnSkillControllerDisable Field Value Type Description UnityAction < SkillController > OnSkillControllerEnable 技能控制器激活事件 参数1：激活的技能控制器 Declaration public static UnityAction<SkillController> OnSkillControllerEnable Field Value Type Description UnityAction < SkillController > OnSkillCustomTrigger 技能自定义触发事件 可以在动画中主动触发该事件 参数1：使用的技能控制器 参数2：自定义参数 Declaration public static UnityAction<SkillController, string> OnSkillCustomTrigger Field Value Type Description UnityAction < SkillController , System.String > OnSkillForget 技能遗忘事件 参数1：遗忘的技能 Declaration public static UnityAction<Skill> OnSkillForget Field Value Type Description UnityAction < Skill > OnSkillLearn 技能习得事件 参数1：习得的技能 Declaration public static UnityAction<Skill> OnSkillLearn Field Value Type Description UnityAction < Skill > OnSkillTriggerOther 技能触发非单位事件 参数1：使用的技能控制器 参数2：碰撞体 Declaration public static UnityAction<SkillController, Collider2D> OnSkillTriggerOther Field Value Type Description UnityAction < SkillController , Collider2D > OnSkillTriggerUnit 技能触发单位事件 参数1：使用的技能控制器 参数2：触发的单位 Declaration public static UnityAction<SkillController, Unit> OnSkillTriggerUnit Field Value Type Description UnityAction < SkillController , Unit > OnSkillUse 技能使用事件 参数1：使用的技能控制器 Declaration public static UnityAction<SkillController> OnSkillUse Field Value Type Description UnityAction < SkillController > OnStateGain 状态获得事件 参数1：获得的状态 Declaration public static UnityAction<State> OnStateGain Field Value Type Description UnityAction < State > OnStateLost 状态失去事件 参数1：失去的状态 Declaration public static UnityAction<State> OnStateLost Field Value Type Description UnityAction < State > OnUnitBuild 单位部署事件 参数1：部署的单位控制器 Declaration public static UnityAction<UnitController> OnUnitBuild Field Value Type Description UnityAction < UnitController > OnUnitCreate 单位生成事件 参数1：生成的单位控制器 Declaration public static UnityAction<UnitController> OnUnitCreate Field Value Type Description UnityAction < UnitController > OnUnitDash 单位冲刺事件 参数1：冲刺的单位控制器 Declaration public static UnityAction<UnitController> OnUnitDash Field Value Type Description UnityAction < UnitController > OnUnitGain 单位获得事件 参数1：获得的单位 Declaration public static UnityAction<Unit> OnUnitGain Field Value Type Description UnityAction < Unit > OnUnitInit 单位初始化事件 参数1：初始化的单位 Declaration public static UnityAction<Unit> OnUnitInit Field Value Type Description UnityAction < Unit > OnUnitLost 单位失去事件 参数1：失去的单位 Declaration public static UnityAction<Unit> OnUnitLost Field Value Type Description UnityAction < Unit >"
  },
  "api/Global.FactionType.html": {
    "href": "api/Global.FactionType.html",
    "title": "Enum FactionType | 塔防游戏API文档",
    "keywords": "Enum FactionType 阵营类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum FactionType Fields Name Description Ally 我方 Enemy 敌方 Neutral 中立"
  },
  "api/Global.FrameEntry.html": {
    "href": "api/Global.FrameEntry.html",
    "title": "Class FrameEntry | 塔防游戏API文档",
    "keywords": "Class FrameEntry 框架入口。 调用FrameEntry.Init()启动框架。 Inheritance System.Object FrameEntry Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FrameEntry : MonoBehaviour Fields autoSave 是否自动存档 Declaration public static bool autoSave Field Value Type Description System.Boolean Properties FrameVersion 当前框架版本。 Declaration public static string FrameVersion { get; } Property Value Type Description System.String Methods Init() 初始化框架。 Declaration public static IEnumerator Init() Returns Type Description IEnumerator Events OnGlobalRefresh 全局刷新事件，每20毫秒触发一次 目前仅用于刷新UI。 Declaration public static event UnityAction OnGlobalRefresh Event Type Type Description UnityAction"
  },
  "api/Global.GameManager.html": {
    "href": "api/Global.GameManager.html",
    "title": "Class GameManager | 塔防游戏API文档",
    "keywords": "Class GameManager 管理游戏进程的类。 Inheritance System.Object GameManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameManager : MonoBehaviour Fields DOUBLE_CLICK_TIME_THRESHOLD 双击触发间隔阈值 Declaration public const float DOUBLE_CLICK_TIME_THRESHOLD = 0.3F Field Value Type Description System.Single gameOverView 游戏结束视图 Declaration public GameOverView gameOverView Field Value Type Description GameOverView gameView 游戏HUD视图 Declaration public GameView gameView Field Value Type Description GameView getItemView 选择战利品视图 Declaration public GetItemView getItemView Field Value Type Description GetItemView globalView 全局视图 Declaration public GlobalView globalView Field Value Type Description GlobalView instance 实例对象 Declaration public static GameManager instance Field Value Type Description GameManager inventoryView 背包视图 Declaration public InventoryView inventoryView Field Value Type Description InventoryView levelUpView 单位升级视图 Declaration public LevelUpView levelUpView Field Value Type Description LevelUpView loadingView 加载视图 Declaration public static LoadingView loadingView Field Value Type Description LoadingView mapView 关卡选择视图 Declaration public MapView mapView Field Value Type Description MapView popWindowView 弹出窗口视图 Declaration public PopWindowView popWindowView Field Value Type Description PopWindowView settingsView 设置视图 Declaration public SettingsView settingsView Field Value Type Description SettingsView startScene 初始场景 Declaration public ConfigItemReference<SceneConfigItem> startScene Field Value Type Description ConfigItemReference < SceneConfigItem > unitInfoView 单位信息视图 Declaration public UnitInfoView unitInfoView Field Value Type Description UnitInfoView Properties CurrentLevel 当前关卡 Declaration public static ConfigItemReference<LevelsConfigItem> CurrentLevel { get; } Property Value Type Description ConfigItemReference < LevelsConfigItem > LevelController 关卡控制器 Declaration public static LevelController LevelController { get; set; } Property Value Type Description LevelController PlayerController 主角控制器 Declaration public static PlayerController PlayerController { get; } Property Value Type Description PlayerController Methods OpenLevel(ConfigItemReference<LevelsConfigItem>) Declaration public static void OpenLevel(ConfigItemReference<LevelsConfigItem> level) Parameters Type Name Description ConfigItemReference < LevelsConfigItem > level"
  },
  "api/Global.GameOverView.html": {
    "href": "api/Global.GameOverView.html",
    "title": "Class GameOverView | 塔防游戏API文档",
    "keywords": "Class GameOverView 处理游戏结束的视图。 Inheritance System.Object BaseView GameOverView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameOverView : BaseView Fields prompt Declaration public Image prompt Field Value Type Description Image restartButtonText Declaration public TextMeshProUGUI restartButtonText Field Value Type Description TextMeshProUGUI titleScene Declaration public ConfigItemReference<SceneConfigItem> titleScene Field Value Type Description ConfigItemReference < SceneConfigItem > titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI toTitleButtonText Declaration public TextMeshProUGUI toTitleButtonText Field Value Type Description TextMeshProUGUI Methods CheckDoubleClick() Declaration public void CheckDoubleClick() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Restart() Declaration public void Restart() ToTitle() Declaration public void ToTitle()"
  },
  "api/Global.GameSkillComboInfoShower.html": {
    "href": "api/Global.GameSkillComboInfoShower.html",
    "title": "Class GameSkillComboInfoShower | 塔防游戏API文档",
    "keywords": "Class GameSkillComboInfoShower 处理HUD中技能连段项目的类。 Inheritance System.Object GameSkillComboInfoShower Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameSkillComboInfoShower : MonoBehaviour Fields canvasGroup Declaration public CanvasGroup canvasGroup Field Value Type Description CanvasGroup leftSkillComboItem Declaration public SkillComboInfoShower leftSkillComboItem Field Value Type Description SkillComboInfoShower maxSpacing Declaration public float maxSpacing Field Value Type Description System.Single minSpacing Declaration public float minSpacing Field Value Type Description System.Single rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform rightSkillComboItem Declaration public SkillComboInfoShower rightSkillComboItem Field Value Type Description SkillComboInfoShower Properties AttackCombo Declaration public int AttackCombo { get; set; } Property Value Type Description System.Int32 IsRightAttack Declaration public bool IsRightAttack { get; set; } Property Value Type Description System.Boolean Methods Close(Single) Declaration public void Close(float duration) Parameters Type Name Description System.Single duration Open(Single) Declaration public void Open(float duration) Parameters Type Name Description System.Single duration Refresh() Declaration public void Refresh()"
  },
  "api/Global.GameView.html": {
    "href": "api/Global.GameView.html",
    "title": "Class GameView | 塔防游戏API文档",
    "keywords": "Class GameView 处理游戏HUD的视图。 Inheritance System.Object BaseView GameView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameView : BaseView Fields atkText Declaration public TextMeshProUGUI atkText Field Value Type Description TextMeshProUGUI bottom Declaration public Transform bottom Field Value Type Description Transform chargeBar Declaration public Image chargeBar Field Value Type Description Image comboCursor Declaration public Image comboCursor Field Value Type Description Image comboItemSpacing Declaration public float comboItemSpacing Field Value Type Description System.Single countDownText Declaration public TextMeshProUGUI countDownText Field Value Type Description TextMeshProUGUI defText Declaration public TextMeshProUGUI defText Field Value Type Description TextMeshProUGUI edfText Declaration public TextMeshProUGUI edfText Field Value Type Description TextMeshProUGUI ersText Declaration public TextMeshProUGUI ersText Field Value Type Description TextMeshProUGUI healthBar Declaration public Image healthBar Field Value Type Description Image hotKeyEscText Declaration public TextMeshProUGUI hotKeyEscText Field Value Type Description TextMeshProUGUI hotKeyMText Declaration public TextMeshProUGUI hotKeyMText Field Value Type Description TextMeshProUGUI hotKeyTabText Declaration public TextMeshProUGUI hotKeyTabText Field Value Type Description TextMeshProUGUI hpText Declaration public TextMeshProUGUI hpText Field Value Type Description TextMeshProUGUI left Declaration public Transform left Field Value Type Description Transform levelTask Declaration public Transform levelTask Field Value Type Description Transform levelTaskText Declaration public TextMeshProUGUI levelTaskText Field Value Type Description TextMeshProUGUI pickUpPrompt Declaration public Image pickUpPrompt Field Value Type Description Image resText Declaration public TextMeshProUGUI resText Field Value Type Description TextMeshProUGUI skillComboContent Declaration public Transform skillComboContent Field Value Type Description Transform skillComboPrefab Declaration public GameSkillComboInfoShower skillComboPrefab Field Value Type Description GameSkillComboInfoShower spdText Declaration public TextMeshProUGUI spdText Field Value Type Description TextMeshProUGUI top Declaration public Transform top Field Value Type Description Transform touText Declaration public TextMeshProUGUI touText Field Value Type Description TextMeshProUGUI unitInfoShower Declaration public UnitInfoShower unitInfoShower Field Value Type Description UnitInfoShower Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.GetItemView.html": {
    "href": "api/Global.GetItemView.html",
    "title": "Class GetItemView | 塔防游戏API文档",
    "keywords": "Class GetItemView Inheritance System.Object BaseView GetItemView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GetItemView : BaseView Fields content Declaration public Transform content Field Value Type Description Transform itemPrefab Declaration public UnitInfoShower itemPrefab Field Value Type Description UnitInfoShower submitButton Declaration public Button submitButton Field Value Type Description Button Methods GetItem() Declaration public void GetItem() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.GlobalView.html": {
    "href": "api/Global.GlobalView.html",
    "title": "Class GlobalView | 塔防游戏API文档",
    "keywords": "Class GlobalView 处理全局UI的视图。 一些不确定视图归属的UI可以放在这里。 Inheritance System.Object BaseView GlobalView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GlobalView : BaseView Fields cursorEffect 光标特效 Declaration public Image cursorEffect Field Value Type Description Image popMessageWindow 弹出信息窗口 Declaration public PopMessageWindow popMessageWindow Field Value Type Description PopMessageWindow popWindow 弹出窗口 Declaration public PopWindow popWindow Field Value Type Description PopWindow Methods OnChangeCursor(InputAction.CallbackContext) Declaration public void OnChangeCursor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | 塔防游戏API文档",
    "keywords": "Namespace Global Classes AnimationUtils 动画的工具类。 AutoSorting2D 根据y轴自动处理遮挡关系。 BaseConfigItem 所有配置项的父类。 BaseConfigTable<T> 所有配置表的父类。 BaseEvent<T> 事件触发类。 注意事件被触发并不意味着本单位参与了该事件，一般要先判断本单位是参与者再执行逻辑。 BaseSingleton<T> 单例模式父类。 BaseUserData 处理用户数据的类。 本类为抽象类，具体数据由子类管理。 BaseView 所有视图的父类。 BaseWindow 所有窗口的父类。 ConfigEditor 配置表的Inspector窗口。 ConfigEditorWindow 配置表的编辑器窗口。 ConfigItemDrawer 引用类型配置项在编辑器内的绘制逻辑。 ConfigItemReference<T> 用于引用配置项的类。 ConfigManager 配置管理器。 该管理器会自动查找Resources文件夹下的所有配置表数据并记录。 DamageInfo 伤害信息 EventManager 事件管理器。 管理游戏中的各种事件。 FrameEntry 框架入口。 调用FrameEntry.Init()启动框架。 GameManager 管理游戏进程的类。 GameOverView 处理游戏结束的视图。 GameSkillComboInfoShower 处理HUD中技能连段项目的类。 GameView 处理游戏HUD的视图。 GetItemView GlobalView 处理全局UI的视图。 一些不确定视图归属的UI可以放在这里。 InventoryItem 处理背包项目的类。 InventoryView 处理背包与装备的视图。 ItemDrop 拖拽事件接收脚本。 LanguageConfig 语言配置列表。 LanguageConfigItem 语言配置数据。 Level 处理关卡的类。 LevelController 控制关卡的类。 LevelEvent LevelEvent000 LevelsConfig 关卡配置列表。 LevelsConfigItem 关卡配置数据。 LevelUpView 处理单位升级的视图。 LevelView 处理关卡场景的视图。 LoadingView 处理加载界面的视图。 MapView 处理关卡选择的视图。 MartialArtEvent ObservableUserData<T> 处理可监听用户数据的类。 本类为抽象类，具体数据由子类管理。 PlatformCommonConfig 平台通用配置列表。 PlatformCommonConfigItem 平台通用配置数据。 PlatformManager 平台管理器。 Player 处理主角的类。 PlayerController 控制主角行为的类。 PlayerInfoShower PopMessageWindow 处理弹出消息的类。 PopWindow 处理弹出窗口的类。 PopWindowView 处理弹出窗口的视图。 SceneConfig 场景配置列表。 SceneConfigItem 场景配置数据。 SettingsView 处理设置的视图。 Skill 处理技能的类。 SkillComboInfoShower 处理技能连段项目的类。 SkillController 控制技能行为的类。 SkillEvent SkillEvent000 SkillEvent001 SkillEvent002 SkillEvent003 SkillEvent004 SkillEvent005 SkillEvent006 SkillEvent007 SkillEvent008 SkillEvent009 SkillEvent010 SkillEvent011 SkillEvent012 SkillEvent013 SkillEvent014 SkillEvent015 SkillEvent016 SkillsConfig 技能配置列表。 SkillsConfigItem 技能配置数据。 State 处理状态的类。 StateEvent StateEvent002 StateEvent003 StateEvent004 StateEvent005 StateEvent006 StateEvent010 StateInfoShower 处理状态信息显示的类。 StatesConfig 状态配置列表。 StatesConfigItem 状态配置数据。 SubTest SystemData 处理系统设置的类。 Task 处理任务的类。 TaskEvent TaskEvent000 TaskEvent001 TasksConfig 任务配置列表。 TasksConfigItem 任务配置数据。 Test TitleView 处理场景TitleScene的视图。 Unit 处理单位的类。 UnitController 控制单位行为的类。 UnitCreater 单位生成器 UnitEvent UnitEvent000 UnitEvent002 UnitEvent007 UnitEvent010 UnitEvent015 UnitEvent017 UnitEvent019 UnitEvent021 UnitEvent022 UnitInfoShower 处理单位信息显示的类。 UnitInfoView 处理单位信息的视图。 UnitsConfig 单位配置列表。 UnitsConfigItem 单位配置数据。 UserDataManager 用户数据管理器 Utils 工具类。 WinLevelArea 关卡胜利触发器。 Structs ComboInfo 连段信息 ComboUseInfo 连段使用信息 LanguageConfigItem.LanguageInfo 语言文本键值对信息。 PopShowInfo 弹出窗口显示信息 UserDataManager.UserDataInfo 存档信息 Interfaces IAfterDamageCalculatorHandler 伤害计算后事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之后，此时修改攻击者或受击者的属性值不会影响到最终伤害，通常与BeforeDamageCalculator事件成对使用。 IAfterUnitDashHandler 单位冲刺结束事件。 IAttackImmuneHandler 免疫攻击事件。 IBeforeAttackHandler 攻击前事件。 IBeforeDamageCalculatorHandler 伤害计算前事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之前，此时可通过修改攻击者或受击者的属性值影响最终伤害，但要记得在AfterDamageCalculator事件中将属性值改回来。 IBeforeDamageHandler 受到真实伤害前事件。 受到攻击不一定触发该事件，伤害可能被护盾等抵挡。 IBeforeDeathHandler 死亡前事件。 可以在此通过增加target的HP实现复活效果。 IDeathHandler 死亡事件。 触发此事件时target必定死亡。 IInventoryUnitClickHandler 背包单位点击事件。 ILevelEndHandler 关卡结束事件。 ILevelStartHandler 关卡开始事件。 ISkillControllerDisableHandler 技能控制器失活事件。 ISkillControllerEnableHandler 技能控制器激活事件。 ISkillCustomTriggerHandler 技能自定义触发事件。 可以在动画中主动触发该事件。 ISkillForgetHandler 技能遗忘事件。 ISkillLearnHandler 技能习得事件。 ISkillTriggerOtherHandler 技能触发非单位事件。 ISkillTriggerUnitHandler 技能触发单位事件。 ISkillUseHandler 技能使用事件。 IStateGainHandler 状态获得事件。 IStateLostHandler 状态失去事件。 IUnitBuildHandler 单位部署事件。 IUnitCreateHandler 单位生成事件。 IUnitDashHandler 单位冲刺事件。 IUnitGainHandler 单位获得事件。 IUnitInitHandler 单位初始化事件。 IUnitLostHandler 单位失去事件。 Enums AttackType 攻击类型 DamageType 伤害类型 FactionType 阵营类型 LanguageType 语言类型 MoveType 单位移动类型 PlatformType 平台类型 RaceType 种族类型 SkillMoveType 技能移动类型 UnitCompoundType 单位复合类型 UnitType 单位类型 Delegates ObservableUserData<T>.DataChangedHandler 数据改变事件用委托"
  },
  "api/Global.IAfterDamageCalculatorHandler.html": {
    "href": "api/Global.IAfterDamageCalculatorHandler.html",
    "title": "Interface IAfterDamageCalculatorHandler | 塔防游戏API文档",
    "keywords": "Interface IAfterDamageCalculatorHandler 伤害计算后事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之后，此时修改攻击者或受击者的属性值不会影响到最终伤害，通常与BeforeDamageCalculator事件成对使用。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IAfterDamageCalculatorHandler Methods AfterDamageCalculator(Unit, Unit, DamageInfo) 伤害计算后事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之后，此时修改攻击者或受击者的属性值不会影响到最终伤害，通常与BeforeDamageCalculator事件成对使用。 Declaration void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IAfterUnitDashHandler.html": {
    "href": "api/Global.IAfterUnitDashHandler.html",
    "title": "Interface IAfterUnitDashHandler | 塔防游戏API文档",
    "keywords": "Interface IAfterUnitDashHandler 单位冲刺结束事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IAfterUnitDashHandler Methods AfterUnitDash(UnitController) 单位冲刺结束事件。 Declaration void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController 冲刺的单位控制器"
  },
  "api/Global.IAttackImmuneHandler.html": {
    "href": "api/Global.IAttackImmuneHandler.html",
    "title": "Interface IAttackImmuneHandler | 塔防游戏API文档",
    "keywords": "Interface IAttackImmuneHandler 免疫攻击事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IAttackImmuneHandler Methods OnAttackImmune(Unit, Unit, DamageInfo, State) 免疫攻击事件。 Declaration void OnAttackImmune(Unit attacker, Unit target, DamageInfo damageInfo, State state) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息 State state 触发免疫的状态"
  },
  "api/Global.IBeforeAttackHandler.html": {
    "href": "api/Global.IBeforeAttackHandler.html",
    "title": "Interface IBeforeAttackHandler | 塔防游戏API文档",
    "keywords": "Interface IBeforeAttackHandler 攻击前事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBeforeAttackHandler Methods BeforeAttack(Unit, Unit, DamageInfo) 攻击前事件。 Declaration void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IBeforeDamageCalculatorHandler.html": {
    "href": "api/Global.IBeforeDamageCalculatorHandler.html",
    "title": "Interface IBeforeDamageCalculatorHandler | 塔防游戏API文档",
    "keywords": "Interface IBeforeDamageCalculatorHandler 伤害计算前事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之前，此时可通过修改攻击者或受击者的属性值影响最终伤害，但要记得在AfterDamageCalculator事件中将属性值改回来。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBeforeDamageCalculatorHandler Methods BeforeDamageCalculator(Unit, Unit, DamageInfo) 伤害计算前事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 该事件触发于伤害计算之前，此时可通过修改攻击者或受击者的属性值影响最终伤害，但要记得在AfterDamageCalculator事件中将属性值改回来。 Declaration void BeforeDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IBeforeDamageHandler.html": {
    "href": "api/Global.IBeforeDamageHandler.html",
    "title": "Interface IBeforeDamageHandler | 塔防游戏API文档",
    "keywords": "Interface IBeforeDamageHandler 受到真实伤害前事件。 受到攻击不一定触发该事件，伤害可能被护盾等抵挡。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBeforeDamageHandler Methods BeforeDamage(Unit, Unit, DamageInfo) 受到真实伤害前事件。 受到攻击不一定触发该事件，伤害可能被护盾等抵挡。 Declaration void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IBeforeDeathHandler.html": {
    "href": "api/Global.IBeforeDeathHandler.html",
    "title": "Interface IBeforeDeathHandler | 塔防游戏API文档",
    "keywords": "Interface IBeforeDeathHandler 死亡前事件。 可以在此通过增加target的HP实现复活效果。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IBeforeDeathHandler Methods BeforeDeath(Unit, Unit, DamageInfo) 死亡前事件。 可以在此通过增加target的HP实现复活效果。 Declaration void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IDeathHandler.html": {
    "href": "api/Global.IDeathHandler.html",
    "title": "Interface IDeathHandler | 塔防游戏API文档",
    "keywords": "Interface IDeathHandler 死亡事件。 触发此事件时target必定死亡。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IDeathHandler Methods OnDeath(Unit, Unit, DamageInfo) 死亡事件。 触发此事件时target必定死亡。 Declaration void OnDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.IInventoryUnitClickHandler.html": {
    "href": "api/Global.IInventoryUnitClickHandler.html",
    "title": "Interface IInventoryUnitClickHandler | 塔防游戏API文档",
    "keywords": "Interface IInventoryUnitClickHandler 背包单位点击事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IInventoryUnitClickHandler Methods OnInventoryUnitClick(Unit, PointerEventData) 背包单位点击事件。 Declaration void OnInventoryUnitClick(Unit unit, PointerEventData eventData) Parameters Type Name Description Unit unit 点击的单位 PointerEventData eventData 点击事件数据"
  },
  "api/Global.ILevelEndHandler.html": {
    "href": "api/Global.ILevelEndHandler.html",
    "title": "Interface ILevelEndHandler | 塔防游戏API文档",
    "keywords": "Interface ILevelEndHandler 关卡结束事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ILevelEndHandler Methods OnLevelEnd() 关卡结束事件。 Declaration void OnLevelEnd()"
  },
  "api/Global.ILevelStartHandler.html": {
    "href": "api/Global.ILevelStartHandler.html",
    "title": "Interface ILevelStartHandler | 塔防游戏API文档",
    "keywords": "Interface ILevelStartHandler 关卡开始事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ILevelStartHandler Methods OnLevelStart() 关卡开始事件。 Declaration void OnLevelStart()"
  },
  "api/Global.InventoryItem.html": {
    "href": "api/Global.InventoryItem.html",
    "title": "Class InventoryItem | 塔防游戏API文档",
    "keywords": "Class InventoryItem 处理背包项目的类。 Inheritance System.Object UnitInfoShower InventoryItem Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler IBeginDragHandler IDragHandler IEndDragHandler Inherited Members UnitInfoShower.enablePopWindow UnitInfoShower.nameText UnitInfoShower.buildedText UnitInfoShower.descText UnitInfoShower.customText UnitInfoShower.iconImage UnitInfoShower.iconText UnitInfoShower.portraitImage UnitInfoShower.levelImage UnitInfoShower.levelSprites UnitInfoShower.skillComboContent UnitInfoShower.skillComboPrefab UnitInfoShower.stateContent UnitInfoShower.statePrefab UnitInfoShower.inventoryUnitContent UnitInfoShower.inventoryUnitPrefab UnitInfoShower.inventoryUnitShowType UnitInfoShower.rectTransform UnitInfoShower.OnPointerClickEvent UnitInfoShower.OnSkillComboSelect UnitInfoShower.OnStateSelect UnitInfoShower.OnInventoryUnitSelect UnitInfoShower.TargetUnit UnitInfoShower.TargetConfig UnitInfoShower.Awake() UnitInfoShower.OnEnable() UnitInfoShower.OnDisable() UnitInfoShower.Refresh() UnitInfoShower.OnPointerEnter(PointerEventData) UnitInfoShower.OnPointerExit(PointerEventData) UnitInfoShower.OnPointerDown(PointerEventData) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryItem : UnitInfoShower Fields skillShowerPrefab Declaration public UnitInfoShower skillShowerPrefab Field Value Type Description UnitInfoShower Methods OnBeginDrag(PointerEventData) Declaration public void OnBeginDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnEndDrag(PointerEventData) Declaration public void OnEndDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerClick(PointerEventData) Declaration public override void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Overrides UnitInfoShower.OnPointerClick(PointerEventData) Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler IBeginDragHandler IDragHandler IEndDragHandler"
  },
  "api/Global.InventoryView.html": {
    "href": "api/Global.InventoryView.html",
    "title": "Class InventoryView | 塔防游戏API文档",
    "keywords": "Class InventoryView 处理背包与装备的视图。 Inheritance System.Object BaseView InventoryView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryView : BaseView Fields canvasGroup Declaration public CanvasGroup canvasGroup Field Value Type Description CanvasGroup content1 Declaration public Transform content1 Field Value Type Description Transform content2 Declaration public Transform content2 Field Value Type Description Transform content3 Declaration public Transform content3 Field Value Type Description Transform content4 Declaration public Transform content4 Field Value Type Description Transform content5 Declaration public Transform content5 Field Value Type Description Transform contentLayout Declaration public HorizontalLayoutGroup contentLayout Field Value Type Description HorizontalLayoutGroup flySwordContent Declaration public Transform flySwordContent Field Value Type Description Transform flySwordContentUnit Declaration public ConfigItemReference<UnitsConfigItem> flySwordContentUnit Field Value Type Description ConfigItemReference < UnitsConfigItem > flySwordItemPrefab Declaration public InventoryItem flySwordItemPrefab Field Value Type Description InventoryItem flySwordNoItemText Declaration public TextMeshProUGUI flySwordNoItemText Field Value Type Description TextMeshProUGUI itemPrefab1 Declaration public InventoryItem itemPrefab1 Field Value Type Description InventoryItem itemPrefab2 Declaration public InventoryItem itemPrefab2 Field Value Type Description InventoryItem itemPrefab3 Declaration public InventoryItem itemPrefab3 Field Value Type Description InventoryItem itemPrefab4 Declaration public InventoryItem itemPrefab4 Field Value Type Description InventoryItem itemPrefab5 Declaration public InventoryItem itemPrefab5 Field Value Type Description InventoryItem leftSkillComboContent Declaration public Transform leftSkillComboContent Field Value Type Description Transform noItemText1 Declaration public TextMeshProUGUI noItemText1 Field Value Type Description TextMeshProUGUI noItemText2 Declaration public TextMeshProUGUI noItemText2 Field Value Type Description TextMeshProUGUI noItemText3 Declaration public TextMeshProUGUI noItemText3 Field Value Type Description TextMeshProUGUI noItemText4 Declaration public TextMeshProUGUI noItemText4 Field Value Type Description TextMeshProUGUI noItemText5 Declaration public TextMeshProUGUI noItemText5 Field Value Type Description TextMeshProUGUI rightSkillComboContent Declaration public Transform rightSkillComboContent Field Value Type Description Transform skillComboPrefab Declaration public SkillComboInfoShower skillComboPrefab Field Value Type Description SkillComboInfoShower titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Methods OnButton2Click() Declaration public void OnButton2Click() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnContent2Drop(PointerEventData) Declaration public void OnContent2Drop(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.ISkillControllerDisableHandler.html": {
    "href": "api/Global.ISkillControllerDisableHandler.html",
    "title": "Interface ISkillControllerDisableHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillControllerDisableHandler 技能控制器失活事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillControllerDisableHandler Methods OnSkillControllerDisable(SkillController) 技能控制器失活事件。 Declaration void OnSkillControllerDisable(SkillController skillController) Parameters Type Name Description SkillController skillController 失活的技能控制器"
  },
  "api/Global.ISkillControllerEnableHandler.html": {
    "href": "api/Global.ISkillControllerEnableHandler.html",
    "title": "Interface ISkillControllerEnableHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillControllerEnableHandler 技能控制器激活事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillControllerEnableHandler Methods OnSkillControllerEnable(SkillController) 技能控制器激活事件。 Declaration void OnSkillControllerEnable(SkillController skillController) Parameters Type Name Description SkillController skillController 激活的技能控制器"
  },
  "api/Global.ISkillCustomTriggerHandler.html": {
    "href": "api/Global.ISkillCustomTriggerHandler.html",
    "title": "Interface ISkillCustomTriggerHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillCustomTriggerHandler 技能自定义触发事件。 可以在动画中主动触发该事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillCustomTriggerHandler Methods OnSkillCustomTrigger(SkillController, String) 技能自定义触发事件。 可以在动画中主动触发该事件。 Declaration void OnSkillCustomTrigger(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController 使用的技能控制器 System.String arg 自定义参数"
  },
  "api/Global.ISkillForgetHandler.html": {
    "href": "api/Global.ISkillForgetHandler.html",
    "title": "Interface ISkillForgetHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillForgetHandler 技能遗忘事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillForgetHandler Methods OnSkillForget(Skill) 技能遗忘事件。 Declaration void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill 遗忘的技能"
  },
  "api/Global.ISkillLearnHandler.html": {
    "href": "api/Global.ISkillLearnHandler.html",
    "title": "Interface ISkillLearnHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillLearnHandler 技能习得事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillLearnHandler Methods OnSkillLearn(Skill) 技能习得事件。 Declaration void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill 习得的技能"
  },
  "api/Global.ISkillTriggerOtherHandler.html": {
    "href": "api/Global.ISkillTriggerOtherHandler.html",
    "title": "Interface ISkillTriggerOtherHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillTriggerOtherHandler 技能触发非单位事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillTriggerOtherHandler Methods OnSkillTriggerOther(SkillController, Collider2D) 技能触发非单位事件。 Declaration void OnSkillTriggerOther(SkillController skillController, Collider2D collider) Parameters Type Name Description SkillController skillController 使用的技能控制器 Collider2D collider 碰撞体"
  },
  "api/Global.ISkillTriggerUnitHandler.html": {
    "href": "api/Global.ISkillTriggerUnitHandler.html",
    "title": "Interface ISkillTriggerUnitHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillTriggerUnitHandler 技能触发单位事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillTriggerUnitHandler Methods OnSkillTriggerUnit(SkillController, Unit) 技能触发单位事件。 Declaration void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController 使用的技能控制器 Unit target 触发的单位"
  },
  "api/Global.ISkillUseHandler.html": {
    "href": "api/Global.ISkillUseHandler.html",
    "title": "Interface ISkillUseHandler | 塔防游戏API文档",
    "keywords": "Interface ISkillUseHandler 技能使用事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface ISkillUseHandler Methods OnSkillUse(SkillController) 技能使用事件。 Declaration void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController 使用的技能控制器"
  },
  "api/Global.IStateGainHandler.html": {
    "href": "api/Global.IStateGainHandler.html",
    "title": "Interface IStateGainHandler | 塔防游戏API文档",
    "keywords": "Interface IStateGainHandler 状态获得事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IStateGainHandler Methods OnStateGain(State) 状态获得事件。 Declaration void OnStateGain(State state) Parameters Type Name Description State state 获得的状态"
  },
  "api/Global.IStateLostHandler.html": {
    "href": "api/Global.IStateLostHandler.html",
    "title": "Interface IStateLostHandler | 塔防游戏API文档",
    "keywords": "Interface IStateLostHandler 状态失去事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IStateLostHandler Methods OnStateLost(State) 状态失去事件。 Declaration void OnStateLost(State state) Parameters Type Name Description State state 失去的状态"
  },
  "api/Global.ItemDrop.html": {
    "href": "api/Global.ItemDrop.html",
    "title": "Class ItemDrop | 塔防游戏API文档",
    "keywords": "Class ItemDrop 拖拽事件接收脚本。 Inheritance System.Object ItemDrop Implements IDropHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ItemDrop : MonoBehaviour Fields OnItemDrop Declaration public UnityEvent<PointerEventData> OnItemDrop Field Value Type Description UnityEvent < PointerEventData > Methods OnDrop(PointerEventData) Declaration public void OnDrop(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IDropHandler"
  },
  "api/Global.IUnitBuildHandler.html": {
    "href": "api/Global.IUnitBuildHandler.html",
    "title": "Interface IUnitBuildHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitBuildHandler 单位部署事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitBuildHandler Methods OnUnitBuild(UnitController) 单位部署事件。 Declaration void OnUnitBuild(UnitController unitController) Parameters Type Name Description UnitController unitController 部署的单位控制器"
  },
  "api/Global.IUnitCreateHandler.html": {
    "href": "api/Global.IUnitCreateHandler.html",
    "title": "Interface IUnitCreateHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitCreateHandler 单位生成事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitCreateHandler Methods OnUnitCreate(UnitController) 单位生成事件。 Declaration void OnUnitCreate(UnitController unitController) Parameters Type Name Description UnitController unitController 生成的单位控制器"
  },
  "api/Global.IUnitDashHandler.html": {
    "href": "api/Global.IUnitDashHandler.html",
    "title": "Interface IUnitDashHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitDashHandler 单位冲刺事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitDashHandler Methods OnUnitDash(UnitController) 单位冲刺事件。 Declaration void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController 冲刺的单位控制器"
  },
  "api/Global.IUnitGainHandler.html": {
    "href": "api/Global.IUnitGainHandler.html",
    "title": "Interface IUnitGainHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitGainHandler 单位获得事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitGainHandler Methods OnUnitGain(Unit) 单位获得事件。 Declaration void OnUnitGain(Unit unit) Parameters Type Name Description Unit unit 获得的单位"
  },
  "api/Global.IUnitInitHandler.html": {
    "href": "api/Global.IUnitInitHandler.html",
    "title": "Interface IUnitInitHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitInitHandler 单位初始化事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitInitHandler Methods OnUnitInit(Unit) 单位初始化事件。 Declaration void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit 初始化的单位"
  },
  "api/Global.IUnitLostHandler.html": {
    "href": "api/Global.IUnitLostHandler.html",
    "title": "Interface IUnitLostHandler | 塔防游戏API文档",
    "keywords": "Interface IUnitLostHandler 单位失去事件。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IUnitLostHandler Methods OnUnitLost(Unit) 单位失去事件。 Declaration void OnUnitLost(Unit unit) Parameters Type Name Description Unit unit 失去的单位"
  },
  "api/Global.LanguageConfig.html": {
    "href": "api/Global.LanguageConfig.html",
    "title": "Class LanguageConfig | 塔防游戏API文档",
    "keywords": "Class LanguageConfig 语言配置列表。 Inheritance System.Object BaseConfigTable < LanguageConfigItem > LanguageConfig Inherited Members BaseConfigTable<LanguageConfigItem>.tabName BaseConfigTable<LanguageConfigItem>.frameVersion BaseConfigTable<LanguageConfigItem>.version BaseConfigTable<LanguageConfigItem>.enableConsole BaseConfigTable<LanguageConfigItem>.configList BaseConfigTable<LanguageConfigItem>.ConfigTableVersion BaseConfigTable<LanguageConfigItem>.Item[Int32] BaseConfigTable<LanguageConfigItem>.Item[String] BaseConfigTable<LanguageConfigItem>.GetConfigByName(String) BaseConfigTable<LanguageConfigItem>.GetConfigIndex(LanguageConfigItem) BaseConfigTable<LanguageConfigItem>.ConfigCount Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LanguageConfig : BaseConfigTable<LanguageConfigItem> Properties ConfigNameList Declaration public override List<string> ConfigNameList { get; } Property Value Type Description List < System.String > Overrides BaseConfigTable<LanguageConfigItem>.ConfigNameList"
  },
  "api/Global.LanguageConfigItem.html": {
    "href": "api/Global.LanguageConfigItem.html",
    "title": "Class LanguageConfigItem | 塔防游戏API文档",
    "keywords": "Class LanguageConfigItem 语言配置数据。 Inheritance System.Object BaseConfigItem LanguageConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class LanguageConfigItem : BaseConfigItem Fields texts 语言文本列表 Declaration public List<LanguageConfigItem.LanguageInfo> texts Field Value Type Description List < LanguageConfigItem.LanguageInfo >"
  },
  "api/Global.LanguageConfigItem.LanguageInfo.html": {
    "href": "api/Global.LanguageConfigItem.LanguageInfo.html",
    "title": "Struct LanguageConfigItem.LanguageInfo | 塔防游戏API文档",
    "keywords": "Struct LanguageConfigItem.LanguageInfo 语言文本键值对信息。 Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public struct LanguageInfo Fields key 文本键值 Declaration public string key Field Value Type Description System.String value 目标文本 Declaration public string value Field Value Type Description System.String"
  },
  "api/Global.LanguageType.html": {
    "href": "api/Global.LanguageType.html",
    "title": "Enum LanguageType | 塔防游戏API文档",
    "keywords": "Enum LanguageType 语言类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum LanguageType Fields Name Description English 英文 SChinese 简体中文 TChinese 繁体中文"
  },
  "api/Global.Level.html": {
    "href": "api/Global.Level.html",
    "title": "Class Level | 塔防游戏API文档",
    "keywords": "Class Level 处理关卡的类。 Inheritance System.Object BaseUserData ObservableUserData < Level > Level Inherited Members ObservableUserData<Level>.OnDataChanged ObservableUserData<Level>.TriggerDataChanged(Level) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Level : ObservableUserData<Level> Constructors Level(String) Declaration public Level(string configID) Parameters Type Name Description System.String configID Fields configID Declaration public readonly string configID Field Value Type Description System.String id Declaration public readonly string id Field Value Type Description System.String Properties Config 关卡的基础配置。 Declaration public LevelsConfigItem Config { get; } Property Value Type Description LevelsConfigItem Controller 关卡的控制器。 Declaration public LevelController Controller { get; set; } Property Value Type Description LevelController CountDown 倒计时。 负数代表取消计时 Declaration public int CountDown { get; set; } Property Value Type Description System.Int32 CreateUnitCount 单位生成数量。 Declaration public int CreateUnitCount { get; set; } Property Value Type Description System.Int32 CreateUnitDuration 单位生成间隔（秒）。 Declaration public float CreateUnitDuration { get; set; } Property Value Type Description System.Single CreateUnitList 单位生成列表。 Declaration public ObservableCollection<ConfigItemReference<UnitsConfigItem>> CreateUnitList { get; } Property Value Type Description ObservableCollection < ConfigItemReference < UnitsConfigItem >> EventScript 事件脚本。 Declaration public LevelEvent EventScript { get; } Property Value Type Description LevelEvent TargetKillCount 目标杀怪数。 Declaration public int TargetKillCount { get; set; } Property Value Type Description System.Int32 TaskList 关卡的任务列表。 Declaration public ReadOnlyCollection<Task> TaskList { get; } Property Value Type Description ReadOnlyCollection < Task > 任务列表 Methods AddListener() Declaration public void AddListener() AddTask(Task) 添加任务。 Declaration public bool AddTask(Task task) Parameters Type Name Description Task task 任务 Returns Type Description System.Boolean 操作是否成功 AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Init() Declaration public void Init() RemoveTask(Task) 移除任务。 Declaration public bool RemoveTask(Task task) Parameters Type Name Description Task task 任务 Returns Type Description System.Boolean 操作是否成功 Events OnCountDownChanged 倒计时变化事件 Declaration public event UnityAction OnCountDownChanged Event Type Type Description UnityAction"
  },
  "api/Global.LevelController.html": {
    "href": "api/Global.LevelController.html",
    "title": "Class LevelController | 塔防游戏API文档",
    "keywords": "Class LevelController 控制关卡的类。 Inheritance System.Object LevelController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelController : MonoBehaviour Fields input Declaration public PlayerInput input Field Value Type Description PlayerInput player Declaration public PlayerController player Field Value Type Description PlayerController unitControllerList Declaration public ObservableCollection<UnitController> unitControllerList Field Value Type Description ObservableCollection < UnitController > winLevelArea Declaration public WinLevelArea winLevelArea Field Value Type Description WinLevelArea Properties Config Declaration public LevelsConfigItem Config { get; } Property Value Type Description LevelsConfigItem Data Declaration public Level Data { get; } Property Value Type Description Level LevelStoped Declaration public bool LevelStoped { get; } Property Value Type Description System.Boolean PlayerData Declaration public Player PlayerData { get; } Property Value Type Description Player Methods CreateUnit(ConfigItemReference<UnitsConfigItem>) Declaration public bool CreateUnit(ConfigItemReference<UnitsConfigItem> unitConfig) Parameters Type Name Description ConfigItemReference < UnitsConfigItem > unitConfig Returns Type Description System.Boolean EndLevel() Declaration public void EndLevel() OnOpenOrCloseHUD(InputAction.CallbackContext) Declaration public void OnOpenOrCloseHUD(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseInventory(InputAction.CallbackContext) Declaration public void OnOpenOrCloseInventory(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseMap(InputAction.CallbackContext) Declaration public void OnOpenOrCloseMap(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseSettings(InputAction.CallbackContext) Declaration public void OnOpenOrCloseSettings(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context StopGame() Declaration public void StopGame() WinLevel() Declaration public void WinLevel()"
  },
  "api/Global.LevelEvent.html": {
    "href": "api/Global.LevelEvent.html",
    "title": "Class LevelEvent | 塔防游戏API文档",
    "keywords": "Class LevelEvent Inheritance System.Object BaseEvent < Level > LevelEvent LevelEvent000 Inherited Members BaseEvent<Level>.Owner BaseEvent<Level>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Level>.SetInScreen(Transform, Single, Single) BaseEvent<Level>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelEvent : BaseEvent<Level> Methods DoBehaviour(LevelController) 关卡控制器的行为。 Declaration public virtual IEnumerator DoBehaviour(LevelController levelController) Parameters Type Name Description LevelController levelController 关卡控制器 Returns Type Description IEnumerator OnAnyViewClose(BaseView) Declaration protected override void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view Overrides BaseEvent<Level>.OnAnyViewClose(BaseView)"
  },
  "api/Global.LevelEvent000.html": {
    "href": "api/Global.LevelEvent000.html",
    "title": "Class LevelEvent000 | 塔防游戏API文档",
    "keywords": "Class LevelEvent000 Inheritance System.Object BaseEvent < Level > LevelEvent LevelEvent000 Implements ILevelStartHandler Inherited Members LevelEvent.DoBehaviour(LevelController) LevelEvent.OnAnyViewClose(BaseView) BaseEvent<Level>.Owner BaseEvent<Level>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Level>.SetInScreen(Transform, Single, Single) BaseEvent<Level>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelEvent000 : LevelEvent, ILevelStartHandler Methods OnLevelStart() Declaration public void OnLevelStart() Implements ILevelStartHandler"
  },
  "api/Global.LevelsConfig.html": {
    "href": "api/Global.LevelsConfig.html",
    "title": "Class LevelsConfig | 塔防游戏API文档",
    "keywords": "Class LevelsConfig 关卡配置列表。 Inheritance System.Object BaseConfigTable < LevelsConfigItem > LevelsConfig Inherited Members BaseConfigTable<LevelsConfigItem>.tabName BaseConfigTable<LevelsConfigItem>.frameVersion BaseConfigTable<LevelsConfigItem>.version BaseConfigTable<LevelsConfigItem>.enableConsole BaseConfigTable<LevelsConfigItem>.configList BaseConfigTable<LevelsConfigItem>.ConfigTableVersion BaseConfigTable<LevelsConfigItem>.Item[Int32] BaseConfigTable<LevelsConfigItem>.Item[String] BaseConfigTable<LevelsConfigItem>.GetConfigByName(String) BaseConfigTable<LevelsConfigItem>.GetConfigIndex(LevelsConfigItem) BaseConfigTable<LevelsConfigItem>.ConfigCount BaseConfigTable<LevelsConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelsConfig : BaseConfigTable<LevelsConfigItem> Fields initLevel 初始化关卡 Declaration public ConfigItemReference<LevelsConfigItem> initLevel Field Value Type Description ConfigItemReference < LevelsConfigItem > timeOutSkill 关卡超时技能 Declaration public ConfigItemReference<SkillsConfigItem> timeOutSkill Field Value Type Description ConfigItemReference < SkillsConfigItem > unitCreaterPrefab 单位生成器预制体 Declaration public UnitCreater unitCreaterPrefab Field Value Type Description UnitCreater"
  },
  "api/Global.LevelsConfigItem.html": {
    "href": "api/Global.LevelsConfigItem.html",
    "title": "Class LevelsConfigItem | 塔防游戏API文档",
    "keywords": "Class LevelsConfigItem 关卡配置数据。 Inheritance System.Object BaseConfigItem LevelsConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class LevelsConfigItem : BaseConfigItem Fields countDown 关卡时间（秒） 负数代表不计时 Declaration public int countDown Field Value Type Description System.Int32 createUnitCount 单位生成数量 Declaration public int createUnitCount Field Value Type Description System.Int32 createUnitDuration 单位生成间隔（秒） Declaration public float createUnitDuration Field Value Type Description System.Single createUnitList 单位生成列表 Declaration public List<ConfigItemReference<UnitsConfigItem>> createUnitList Field Value Type Description List < ConfigItemReference < UnitsConfigItem >> defaultTaskList 默认任务列表 Declaration public List<ConfigItemReference<TasksConfigItem>> defaultTaskList Field Value Type Description List < ConfigItemReference < TasksConfigItem >> eventScript 事件脚本 Declaration public LevelEvent eventScript Field Value Type Description LevelEvent icon 图标 Declaration public Sprite icon Field Value Type Description Sprite levelScene 关卡场景 Declaration public ConfigItemReference<SceneConfigItem> levelScene Field Value Type Description ConfigItemReference < SceneConfigItem >"
  },
  "api/Global.LevelUpView.html": {
    "href": "api/Global.LevelUpView.html",
    "title": "Class LevelUpView | 塔防游戏API文档",
    "keywords": "Class LevelUpView 处理单位升级的视图。 Inheritance System.Object BaseView LevelUpView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelUpView : BaseView Fields bottom Declaration public CanvasGroup bottom Field Value Type Description CanvasGroup defaultNextLevel Declaration public ConfigItemReference<LevelsConfigItem> defaultNextLevel Field Value Type Description ConfigItemReference < LevelsConfigItem > levelUpButton Declaration public Button levelUpButton Field Value Type Description Button levelUpButtonPrompt Declaration public Image levelUpButtonPrompt Field Value Type Description Image prompt Declaration public Image prompt Field Value Type Description Image testSkillList Declaration public List<ConfigItemReference<SkillsConfigItem>> testSkillList Field Value Type Description List < ConfigItemReference < SkillsConfigItem >> trainingLevel Declaration public ConfigItemReference<LevelsConfigItem> trainingLevel Field Value Type Description ConfigItemReference < LevelsConfigItem > Methods CheckDoubleClick() Declaration public void CheckDoubleClick() GetItem() Declaration public void GetItem() NextLevel() Declaration public void NextLevel() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() ToTraining() Declaration public void ToTraining()"
  },
  "api/Global.LevelView.html": {
    "href": "api/Global.LevelView.html",
    "title": "Class LevelView | 塔防游戏API文档",
    "keywords": "Class LevelView 处理关卡场景的视图。 Inheritance System.Object BaseView LevelView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelView : BaseView Fields controller Declaration public LevelController controller Field Value Type Description LevelController Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Start() Declaration protected override void Start() Overrides BaseView.Start()"
  },
  "api/Global.LoadingView.html": {
    "href": "api/Global.LoadingView.html",
    "title": "Class LoadingView | 塔防游戏API文档",
    "keywords": "Class LoadingView 处理加载界面的视图。 Inheritance System.Object BaseView LoadingView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoadingView : BaseView Fields loadingText Declaration public TextMeshProUGUI loadingText Field Value Type Description TextMeshProUGUI Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.MapView.html": {
    "href": "api/Global.MapView.html",
    "title": "Class MapView | 塔防游戏API文档",
    "keywords": "Class MapView 处理关卡选择的视图。 Inheritance System.Object BaseView MapView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MapView : BaseView Fields finalLevel Declaration public ConfigItemReference<LevelsConfigItem> finalLevel Field Value Type Description ConfigItemReference < LevelsConfigItem > levelButtonContent Declaration public Transform levelButtonContent Field Value Type Description Transform levelButtonPrefab Declaration public Button levelButtonPrefab Field Value Type Description Button levelButtonRoot Declaration public Button levelButtonRoot Field Value Type Description Button levelPool Declaration public List<ConfigItemReference<LevelsConfigItem>> levelPool Field Value Type Description List < ConfigItemReference < LevelsConfigItem >> lineEffect Declaration public Image lineEffect Field Value Type Description Image lookingEffect Declaration public Image lookingEffect Field Value Type Description Image selectedEffect Declaration public Image selectedEffect Field Value Type Description Image submitButton Declaration public Button submitButton Field Value Type Description Button Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() OnSubmitButtonClick() Declaration public void OnSubmitButtonClick() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.MartialArtEvent.html": {
    "href": "api/Global.MartialArtEvent.html",
    "title": "Class MartialArtEvent | 塔防游戏API文档",
    "keywords": "Class MartialArtEvent Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent010 SkillEvent013 SkillEvent014 SkillEvent015 SkillEvent016 Implements ISkillLearnHandler ISkillForgetHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class MartialArtEvent : SkillEvent, ISkillLearnHandler, ISkillForgetHandler Fields ownerLocked Declaration public ConfigItemReference<UnitsConfigItem> ownerLocked Field Value Type Description ConfigItemReference < UnitsConfigItem > Methods OnSkillForget(Skill) Declaration public virtual void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill OnSkillLearn(Skill) Declaration public virtual void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Implements ISkillLearnHandler ISkillForgetHandler"
  },
  "api/Global.MoveType.html": {
    "href": "api/Global.MoveType.html",
    "title": "Enum MoveType | 塔防游戏API文档",
    "keywords": "Enum MoveType 单位移动类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum MoveType Fields Name Description Fixed 固定 Free 自由"
  },
  "api/Global.ObservableUserData-1.DataChangedHandler.html": {
    "href": "api/Global.ObservableUserData-1.DataChangedHandler.html",
    "title": "Delegate ObservableUserData<T>.DataChangedHandler | 塔防游戏API文档",
    "keywords": "Delegate ObservableUserData<T>.DataChangedHandler 数据改变事件用委托 Namespace : Global Assembly : cs.temp.dll.dll Syntax public delegate void DataChangedHandler(T userData); Parameters Type Name Description T userData 被改变的数据"
  },
  "api/Global.ObservableUserData-1.html": {
    "href": "api/Global.ObservableUserData-1.html",
    "title": "Class ObservableUserData<T> | 塔防游戏API文档",
    "keywords": "Class ObservableUserData<T> 处理可监听用户数据的类。 本类为抽象类，具体数据由子类管理。 Inheritance System.Object BaseUserData ObservableUserData<T> Level Skill State SystemData Task Unit Inherited Members BaseUserData.BeforeSave() BaseUserData.AfterLoad() Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class ObservableUserData<T> : BaseUserData where T : ObservableUserData<T> Type Parameters Name Description T 子类的泛型 Methods TriggerDataChanged(T) 触发数据改变事件。 Declaration protected void TriggerDataChanged(T data) Parameters Type Name Description T data 数据对象（this） Events OnDataChanged 数据发生改变时触发该事件 Declaration public event ObservableUserData<T>.DataChangedHandler OnDataChanged Event Type Type Description ObservableUserData.DataChangedHandler <>"
  },
  "api/Global.PlatformCommonConfig.html": {
    "href": "api/Global.PlatformCommonConfig.html",
    "title": "Class PlatformCommonConfig | 塔防游戏API文档",
    "keywords": "Class PlatformCommonConfig 平台通用配置列表。 Inheritance System.Object BaseConfigTable < PlatformCommonConfigItem > PlatformCommonConfig Inherited Members BaseConfigTable<PlatformCommonConfigItem>.tabName BaseConfigTable<PlatformCommonConfigItem>.frameVersion BaseConfigTable<PlatformCommonConfigItem>.version BaseConfigTable<PlatformCommonConfigItem>.enableConsole BaseConfigTable<PlatformCommonConfigItem>.configList BaseConfigTable<PlatformCommonConfigItem>.ConfigTableVersion BaseConfigTable<PlatformCommonConfigItem>.Item[Int32] BaseConfigTable<PlatformCommonConfigItem>.Item[String] BaseConfigTable<PlatformCommonConfigItem>.GetConfigByName(String) BaseConfigTable<PlatformCommonConfigItem>.GetConfigIndex(PlatformCommonConfigItem) BaseConfigTable<PlatformCommonConfigItem>.ConfigCount Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlatformCommonConfig : BaseConfigTable<PlatformCommonConfigItem> Properties ConfigNameList Declaration public override List<string> ConfigNameList { get; } Property Value Type Description List < System.String > Overrides BaseConfigTable<PlatformCommonConfigItem>.ConfigNameList"
  },
  "api/Global.PlatformCommonConfigItem.html": {
    "href": "api/Global.PlatformCommonConfigItem.html",
    "title": "Class PlatformCommonConfigItem | 塔防游戏API文档",
    "keywords": "Class PlatformCommonConfigItem 平台通用配置数据。 Inheritance System.Object BaseConfigItem PlatformCommonConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class PlatformCommonConfigItem : BaseConfigItem Fields appID 游戏ID Declaration public string appID Field Value Type Description System.String appVersion 游戏版本 Declaration public string appVersion Field Value Type Description System.String debugMode 测试模式 Declaration public bool debugMode Field Value Type Description System.Boolean defaultLanguage 默认语言 Declaration public LanguageType defaultLanguage Field Value Type Description LanguageType"
  },
  "api/Global.PlatformManager.html": {
    "href": "api/Global.PlatformManager.html",
    "title": "Class PlatformManager | 塔防游戏API文档",
    "keywords": "Class PlatformManager 平台管理器。 Inheritance System.Object PlatformManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlatformManager Properties Current 当前平台。 Declaration public static PlatformType Current { get; } Property Value Type Description PlatformType Methods ExitGame() 退出游戏。 Declaration public static void ExitGame() Init() 初始化管理器。 Declaration public static void Init()"
  },
  "api/Global.PlatformType.html": {
    "href": "api/Global.PlatformType.html",
    "title": "Enum PlatformType | 塔防游戏API文档",
    "keywords": "Enum PlatformType 平台类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum PlatformType Fields Name Description Default 默认"
  },
  "api/Global.Player.html": {
    "href": "api/Global.Player.html",
    "title": "Class Player | 塔防游戏API文档",
    "keywords": "Class Player 处理主角的类。 Inheritance System.Object BaseUserData ObservableUserData < Unit > Unit Player Inherited Members Unit.id Unit.configID Unit._basicMaxHP Unit._hp Unit._basicMaxTOU Unit._tou Unit._basicATK Unit._basicDEF Unit._basicEDF Unit._basicSPD Unit._basicDashRange Unit._basicRES Unit._basicERS Unit._skillList Unit._stateList Unit._inventoryUnitList Unit.Config Unit.EventScript Unit.Owner Unit.Controller Unit.AddListener() Unit.Destroy() Unit.BeforeSave() Unit.IsPlayer Unit.IsAttackDisabled Unit.IsMoveDisabled Unit.BasicMaxHP Unit.BonusMaxHP Unit.BonusMaxHP_P Unit.MaxHP Unit.HP Unit.Damage(Unit, DamageInfo, Single) Unit.Damage(Unit, DamageInfo, Func<Int32>) Unit.BasicMaxTOU Unit.BonusMaxTOU Unit.BonusMaxTOU_P Unit.MaxTOU Unit.TOU Unit.BasicATK Unit.BonusATK Unit.BonusATK_P Unit.ATK Unit.BasicDEF Unit.BonusDEF Unit.BonusDEF_P Unit.DEF Unit.BasicEDF Unit.BonusEDF Unit.BonusEDF_P Unit.EDF Unit.BasicSPD Unit.BonusSPD Unit.BonusSPD_P Unit.SPD Unit.BasicDashRange Unit.BonusDashRange Unit.BonusDashRange_P Unit.DashRange Unit.BasicRES Unit.BonusRES Unit.RES Unit.BasicERS Unit.BonusERS Unit.ERS Unit.SkillList Unit.LearnSkill(Skill) Unit.StateList Unit.AddState(State) Unit.RemoveState(State) Unit.PhysicalShield Unit.EnergyShield Unit.UniversalShield Unit.InventoryUnitList Unit.GainUnit(Unit) Unit.HasOwner() ObservableUserData<Unit>.OnDataChanged ObservableUserData<Unit>.TriggerDataChanged(Unit) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Player : Unit Constructors Player() Declaration public Player() Properties AvailableUnitPool 可获得的单位列表。 Declaration public ReadOnlyCollection<ConfigItemReference<UnitsConfigItem>> AvailableUnitPool { get; } Property Value Type Description ReadOnlyCollection < ConfigItemReference < UnitsConfigItem >> LeftComboInfoList 左键连段信息列表。 Declaration public ReadOnlyCollection<ComboInfo> LeftComboInfoList { get; } Property Value Type Description ReadOnlyCollection < ComboInfo > LevelProgressList 关卡进度列表。 Declaration public ReadOnlyCollection<ConfigItemReference<LevelsConfigItem>> LevelProgressList { get; } Property Value Type Description ReadOnlyCollection < ConfigItemReference < LevelsConfigItem >> MaxComboCount 最大连段数量。 Declaration public int MaxComboCount { get; } Property Value Type Description System.Int32 RandomSeed 随机数种子。 Declaration public int RandomSeed { get; } Property Value Type Description System.Int32 RightComboInfoList 右键连段信息列表。 Declaration public ReadOnlyCollection<ComboInfo> RightComboInfoList { get; } Property Value Type Description ReadOnlyCollection < ComboInfo > Methods AddAvailableUnit(ConfigItemReference<UnitsConfigItem>) 添加可获得的单位。 Declaration public void AddAvailableUnit(ConfigItemReference<UnitsConfigItem> config) Parameters Type Name Description ConfigItemReference < UnitsConfigItem > config 单位配置项 AddLeftCombo(ComboInfo) 添加左键连段。 Declaration public bool AddLeftCombo(ComboInfo comboInfo) Parameters Type Name Description ComboInfo comboInfo 连段信息 Returns Type Description System.Boolean AddLevelProgress(ConfigItemReference<LevelsConfigItem>) 添加关卡进度。 Declaration public void AddLevelProgress(ConfigItemReference<LevelsConfigItem> config) Parameters Type Name Description ConfigItemReference < LevelsConfigItem > config 关卡配置项 AddRightCombo(ComboInfo) 添加右键连段。 Declaration public bool AddRightCombo(ComboInfo comboInfo) Parameters Type Name Description ComboInfo comboInfo 连段信息 Returns Type Description System.Boolean AfterLoad() Declaration public override void AfterLoad() Overrides Unit.AfterLoad() ForgetSkill(Skill) Declaration public override bool ForgetSkill(Skill skill) Parameters Type Name Description Skill skill Returns Type Description System.Boolean Overrides Unit.ForgetSkill(Skill) Init() Declaration public override void Init() Overrides Unit.Init() LostUnit(Unit) Declaration public override bool LostUnit(Unit unit) Parameters Type Name Description Unit unit Returns Type Description System.Boolean Overrides Unit.LostUnit(Unit) RefreshRandomSeed() 刷新随机数种子。 Declaration public void RefreshRandomSeed() RemoveAvailableUnit(ConfigItemReference<UnitsConfigItem>) 移除可获得的单位。 Declaration public void RemoveAvailableUnit(ConfigItemReference<UnitsConfigItem> config) Parameters Type Name Description ConfigItemReference < UnitsConfigItem > config 单位配置项 RemoveLeftCombo(ComboInfo) 移除左键连段。 Declaration public void RemoveLeftCombo(ComboInfo comboInfo) Parameters Type Name Description ComboInfo comboInfo 连段信息 RemoveRightCombo(ComboInfo) 移除右键连段。 Declaration public void RemoveRightCombo(ComboInfo comboInfo) Parameters Type Name Description ComboInfo comboInfo 连段信息 Events OnComboInfoChanged Declaration public event UnityAction OnComboInfoChanged Event Type Type Description UnityAction"
  },
  "api/Global.PlayerController.html": {
    "href": "api/Global.PlayerController.html",
    "title": "Class PlayerController | 塔防游戏API文档",
    "keywords": "Class PlayerController 控制主角行为的类。 Inheritance System.Object UnitController PlayerController Inherited Members UnitController.spriteRenderer UnitController.destroySpriteRenderer UnitController.statePanel UnitController.healthBar UnitController.chargeBar UnitController.animator UnitController.rb UnitController.autoSorting UnitController.skillControllerList UnitController.skillBindLocalPosition UnitController.Data UnitController.Config UnitController.Start() UnitController.OnDataChanged(Unit) UnitController.Knockback(Vector2) UnitController.UseSkill(Skill, Int32, Boolean, String) UnitController.UseSkill(ComboInfo, Boolean, String) UnitController.UseSkill(ComboUseInfo) UnitController.GetSkillController(Skill, Int32, Boolean, String) UnitController.GetSkillController(ComboInfo, Boolean, String) UnitController.GetSkillController(ComboUseInfo) UnitController.Kill() UnitController.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerController : UnitController Fields input Declaration public PlayerInput input Field Value Type Description PlayerInput inputDash Declaration public bool inputDash Field Value Type Description System.Boolean inputMovement Declaration public Vector2 inputMovement Field Value Type Description Vector2 Properties AttackCombo Declaration public int AttackCombo { get; } Property Value Type Description System.Int32 IsChargeAttack Declaration public bool IsChargeAttack { get; } Property Value Type Description System.Boolean IsRightAttack Declaration public bool IsRightAttack { get; } Property Value Type Description System.Boolean Methods Awake() Declaration protected override void Awake() Overrides UnitController.Awake() FixedUpdate() Declaration protected override void FixedUpdate() Overrides UnitController.FixedUpdate() OnDash(InputAction.CallbackContext) Declaration public void OnDash(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnLeftAttack(InputAction.CallbackContext) Declaration public void OnLeftAttack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove(InputAction.CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPickUp(InputAction.CallbackContext) Declaration public void OnPickUp(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRightAttack(InputAction.CallbackContext) Declaration public void OnRightAttack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Update() Declaration protected override void Update() Overrides UnitController.Update()"
  },
  "api/Global.PlayerInfoShower.html": {
    "href": "api/Global.PlayerInfoShower.html",
    "title": "Class PlayerInfoShower | 塔防游戏API文档",
    "keywords": "Class PlayerInfoShower Inheritance System.Object UnitInfoShower PlayerInfoShower Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler Inherited Members UnitInfoShower.enablePopWindow UnitInfoShower.nameText UnitInfoShower.buildedText UnitInfoShower.descText UnitInfoShower.customText UnitInfoShower.iconImage UnitInfoShower.iconText UnitInfoShower.portraitImage UnitInfoShower.levelImage UnitInfoShower.levelSprites UnitInfoShower.skillComboContent UnitInfoShower.skillComboPrefab UnitInfoShower.stateContent UnitInfoShower.statePrefab UnitInfoShower.inventoryUnitContent UnitInfoShower.inventoryUnitPrefab UnitInfoShower.inventoryUnitShowType UnitInfoShower.rectTransform UnitInfoShower.OnPointerClickEvent UnitInfoShower.OnSkillComboSelect UnitInfoShower.OnStateSelect UnitInfoShower.OnInventoryUnitSelect UnitInfoShower.TargetUnit UnitInfoShower.TargetConfig UnitInfoShower.Awake() UnitInfoShower.OnEnable() UnitInfoShower.OnDisable() UnitInfoShower.Refresh() UnitInfoShower.OnPointerEnter(PointerEventData) UnitInfoShower.OnPointerExit(PointerEventData) UnitInfoShower.OnPointerClick(PointerEventData) UnitInfoShower.OnPointerDown(PointerEventData) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerInfoShower : UnitInfoShower Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler"
  },
  "api/Global.PopMessageWindow.html": {
    "href": "api/Global.PopMessageWindow.html",
    "title": "Class PopMessageWindow | 塔防游戏API文档",
    "keywords": "Class PopMessageWindow 处理弹出消息的类。 Inheritance System.Object BaseWindow PopMessageWindow Inherited Members BaseWindow.isFloating BaseWindow.autoClose BaseWindow.closeButton BaseWindow.onOpen BaseWindow.onClose BaseWindow.onRefresh BaseWindow.canvasGroup BaseWindow.OnWindowOpen BaseWindow.OnWindowClose BaseWindow.Current BaseWindow.IsAnyWindowOpen BaseWindow.Awake() BaseWindow.OnEnable() BaseWindow.OnDisable() BaseWindow.Open() BaseWindow.Close() BaseWindow.OpenOrClose() BaseWindow.IsOpen BaseWindow.Refresh() BaseWindow.PlayOpenAnimation() BaseWindow.PlayCloseAnimation() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopMessageWindow : BaseWindow Fields displayText Declaration public TextMeshProUGUI displayText Field Value Type Description TextMeshProUGUI Methods AddListener() Declaration protected override void AddListener() Overrides BaseWindow.AddListener() OnClose() Declaration protected override void OnClose() Overrides BaseWindow.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseWindow.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseWindow.RealRefresh() RemoveListener() Declaration protected override void RemoveListener() Overrides BaseWindow.RemoveListener() Show(String) Declaration public void Show(string text) Parameters Type Name Description System.String text Start() Declaration protected override void Start() Overrides BaseWindow.Start()"
  },
  "api/Global.PopShowInfo.html": {
    "href": "api/Global.PopShowInfo.html",
    "title": "Struct PopShowInfo | 塔防游戏API文档",
    "keywords": "Struct PopShowInfo 弹出窗口显示信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct PopShowInfo Fields contentList 内容列表 Declaration public List<object> contentList Field Value Type Description List < System.Object > title 标题 Declaration public string title Field Value Type Description System.String"
  },
  "api/Global.PopWindow.html": {
    "href": "api/Global.PopWindow.html",
    "title": "Class PopWindow | 塔防游戏API文档",
    "keywords": "Class PopWindow 处理弹出窗口的类。 Inheritance System.Object BaseWindow PopWindow Implements IBeginDragHandler IDragHandler IPointerClickHandler Inherited Members BaseWindow.isFloating BaseWindow.autoClose BaseWindow.closeButton BaseWindow.onOpen BaseWindow.onClose BaseWindow.onRefresh BaseWindow.canvasGroup BaseWindow.OnWindowOpen BaseWindow.OnWindowClose BaseWindow.Current BaseWindow.IsAnyWindowOpen BaseWindow.Awake() BaseWindow.OnEnable() BaseWindow.OnDisable() BaseWindow.Open() BaseWindow.Close() BaseWindow.OpenOrClose() BaseWindow.IsOpen BaseWindow.Refresh() BaseWindow.PlayOpenAnimation() BaseWindow.PlayCloseAnimation() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopWindow : BaseWindow Fields bottom Declaration public Transform bottom Field Value Type Description Transform exampleText Declaration public TextMeshProUGUI exampleText Field Value Type Description TextMeshProUGUI mouseOffset Declaration public Vector2 mouseOffset Field Value Type Description Vector2 progress Declaration public Image progress Field Value Type Description Image titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Methods AddListener() Declaration protected override void AddListener() Overrides BaseWindow.AddListener() OnBeginDrag(PointerEventData) Declaration public void OnBeginDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnClose() Declaration protected override void OnClose() Overrides BaseWindow.OnClose() OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnOpen() Declaration protected override void OnOpen() Overrides BaseWindow.OnOpen() OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData RealRefresh() Declaration protected override void RealRefresh() Overrides BaseWindow.RealRefresh() RemoveListener() Declaration protected override void RemoveListener() Overrides BaseWindow.RemoveListener() Show(PopShowInfo, PopShowInfo, UnityAction<String>) Declaration public void Show(PopShowInfo info, PopShowInfo allInfo, UnityAction<string> linkCallback = null) Parameters Type Name Description PopShowInfo info PopShowInfo allInfo UnityAction < System.String > linkCallback Show(Vector2, PopShowInfo, PopShowInfo, UnityAction<String>) Declaration public void Show(Vector2 position, PopShowInfo info, PopShowInfo allInfo, UnityAction<string> linkCallback = null) Parameters Type Name Description Vector2 position PopShowInfo info PopShowInfo allInfo UnityAction < System.String > linkCallback Start() Declaration protected override void Start() Overrides BaseWindow.Start() Implements IBeginDragHandler IDragHandler IPointerClickHandler"
  },
  "api/Global.PopWindowView.html": {
    "href": "api/Global.PopWindowView.html",
    "title": "Class PopWindowView | 塔防游戏API文档",
    "keywords": "Class PopWindowView 处理弹出窗口的视图。 Inheritance System.Object BaseView PopWindowView Implements IPointerClickHandler Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopWindowView : BaseView Methods DestroyPopWindow(Int32) Declaration public void DestroyPopWindow(int startIndex) Parameters Type Name Description System.Int32 startIndex OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Implements IPointerClickHandler"
  },
  "api/Global.RaceType.html": {
    "href": "api/Global.RaceType.html",
    "title": "Enum RaceType | 塔防游戏API文档",
    "keywords": "Enum RaceType 种族类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum RaceType Fields Name Description Human 人族 Primordial 洪荒"
  },
  "api/Global.SceneConfig.html": {
    "href": "api/Global.SceneConfig.html",
    "title": "Class SceneConfig | 塔防游戏API文档",
    "keywords": "Class SceneConfig 场景配置列表。 Inheritance System.Object BaseConfigTable < SceneConfigItem > SceneConfig Inherited Members BaseConfigTable<SceneConfigItem>.tabName BaseConfigTable<SceneConfigItem>.frameVersion BaseConfigTable<SceneConfigItem>.version BaseConfigTable<SceneConfigItem>.enableConsole BaseConfigTable<SceneConfigItem>.configList BaseConfigTable<SceneConfigItem>.ConfigTableVersion BaseConfigTable<SceneConfigItem>.Item[Int32] BaseConfigTable<SceneConfigItem>.Item[String] BaseConfigTable<SceneConfigItem>.GetConfigByName(String) BaseConfigTable<SceneConfigItem>.GetConfigIndex(SceneConfigItem) BaseConfigTable<SceneConfigItem>.ConfigCount BaseConfigTable<SceneConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SceneConfig : BaseConfigTable<SceneConfigItem>"
  },
  "api/Global.SceneConfigItem.html": {
    "href": "api/Global.SceneConfigItem.html",
    "title": "Class SceneConfigItem | 塔防游戏API文档",
    "keywords": "Class SceneConfigItem 场景配置数据。 Inheritance System.Object BaseConfigItem SceneConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class SceneConfigItem : BaseConfigItem Fields sceneName 场景标识符 可以填写场景文件名或完整路径名，具体支持情况可查看Unity官方文档 Declaration public string sceneName Field Value Type Description System.String"
  },
  "api/Global.SettingsView.html": {
    "href": "api/Global.SettingsView.html",
    "title": "Class SettingsView | 塔防游戏API文档",
    "keywords": "Class SettingsView 处理设置的视图。 Inheritance System.Object BaseView SettingsView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SettingsView : BaseView Fields exitTrainingButton Declaration public Transform exitTrainingButton Field Value Type Description Transform restartButton Declaration public Transform restartButton Field Value Type Description Transform titleScene Declaration public ConfigItemReference<SceneConfigItem> titleScene Field Value Type Description ConfigItemReference < SceneConfigItem > trainingLevel Declaration public ConfigItemReference<LevelsConfigItem> trainingLevel Field Value Type Description ConfigItemReference < LevelsConfigItem > Methods Back() Declaration public void Back() ExitGame() Declaration public void ExitGame() ExitTrainingScene() Declaration public void ExitTrainingScene() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Restart() Declaration public void Restart() ToTitle() Declaration public void ToTitle()"
  },
  "api/Global.Skill.html": {
    "href": "api/Global.Skill.html",
    "title": "Class Skill | 塔防游戏API文档",
    "keywords": "Class Skill 处理技能的类。 Inheritance System.Object BaseUserData ObservableUserData < Skill > Skill Inherited Members ObservableUserData<Skill>.OnDataChanged ObservableUserData<Skill>.TriggerDataChanged(Skill) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Skill : ObservableUserData<Skill> Constructors Skill(String) Declaration public Skill(string configID) Parameters Type Name Description System.String configID Fields configID Declaration public readonly string configID Field Value Type Description System.String id Declaration public readonly string id Field Value Type Description System.String Properties BonusATK 技能的攻击力加成值 Declaration public int BonusATK { get; set; } Property Value Type Description System.Int32 BonusATK_P 技能的攻击力加成百分比（%） Declaration public int BonusATK_P { get; set; } Property Value Type Description System.Int32 BonusDashRange 技能的冲刺幅度加成（%） Declaration public int BonusDashRange { get; set; } Property Value Type Description System.Int32 BonusDashRange_P 技能的冲刺幅度加成百分比（%） Declaration public int BonusDashRange_P { get; set; } Property Value Type Description System.Int32 BonusDEF 技能的物理防御力加成值 Declaration public int BonusDEF { get; set; } Property Value Type Description System.Int32 BonusDEF_P 技能的物理防御力加成百分比（%） Declaration public int BonusDEF_P { get; set; } Property Value Type Description System.Int32 BonusEDF 技能的能量防御力加成值 Declaration public int BonusEDF { get; set; } Property Value Type Description System.Int32 BonusEDF_P 技能的能量防御力加成百分比（%） Declaration public int BonusEDF_P { get; set; } Property Value Type Description System.Int32 BonusERS 技能的能量抗性加成值（%） Declaration public float BonusERS { get; set; } Property Value Type Description System.Single BonusMaxHP 技能的生命值上限加成值 Declaration public int BonusMaxHP { get; set; } Property Value Type Description System.Int32 BonusMaxHP_P 技能的生命值上限加成百分比（%） Declaration public int BonusMaxHP_P { get; set; } Property Value Type Description System.Int32 BonusMaxTOU 技能的韧性值上限加成值 Declaration public int BonusMaxTOU { get; set; } Property Value Type Description System.Int32 BonusMaxTOU_P 技能的韧性值上限加成百分比（%） Declaration public int BonusMaxTOU_P { get; set; } Property Value Type Description System.Int32 BonusRES 技能的物理抗性加成值（%） Declaration public float BonusRES { get; set; } Property Value Type Description System.Single BonusSPD 技能的速度加成值 Declaration public float BonusSPD { get; set; } Property Value Type Description System.Single BonusSPD_P 技能的速度加成百分比（%） Declaration public int BonusSPD_P { get; set; } Property Value Type Description System.Int32 Config 技能的基础配置。 Declaration public SkillsConfigItem Config { get; } Property Value Type Description SkillsConfigItem DisableAttack 技能是否禁用攻击 Declaration public bool DisableAttack { get; set; } Property Value Type Description System.Boolean DisableMove 技能是否禁用移动 Declaration public bool DisableMove { get; set; } Property Value Type Description System.Boolean EventScript 事件脚本。 Declaration public SkillEvent EventScript { get; } Property Value Type Description SkillEvent IsOccupyOwner 是否会占用所有者。 Declaration public bool IsOccupyOwner { get; } Property Value Type Description System.Boolean Owner 技能的所有者。 Declaration public Unit Owner { get; set; } Property Value Type Description Unit Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Destroy() Declaration public void Destroy() GetFloat(Int32) 获得float参数。 Declaration public float GetFloat(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.Single 值 GetInt(Int32) 获得int参数。 Declaration public int GetInt(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.Int32 值 GetString(Int32) 获得string参数。 Declaration public string GetString(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.String 值 HasOwner() 是否拥有所有者。 Declaration public bool HasOwner() Returns Type Description System.Boolean 是否拥有所有者 Init() Declaration public void Init() SetFloat(Int32, Single) 设置float参数。 Declaration public void SetFloat(int index, float value) Parameters Type Name Description System.Int32 index 索引 System.Single value 值 SetInt(Int32, Int32) 设置int参数。 Declaration public void SetInt(int index, int value) Parameters Type Name Description System.Int32 index 索引 System.Int32 value 值 SetString(Int32, String) 设置string参数。 Declaration public void SetString(int index, string value) Parameters Type Name Description System.Int32 index 索引 System.String value 值"
  },
  "api/Global.SkillComboInfoShower.html": {
    "href": "api/Global.SkillComboInfoShower.html",
    "title": "Class SkillComboInfoShower | 塔防游戏API文档",
    "keywords": "Class SkillComboInfoShower 处理技能连段项目的类。 Inheritance System.Object SkillComboInfoShower Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillComboInfoShower : MonoBehaviour Fields comboText Declaration public TextMeshProUGUI comboText Field Value Type Description TextMeshProUGUI descText Declaration public TextMeshProUGUI descText Field Value Type Description TextMeshProUGUI enablePopWindow Declaration public bool enablePopWindow Field Value Type Description System.Boolean iconImage Declaration public Image iconImage Field Value Type Description Image iconText Declaration public TextMeshProUGUI iconText Field Value Type Description TextMeshProUGUI nameText Declaration public TextMeshProUGUI nameText Field Value Type Description TextMeshProUGUI rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform Properties TargetComboInfo Declaration public ComboInfo TargetComboInfo { get; set; } Property Value Type Description ComboInfo Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public void Refresh() Events OnPointerClickEvent Declaration public event UnityAction<PointerEventData> OnPointerClickEvent Event Type Type Description UnityAction < PointerEventData > Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler"
  },
  "api/Global.SkillController.html": {
    "href": "api/Global.SkillController.html",
    "title": "Class SkillController | 塔防游戏API文档",
    "keywords": "Class SkillController 控制技能行为的类。 Inheritance System.Object SkillController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillController : MonoBehaviour Fields comboUseInfo Declaration public ComboUseInfo comboUseInfo Field Value Type Description ComboUseInfo rb Declaration public Rigidbody2D rb Field Value Type Description Rigidbody2D unitSource Declaration public SpriteRenderer unitSource Field Value Type Description SpriteRenderer unitSourceRoot Declaration public Transform unitSourceRoot Field Value Type Description Transform user Declaration public UnitController user Field Value Type Description UnitController Properties ComboCount Declaration public int ComboCount { get; } Property Value Type Description System.Int32 Config Declaration public SkillsConfigItem Config { get; } Property Value Type Description SkillsConfigItem Data Declaration public Skill Data { get; set; } Property Value Type Description Skill Direction Declaration public Vector2 Direction { get; set; } Property Value Type Description Vector2 Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single MoveSpeed Declaration public float MoveSpeed { get; set; } Property Value Type Description System.Single UserBinding Declaration public bool UserBinding { get; } Property Value Type Description System.Boolean Methods DisableEffect() Declaration public SkillController DisableEffect() Returns Type Description SkillController DisableTrigger() Declaration public SkillController DisableTrigger() Returns Type Description SkillController DisableUserBinding() Declaration public SkillController DisableUserBinding() Returns Type Description SkillController DisableWaitForAnimation() Declaration public SkillController DisableWaitForAnimation() Returns Type Description SkillController EnableEffect() Declaration public SkillController EnableEffect() Returns Type Description SkillController EnableTrigger() Declaration public SkillController EnableTrigger() Returns Type Description SkillController EnableUserBinding() Declaration public SkillController EnableUserBinding() Returns Type Description SkillController EnableWaitForAnimation() Declaration public SkillController EnableWaitForAnimation() Returns Type Description SkillController IsStateName(String) Declaration public bool IsStateName(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean LookToMouseFromUser(Single) Declaration public SkillController LookToMouseFromUser(float duration) Parameters Type Name Description System.Single duration Returns Type Description SkillController SetAnimationState(Boolean, Int32) Declaration public SkillController SetAnimationState(bool isHeavyAttack, int comboIndex) Parameters Type Name Description System.Boolean isHeavyAttack System.Int32 comboIndex Returns Type Description SkillController SetIdle() Declaration public SkillController SetIdle() Returns Type Description SkillController TriggerCustomEvent(String) Declaration public void TriggerCustomEvent(string arg) Parameters Type Name Description System.String arg WaitForAnimationCompletion() Declaration public IEnumerator WaitForAnimationCompletion() Returns Type Description IEnumerator"
  },
  "api/Global.SkillEvent.html": {
    "href": "api/Global.SkillEvent.html",
    "title": "Class SkillEvent | 塔防游戏API文档",
    "keywords": "Class SkillEvent Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent000 SkillEvent001 SkillEvent002 SkillEvent003 SkillEvent004 SkillEvent005 SkillEvent006 SkillEvent007 SkillEvent008 SkillEvent009 SkillEvent011 SkillEvent012 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent : BaseEvent<Skill> Methods DoBehaviour(SkillController) 技能控制器的行为。 Declaration public virtual IEnumerator DoBehaviour(SkillController skillController) Parameters Type Name Description SkillController skillController 技能控制器 Returns Type Description IEnumerator OnAnyViewClose(BaseView) Declaration protected override void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view Overrides BaseEvent<Skill>.OnAnyViewClose(BaseView)"
  },
  "api/Global.SkillEvent000.html": {
    "href": "api/Global.SkillEvent000.html",
    "title": "Class SkillEvent000 | 塔防游戏API文档",
    "keywords": "Class SkillEvent000 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent000 Implements ISkillLearnHandler ISkillTriggerUnitHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent000 : SkillEvent, ISkillLearnHandler, ISkillTriggerUnitHandler Methods OnSkillLearn(Skill) Declaration public void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Implements ISkillLearnHandler ISkillTriggerUnitHandler"
  },
  "api/Global.SkillEvent001.html": {
    "href": "api/Global.SkillEvent001.html",
    "title": "Class SkillEvent001 | 塔防游戏API文档",
    "keywords": "Class SkillEvent001 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent001 Implements ISkillUseHandler ISkillControllerDisableHandler IStateGainHandler IStateLostHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent001 : SkillEvent, ISkillUseHandler, ISkillControllerDisableHandler, IStateGainHandler, IStateLostHandler Fields passiveSkill1 Declaration public ConfigItemReference<SkillsConfigItem> passiveSkill1 Field Value Type Description ConfigItemReference < SkillsConfigItem > state1 Declaration public ConfigItemReference<StatesConfigItem> state1 Field Value Type Description ConfigItemReference < StatesConfigItem > state2 Declaration public ConfigItemReference<StatesConfigItem> state2 Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillControllerDisable(SkillController) Declaration public void OnSkillControllerDisable(SkillController skillController) Parameters Type Name Description SkillController skillController OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController OnStateGain(State) Declaration public void OnStateGain(State state) Parameters Type Name Description State state OnStateLost(State) Declaration public void OnStateLost(State state) Parameters Type Name Description State state Implements ISkillUseHandler ISkillControllerDisableHandler IStateGainHandler IStateLostHandler"
  },
  "api/Global.SkillEvent002.html": {
    "href": "api/Global.SkillEvent002.html",
    "title": "Class SkillEvent002 | 塔防游戏API文档",
    "keywords": "Class SkillEvent002 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent002 Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillTriggerOtherHandler ISkillControllerDisableHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent002 : SkillEvent, ISkillUseHandler, ISkillTriggerUnitHandler, ISkillTriggerOtherHandler, ISkillControllerDisableHandler Fields disableAttackCountState Declaration public ConfigItemReference<StatesConfigItem> disableAttackCountState Field Value Type Description ConfigItemReference < StatesConfigItem > newState Declaration public ConfigItemReference<StatesConfigItem> newState Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillControllerDisable(SkillController) Declaration public void OnSkillControllerDisable(SkillController skillController) Parameters Type Name Description SkillController skillController OnSkillTriggerOther(SkillController, Collider2D) Declaration public void OnSkillTriggerOther(SkillController skillController, Collider2D collider) Parameters Type Name Description SkillController skillController Collider2D collider OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillTriggerOtherHandler ISkillControllerDisableHandler"
  },
  "api/Global.SkillEvent003.html": {
    "href": "api/Global.SkillEvent003.html",
    "title": "Class SkillEvent003 | 塔防游戏API文档",
    "keywords": "Class SkillEvent003 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent003 Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillTriggerOtherHandler ISkillControllerDisableHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent003 : SkillEvent, ISkillUseHandler, ISkillTriggerUnitHandler, ISkillTriggerOtherHandler, ISkillControllerDisableHandler Fields disableAttackCountState Declaration public ConfigItemReference<StatesConfigItem> disableAttackCountState Field Value Type Description ConfigItemReference < StatesConfigItem > newState Declaration public ConfigItemReference<StatesConfigItem> newState Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillControllerDisable(SkillController) Declaration public void OnSkillControllerDisable(SkillController skillController) Parameters Type Name Description SkillController skillController OnSkillTriggerOther(SkillController, Collider2D) Declaration public void OnSkillTriggerOther(SkillController skillController, Collider2D collider) Parameters Type Name Description SkillController skillController Collider2D collider OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillTriggerOtherHandler ISkillControllerDisableHandler"
  },
  "api/Global.SkillEvent004.html": {
    "href": "api/Global.SkillEvent004.html",
    "title": "Class SkillEvent004 | 塔防游戏API文档",
    "keywords": "Class SkillEvent004 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent004 Implements ISkillTriggerUnitHandler ISkillCustomTriggerHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent004 : SkillEvent, ISkillTriggerUnitHandler, ISkillCustomTriggerHandler Fields triggerEffect1 Declaration public Transform triggerEffect1 Field Value Type Description Transform triggerEffect2 Declaration public Transform triggerEffect2 Field Value Type Description Transform Methods OnSkillCustomTrigger(SkillController, String) Declaration public void OnSkillCustomTrigger(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Implements ISkillTriggerUnitHandler ISkillCustomTriggerHandler"
  },
  "api/Global.SkillEvent005.html": {
    "href": "api/Global.SkillEvent005.html",
    "title": "Class SkillEvent005 | 塔防游戏API文档",
    "keywords": "Class SkillEvent005 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent005 Implements IAfterDamageCalculatorHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent005 : SkillEvent, IAfterDamageCalculatorHandler Fields state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IAfterDamageCalculatorHandler"
  },
  "api/Global.SkillEvent006.html": {
    "href": "api/Global.SkillEvent006.html",
    "title": "Class SkillEvent006 | 塔防游戏API文档",
    "keywords": "Class SkillEvent006 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent006 Implements ISkillTriggerUnitHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent006 : SkillEvent, ISkillTriggerUnitHandler Methods OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Implements ISkillTriggerUnitHandler"
  },
  "api/Global.SkillEvent007.html": {
    "href": "api/Global.SkillEvent007.html",
    "title": "Class SkillEvent007 | 塔防游戏API文档",
    "keywords": "Class SkillEvent007 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent007 Implements ISkillUseHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent007 : SkillEvent, ISkillUseHandler Fields state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler"
  },
  "api/Global.SkillEvent008.html": {
    "href": "api/Global.SkillEvent008.html",
    "title": "Class SkillEvent008 | 塔防游戏API文档",
    "keywords": "Class SkillEvent008 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent008 Implements ISkillUseHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent008 : SkillEvent, ISkillUseHandler Fields passiveSkill Declaration public ConfigItemReference<SkillsConfigItem> passiveSkill Field Value Type Description ConfigItemReference < SkillsConfigItem > state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler"
  },
  "api/Global.SkillEvent009.html": {
    "href": "api/Global.SkillEvent009.html",
    "title": "Class SkillEvent009 | 塔防游戏API文档",
    "keywords": "Class SkillEvent009 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent009 Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillControllerDisableHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent009 : SkillEvent, ISkillUseHandler, ISkillTriggerUnitHandler, ISkillControllerDisableHandler Fields checkedState Declaration public ConfigItemReference<StatesConfigItem> checkedState Field Value Type Description ConfigItemReference < StatesConfigItem > containerUnit Declaration public ConfigItemReference<UnitsConfigItem> containerUnit Field Value Type Description ConfigItemReference < UnitsConfigItem > newState Declaration public ConfigItemReference<StatesConfigItem> newState Field Value Type Description ConfigItemReference < StatesConfigItem > passiveSkill1 Declaration public ConfigItemReference<SkillsConfigItem> passiveSkill1 Field Value Type Description ConfigItemReference < SkillsConfigItem > passiveSkill2 Declaration public ConfigItemReference<SkillsConfigItem> passiveSkill2 Field Value Type Description ConfigItemReference < SkillsConfigItem > Methods OnSkillControllerDisable(SkillController) Declaration public void OnSkillControllerDisable(SkillController skillController) Parameters Type Name Description SkillController skillController OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler ISkillTriggerUnitHandler ISkillControllerDisableHandler"
  },
  "api/Global.SkillEvent010.html": {
    "href": "api/Global.SkillEvent010.html",
    "title": "Class SkillEvent010 | 塔防游戏API文档",
    "keywords": "Class SkillEvent010 Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent010 Implements ISkillLearnHandler ISkillForgetHandler ISkillUseHandler Inherited Members MartialArtEvent.ownerLocked MartialArtEvent.OnSkillLearn(Skill) MartialArtEvent.OnSkillForget(Skill) SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent010 : MartialArtEvent, ISkillLearnHandler, ISkillForgetHandler, ISkillUseHandler Fields state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillLearnHandler ISkillForgetHandler ISkillUseHandler"
  },
  "api/Global.SkillEvent011.html": {
    "href": "api/Global.SkillEvent011.html",
    "title": "Class SkillEvent011 | 塔防游戏API文档",
    "keywords": "Class SkillEvent011 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent011 Implements ISkillUseHandler ISkillTriggerUnitHandler IDeathHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent011 : SkillEvent, ISkillUseHandler, ISkillTriggerUnitHandler, IDeathHandler Fields iconPrefab Declaration public SpriteRenderer iconPrefab Field Value Type Description SpriteRenderer state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnDeath(Unit, Unit, DamageInfo) Declaration public void OnDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler ISkillTriggerUnitHandler IDeathHandler"
  },
  "api/Global.SkillEvent012.html": {
    "href": "api/Global.SkillEvent012.html",
    "title": "Class SkillEvent012 | 塔防游戏API文档",
    "keywords": "Class SkillEvent012 Inheritance System.Object BaseEvent < Skill > SkillEvent SkillEvent012 Implements ISkillUseHandler Inherited Members SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent012 : SkillEvent, ISkillUseHandler Fields state Declaration public ConfigItemReference<StatesConfigItem> state Field Value Type Description ConfigItemReference < StatesConfigItem > Methods OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler"
  },
  "api/Global.SkillEvent013.html": {
    "href": "api/Global.SkillEvent013.html",
    "title": "Class SkillEvent013 | 塔防游戏API文档",
    "keywords": "Class SkillEvent013 Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent013 Implements ISkillLearnHandler ISkillForgetHandler Inherited Members MartialArtEvent.ownerLocked MartialArtEvent.OnSkillLearn(Skill) MartialArtEvent.OnSkillForget(Skill) SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent013 : MartialArtEvent, ISkillLearnHandler, ISkillForgetHandler Implements ISkillLearnHandler ISkillForgetHandler"
  },
  "api/Global.SkillEvent014.html": {
    "href": "api/Global.SkillEvent014.html",
    "title": "Class SkillEvent014 | 塔防游戏API文档",
    "keywords": "Class SkillEvent014 Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent014 Implements ISkillLearnHandler ISkillForgetHandler Inherited Members MartialArtEvent.ownerLocked MartialArtEvent.OnSkillLearn(Skill) MartialArtEvent.OnSkillForget(Skill) SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent014 : MartialArtEvent, ISkillLearnHandler, ISkillForgetHandler Implements ISkillLearnHandler ISkillForgetHandler"
  },
  "api/Global.SkillEvent015.html": {
    "href": "api/Global.SkillEvent015.html",
    "title": "Class SkillEvent015 | 塔防游戏API文档",
    "keywords": "Class SkillEvent015 Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent015 Implements ISkillLearnHandler ISkillForgetHandler Inherited Members MartialArtEvent.ownerLocked MartialArtEvent.OnSkillLearn(Skill) MartialArtEvent.OnSkillForget(Skill) SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent015 : MartialArtEvent, ISkillLearnHandler, ISkillForgetHandler Implements ISkillLearnHandler ISkillForgetHandler"
  },
  "api/Global.SkillEvent016.html": {
    "href": "api/Global.SkillEvent016.html",
    "title": "Class SkillEvent016 | 塔防游戏API文档",
    "keywords": "Class SkillEvent016 Inheritance System.Object BaseEvent < Skill > SkillEvent MartialArtEvent SkillEvent016 Implements ISkillLearnHandler ISkillForgetHandler Inherited Members MartialArtEvent.ownerLocked MartialArtEvent.OnSkillLearn(Skill) MartialArtEvent.OnSkillForget(Skill) SkillEvent.DoBehaviour(SkillController) SkillEvent.OnAnyViewClose(BaseView) BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Skill>.SetInScreen(Transform, Single, Single) BaseEvent<Skill>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent016 : MartialArtEvent, ISkillLearnHandler, ISkillForgetHandler Implements ISkillLearnHandler ISkillForgetHandler"
  },
  "api/Global.SkillMoveType.html": {
    "href": "api/Global.SkillMoveType.html",
    "title": "Enum SkillMoveType | 塔防游戏API文档",
    "keywords": "Enum SkillMoveType 技能移动类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum SkillMoveType Fields Name Description Bind 绑定 Directional 发射 Fixed 固定 Follow 跟随"
  },
  "api/Global.SkillsConfig.html": {
    "href": "api/Global.SkillsConfig.html",
    "title": "Class SkillsConfig | 塔防游戏API文档",
    "keywords": "Class SkillsConfig 技能配置列表。 Inheritance System.Object BaseConfigTable < SkillsConfigItem > SkillsConfig Inherited Members BaseConfigTable<SkillsConfigItem>.tabName BaseConfigTable<SkillsConfigItem>.frameVersion BaseConfigTable<SkillsConfigItem>.version BaseConfigTable<SkillsConfigItem>.enableConsole BaseConfigTable<SkillsConfigItem>.configList BaseConfigTable<SkillsConfigItem>.ConfigTableVersion BaseConfigTable<SkillsConfigItem>.Item[Int32] BaseConfigTable<SkillsConfigItem>.Item[String] BaseConfigTable<SkillsConfigItem>.GetConfigByName(String) BaseConfigTable<SkillsConfigItem>.GetConfigIndex(SkillsConfigItem) BaseConfigTable<SkillsConfigItem>.ConfigCount BaseConfigTable<SkillsConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillsConfig : BaseConfigTable<SkillsConfigItem> Fields defaultControllerPrefab 默认控制器预制体 Declaration public SkillController defaultControllerPrefab Field Value Type Description SkillController"
  },
  "api/Global.SkillsConfigItem.html": {
    "href": "api/Global.SkillsConfigItem.html",
    "title": "Class SkillsConfigItem | 塔防游戏API文档",
    "keywords": "Class SkillsConfigItem 技能配置数据。 Inheritance System.Object BaseConfigItem SkillsConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class SkillsConfigItem : BaseConfigItem Fields allowMultipleAnimations 允许创建多个动画 若设置此项，建议把持续时间调整为0以上或在动画中通过事件销毁，否则会很消耗性能 Declaration public bool allowMultipleAnimations Field Value Type Description System.Boolean bonusATK 攻击力加成值 Declaration public int bonusATK Field Value Type Description System.Int32 bonusATK_P 攻击力加成百分比（%） Declaration public int bonusATK_P Field Value Type Description System.Int32 bonusDashRange 冲刺幅度加成（%） Declaration public int bonusDashRange Field Value Type Description System.Int32 bonusDashRange_P 冲刺幅度加成百分比（%） Declaration public int bonusDashRange_P Field Value Type Description System.Int32 bonusDEF 物理防御力加成值 Declaration public int bonusDEF Field Value Type Description System.Int32 bonusDEF_P 物理防御力加成百分比（%） Declaration public int bonusDEF_P Field Value Type Description System.Int32 bonusEDF 能量防御力加成值 Declaration public int bonusEDF Field Value Type Description System.Int32 bonusEDF_P 能量防御力加成百分比（%） Declaration public int bonusEDF_P Field Value Type Description System.Int32 bonusERS 能量抗性加成值（%） Declaration public float bonusERS Field Value Type Description System.Single bonusMaxHP 生命值上限加成值 Declaration public int bonusMaxHP Field Value Type Description System.Int32 bonusMaxHP_P 生命值上限加成百分比（%） Declaration public int bonusMaxHP_P Field Value Type Description System.Int32 bonusMaxTOU 韧性值上限加成值 Declaration public int bonusMaxTOU Field Value Type Description System.Int32 bonusMaxTOU_P 韧性值上限加成百分比（%） Declaration public int bonusMaxTOU_P Field Value Type Description System.Int32 bonusRES 物理抗性加成值（%） Declaration public float bonusRES Field Value Type Description System.Single bonusSPD 速度加成值 Declaration public float bonusSPD Field Value Type Description System.Single bonusSPD_P 速度加成百分比（%） Declaration public int bonusSPD_P Field Value Type Description System.Int32 canBeUsed 是否可以主动使用 Declaration public bool canBeUsed Field Value Type Description System.Boolean controllerPrefab Declaration public SkillController controllerPrefab Field Value Type Description SkillController disableAttack Declaration public bool disableAttack Field Value Type Description System.Boolean disableMove 禁用移动 Declaration public bool disableMove Field Value Type Description System.Boolean duration 持续时间（秒）（0代表无限时间） Declaration public float duration Field Value Type Description System.Single eventScript 事件脚本 Declaration public SkillEvent eventScript Field Value Type Description SkillEvent hideInMenu 是否在菜单中隐藏 Declaration public bool hideInMenu Field Value Type Description System.Boolean iconList 图标列表 按照连段顺序排列 Declaration public List<Sprite> iconList Field Value Type Description List < Sprite > moveSpeed 移动速度 Declaration public float moveSpeed Field Value Type Description System.Single moveType 移动类型 Declaration public SkillMoveType moveType Field Value Type Description SkillMoveType Methods CreateController(Skill, UnitController, Transform) 创建控制器。 与单位控制器不同的是，技能控制器和技能数据并非强绑定关系，一个技能数据可以创建多个控制器。 Declaration public SkillController CreateController(Skill skill, UnitController user, Transform parent = null) Parameters Type Name Description Skill skill 技能 UnitController user 使用者 Transform parent 父对象 Returns Type Description SkillController 控制器"
  },
  "api/Global.State.html": {
    "href": "api/Global.State.html",
    "title": "Class State | 塔防游戏API文档",
    "keywords": "Class State 处理状态的类。 Inheritance System.Object BaseUserData ObservableUserData < State > State Inherited Members ObservableUserData<State>.OnDataChanged ObservableUserData<State>.TriggerDataChanged(State) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class State : ObservableUserData<State> Constructors State(String) Declaration public State(string configID) Parameters Type Name Description System.String configID Fields configID Declaration public readonly string configID Field Value Type Description System.String id Declaration public readonly string id Field Value Type Description System.String Properties BonusATK 状态的攻击力加成值 Declaration public int BonusATK { get; set; } Property Value Type Description System.Int32 BonusATK_P 状态的攻击力加成百分比（%） Declaration public int BonusATK_P { get; set; } Property Value Type Description System.Int32 BonusDashRange 状态的冲刺幅度加成（%） Declaration public int BonusDashRange { get; set; } Property Value Type Description System.Int32 BonusDashRange_P 状态的冲刺幅度加成百分比（%） Declaration public int BonusDashRange_P { get; set; } Property Value Type Description System.Int32 BonusDEF 状态的物理防御力加成值 Declaration public int BonusDEF { get; set; } Property Value Type Description System.Int32 BonusDEF_P 状态的物理防御力加成百分比（%） Declaration public int BonusDEF_P { get; set; } Property Value Type Description System.Int32 BonusEDF 状态的能量防御力加成值 Declaration public int BonusEDF { get; set; } Property Value Type Description System.Int32 BonusEDF_P 状态的能量防御力加成百分比（%） Declaration public int BonusEDF_P { get; set; } Property Value Type Description System.Int32 BonusERS 状态的能量抗性加成值（%） Declaration public float BonusERS { get; set; } Property Value Type Description System.Single BonusMaxHP 状态的生命值上限加成值 Declaration public int BonusMaxHP { get; set; } Property Value Type Description System.Int32 BonusMaxHP_P 状态的生命值上限加成百分比（%） Declaration public int BonusMaxHP_P { get; set; } Property Value Type Description System.Int32 BonusMaxTOU 状态的韧性值上限加成值 Declaration public int BonusMaxTOU { get; set; } Property Value Type Description System.Int32 BonusMaxTOU_P 状态的韧性值上限加成百分比（%） Declaration public int BonusMaxTOU_P { get; set; } Property Value Type Description System.Int32 BonusRES 状态的物理抗性加成值（%） Declaration public float BonusRES { get; set; } Property Value Type Description System.Single BonusSPD 状态的速度加成值 Declaration public float BonusSPD { get; set; } Property Value Type Description System.Single BonusSPD_P 状态的速度加成百分比（%） Declaration public int BonusSPD_P { get; set; } Property Value Type Description System.Int32 Config 状态的基础配置。 Declaration public StatesConfigItem Config { get; } Property Value Type Description StatesConfigItem DisableAttack 状态是否禁用攻击 Declaration public bool DisableAttack { get; set; } Property Value Type Description System.Boolean DisableMove 状态是否禁用移动 Declaration public bool DisableMove { get; set; } Property Value Type Description System.Boolean Duration 状态的持续时间（秒）。 Declaration public float Duration { get; set; } Property Value Type Description System.Single EnergyShield 状态提供的能量护盾。 Declaration public int EnergyShield { get; set; } Property Value Type Description System.Int32 EventScript 事件脚本。 Declaration public StateEvent EventScript { get; } Property Value Type Description StateEvent IsEnergyAttackImmune 状态是否免疫能量攻击 Declaration public bool IsEnergyAttackImmune { get; set; } Property Value Type Description System.Boolean IsPhysicalAttackImmune 状态是否免疫物理攻击 Declaration public bool IsPhysicalAttackImmune { get; set; } Property Value Type Description System.Boolean Owner 状态的所有者。 Declaration public Unit Owner { get; set; } Property Value Type Description Unit PhysicalShield 状态提供的物理护盾。 Declaration public int PhysicalShield { get; set; } Property Value Type Description System.Int32 UniversalShield 状态提供的全能护盾。 Declaration public int UniversalShield { get; set; } Property Value Type Description System.Int32 Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Destroy() Declaration public void Destroy() HasOwner() 是否拥有所有者。 Declaration public bool HasOwner() Returns Type Description System.Boolean 是否拥有所有者 Init() Declaration public void Init()"
  },
  "api/Global.StateEvent.html": {
    "href": "api/Global.StateEvent.html",
    "title": "Class StateEvent | 塔防游戏API文档",
    "keywords": "Class StateEvent Inheritance System.Object BaseEvent < State > StateEvent StateEvent002 StateEvent003 StateEvent004 StateEvent005 StateEvent006 StateEvent010 Inherited Members BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent : BaseEvent<State> Methods OnAnyViewClose(BaseView) Declaration protected override void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view Overrides BaseEvent<State>.OnAnyViewClose(BaseView)"
  },
  "api/Global.StateEvent002.html": {
    "href": "api/Global.StateEvent002.html",
    "title": "Class StateEvent002 | 塔防游戏API文档",
    "keywords": "Class StateEvent002 Inheritance System.Object BaseEvent < State > StateEvent StateEvent002 Implements IUnitDashHandler IAfterUnitDashHandler ISkillUseHandler IStateGainHandler IStateLostHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent002 : StateEvent, IUnitDashHandler, IAfterUnitDashHandler, ISkillUseHandler, IStateGainHandler, IStateLostHandler Fields effect1Prefab Declaration public SpriteRenderer effect1Prefab Field Value Type Description SpriteRenderer effect2Prefab Declaration public TrailRenderer effect2Prefab Field Value Type Description TrailRenderer Methods AfterUnitDash(UnitController) Declaration public void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController OnStateGain(State) Declaration public void OnStateGain(State state) Parameters Type Name Description State state OnStateLost(State) Declaration public void OnStateLost(State state) Parameters Type Name Description State state OnUnitDash(UnitController) Declaration public void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Implements IUnitDashHandler IAfterUnitDashHandler ISkillUseHandler IStateGainHandler IStateLostHandler"
  },
  "api/Global.StateEvent003.html": {
    "href": "api/Global.StateEvent003.html",
    "title": "Class StateEvent003 | 塔防游戏API文档",
    "keywords": "Class StateEvent003 Inheritance System.Object BaseEvent < State > StateEvent StateEvent003 Implements IStateGainHandler IStateLostHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent003 : StateEvent, IStateGainHandler, IStateLostHandler Fields effectPrefab Declaration public SpriteRenderer effectPrefab Field Value Type Description SpriteRenderer Methods OnStateGain(State) Declaration public void OnStateGain(State state) Parameters Type Name Description State state OnStateLost(State) Declaration public void OnStateLost(State state) Parameters Type Name Description State state Implements IStateGainHandler IStateLostHandler"
  },
  "api/Global.StateEvent004.html": {
    "href": "api/Global.StateEvent004.html",
    "title": "Class StateEvent004 | 塔防游戏API文档",
    "keywords": "Class StateEvent004 Inheritance System.Object BaseEvent < State > StateEvent StateEvent004 Implements IAfterDamageCalculatorHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent004 : StateEvent, IAfterDamageCalculatorHandler Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IAfterDamageCalculatorHandler"
  },
  "api/Global.StateEvent005.html": {
    "href": "api/Global.StateEvent005.html",
    "title": "Class StateEvent005 | 塔防游戏API文档",
    "keywords": "Class StateEvent005 Inheritance System.Object BaseEvent < State > StateEvent StateEvent005 Implements IAfterDamageCalculatorHandler IStateLostHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent005 : StateEvent, IAfterDamageCalculatorHandler, IStateLostHandler Fields autoUseSkill Declaration public ConfigItemReference<SkillsConfigItem> autoUseSkill Field Value Type Description ConfigItemReference < SkillsConfigItem > passiveSkill1 Declaration public ConfigItemReference<SkillsConfigItem> passiveSkill1 Field Value Type Description ConfigItemReference < SkillsConfigItem > skillComboID Declaration public string skillComboID Field Value Type Description System.String Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo OnStateLost(State) Declaration public void OnStateLost(State state) Parameters Type Name Description State state Implements IAfterDamageCalculatorHandler IStateLostHandler"
  },
  "api/Global.StateEvent006.html": {
    "href": "api/Global.StateEvent006.html",
    "title": "Class StateEvent006 | 塔防游戏API文档",
    "keywords": "Class StateEvent006 Inheritance System.Object BaseEvent < State > StateEvent StateEvent006 Implements IStateGainHandler IStateLostHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent006 : StateEvent, IStateGainHandler, IStateLostHandler Fields effectPrefab Declaration public SpriteRenderer effectPrefab Field Value Type Description SpriteRenderer Methods OnStateGain(State) Declaration public void OnStateGain(State state) Parameters Type Name Description State state OnStateLost(State) Declaration public void OnStateLost(State state) Parameters Type Name Description State state Implements IStateGainHandler IStateLostHandler"
  },
  "api/Global.StateEvent010.html": {
    "href": "api/Global.StateEvent010.html",
    "title": "Class StateEvent010 | 塔防游戏API文档",
    "keywords": "Class StateEvent010 Inheritance System.Object BaseEvent < State > StateEvent StateEvent010 Implements ISkillUseHandler IBeforeDamageCalculatorHandler IAfterDamageCalculatorHandler Inherited Members StateEvent.OnAnyViewClose(BaseView) BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<State>.SetInScreen(Transform, Single, Single) BaseEvent<State>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent010 : StateEvent, ISkillUseHandler, IBeforeDamageCalculatorHandler, IAfterDamageCalculatorHandler Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo BeforeDamageCalculator(Unit, Unit, DamageInfo) Declaration public void BeforeDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler IBeforeDamageCalculatorHandler IAfterDamageCalculatorHandler"
  },
  "api/Global.StateInfoShower.html": {
    "href": "api/Global.StateInfoShower.html",
    "title": "Class StateInfoShower | 塔防游戏API文档",
    "keywords": "Class StateInfoShower 处理状态信息显示的类。 Inheritance System.Object StateInfoShower Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateInfoShower : MonoBehaviour Fields descText Declaration public TextMeshProUGUI descText Field Value Type Description TextMeshProUGUI enablePopWindow Declaration public bool enablePopWindow Field Value Type Description System.Boolean iconImage Declaration public Image iconImage Field Value Type Description Image iconText Declaration public TextMeshProUGUI iconText Field Value Type Description TextMeshProUGUI nameText Declaration public TextMeshProUGUI nameText Field Value Type Description TextMeshProUGUI rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform Properties TargetConfig Declaration public StatesConfigItem TargetConfig { get; set; } Property Value Type Description StatesConfigItem TargetState Declaration public State TargetState { get; set; } Property Value Type Description State Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public void Refresh() Events OnPointerClickEvent Declaration public event UnityAction<PointerEventData> OnPointerClickEvent Event Type Type Description UnityAction < PointerEventData > Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler"
  },
  "api/Global.StatesConfig.html": {
    "href": "api/Global.StatesConfig.html",
    "title": "Class StatesConfig | 塔防游戏API文档",
    "keywords": "Class StatesConfig 状态配置列表。 Inheritance System.Object BaseConfigTable < StatesConfigItem > StatesConfig Inherited Members BaseConfigTable<StatesConfigItem>.tabName BaseConfigTable<StatesConfigItem>.frameVersion BaseConfigTable<StatesConfigItem>.version BaseConfigTable<StatesConfigItem>.enableConsole BaseConfigTable<StatesConfigItem>.configList BaseConfigTable<StatesConfigItem>.ConfigTableVersion BaseConfigTable<StatesConfigItem>.Item[Int32] BaseConfigTable<StatesConfigItem>.Item[String] BaseConfigTable<StatesConfigItem>.GetConfigByName(String) BaseConfigTable<StatesConfigItem>.GetConfigIndex(StatesConfigItem) BaseConfigTable<StatesConfigItem>.ConfigCount BaseConfigTable<StatesConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StatesConfig : BaseConfigTable<StatesConfigItem>"
  },
  "api/Global.StatesConfigItem.html": {
    "href": "api/Global.StatesConfigItem.html",
    "title": "Class StatesConfigItem | 塔防游戏API文档",
    "keywords": "Class StatesConfigItem 状态配置数据。 Inheritance System.Object BaseConfigItem StatesConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class StatesConfigItem : BaseConfigItem Fields allowMultiple 允许添加多个相同状态 Declaration public bool allowMultiple Field Value Type Description System.Boolean bonusATK 攻击力加成值 Declaration public int bonusATK Field Value Type Description System.Int32 bonusATK_P 攻击力加成百分比（%） Declaration public int bonusATK_P Field Value Type Description System.Int32 bonusDashRange 冲刺幅度加成（%） Declaration public int bonusDashRange Field Value Type Description System.Int32 bonusDashRange_P 冲刺幅度加成百分比（%） Declaration public int bonusDashRange_P Field Value Type Description System.Int32 bonusDEF 物理防御力加成值 Declaration public int bonusDEF Field Value Type Description System.Int32 bonusDEF_P 物理防御力加成百分比（%） Declaration public int bonusDEF_P Field Value Type Description System.Int32 bonusEDF 能量防御力加成值 Declaration public int bonusEDF Field Value Type Description System.Int32 bonusEDF_P 能量防御力加成百分比（%） Declaration public int bonusEDF_P Field Value Type Description System.Int32 bonusERS 能量抗性加成值（%） Declaration public float bonusERS Field Value Type Description System.Single bonusMaxHP 生命值上限加成值 Declaration public int bonusMaxHP Field Value Type Description System.Int32 bonusMaxHP_P 生命值上限加成百分比（%） Declaration public int bonusMaxHP_P Field Value Type Description System.Int32 bonusMaxTOU 韧性值上限加成值 Declaration public int bonusMaxTOU Field Value Type Description System.Int32 bonusMaxTOU_P 韧性值上限加成百分比（%） Declaration public int bonusMaxTOU_P Field Value Type Description System.Int32 bonusRES 物理抗性加成值（%） Declaration public float bonusRES Field Value Type Description System.Single bonusSPD 速度加成值 Declaration public float bonusSPD Field Value Type Description System.Single bonusSPD_P 速度加成百分比（%） Declaration public int bonusSPD_P Field Value Type Description System.Int32 disableAttack 禁用攻击 Declaration public bool disableAttack Field Value Type Description System.Boolean disableMove 禁用移动 Declaration public bool disableMove Field Value Type Description System.Boolean duration 持续时间（秒）（0代表无限时间） Declaration public float duration Field Value Type Description System.Single energyShield 能量护盾 Declaration public int energyShield Field Value Type Description System.Int32 eventScript 事件脚本 Declaration public StateEvent eventScript Field Value Type Description StateEvent hideInMenu 是否在菜单中隐藏 Declaration public bool hideInMenu Field Value Type Description System.Boolean icon 图标 Declaration public Sprite icon Field Value Type Description Sprite isEnergyAttackImmune 免疫能量攻击 Declaration public bool isEnergyAttackImmune Field Value Type Description System.Boolean isPhysicalAttackImmune 免疫物理攻击 Declaration public bool isPhysicalAttackImmune Field Value Type Description System.Boolean overridingStateList 覆盖状态列表 本状态无法与下列状态共存，下列状态会被移除且本状态保留 Declaration public List<ConfigItemReference<StatesConfigItem>> overridingStateList Field Value Type Description List < ConfigItemReference < StatesConfigItem >> physicalShield 物理护盾 Declaration public int physicalShield Field Value Type Description System.Int32 universalShield 全能护盾 Declaration public int universalShield Field Value Type Description System.Int32"
  },
  "api/Global.SubTest.html": {
    "href": "api/Global.SubTest.html",
    "title": "Class SubTest | 塔防游戏API文档",
    "keywords": "Class SubTest Inheritance System.Object Test SubTest Inherited Members Test.createUnitList Test.OnDebug1Click(InputAction.CallbackContext) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SubTest : Test"
  },
  "api/Global.SystemData.html": {
    "href": "api/Global.SystemData.html",
    "title": "Class SystemData | 塔防游戏API文档",
    "keywords": "Class SystemData 处理系统设置的类。 Inheritance System.Object BaseUserData ObservableUserData < SystemData > SystemData Inherited Members ObservableUserData<SystemData>.OnDataChanged ObservableUserData<SystemData>.TriggerDataChanged(SystemData) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SystemData : ObservableUserData<SystemData> Constructors SystemData() Declaration public SystemData() Properties AutoSave 自动存档开关。 Declaration public bool AutoSave { get; set; } Property Value Type Description System.Boolean AutoSaveDuration 自动存档间隔（秒）。 Declaration public int AutoSaveDuration { get; set; } Property Value Type Description System.Int32 AutoSaveSlotList 可用自动存档的存档位列表。 Declaration public ObservableCollection<int> AutoSaveSlotList { get; } Property Value Type Description ObservableCollection < System.Int32 > BGMVolume 背景音乐音量（0-100）。 Declaration public int BGMVolume { get; set; } Property Value Type Description System.Int32 Language 语言。 Declaration public LanguageType Language { get; set; } Property Value Type Description LanguageType LastAutoSaveSlot 上一次自动存档的位置。 Declaration public int LastAutoSaveSlot { get; set; } Property Value Type Description System.Int32 MaxAutoSaveCount 最大自动存档数量。 Declaration public int MaxAutoSaveCount { get; set; } Property Value Type Description System.Int32 SaveSlotList 可用存档的存档位列表。 Declaration public ObservableCollection<int> SaveSlotList { get; } Property Value Type Description ObservableCollection < System.Int32 > SEVolume 音效音量（0-100）。 Declaration public int SEVolume { get; set; } Property Value Type Description System.Int32 Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave()"
  },
  "api/Global.Task.html": {
    "href": "api/Global.Task.html",
    "title": "Class Task | 塔防游戏API文档",
    "keywords": "Class Task 处理任务的类。 Inheritance System.Object BaseUserData ObservableUserData < Task > Task Inherited Members ObservableUserData<Task>.OnDataChanged ObservableUserData<Task>.TriggerDataChanged(Task) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Task : ObservableUserData<Task> Constructors Task(String) Declaration public Task(string configID) Parameters Type Name Description System.String configID Task(String, String) Declaration protected Task(string id, string configID) Parameters Type Name Description System.String id System.String configID Fields configID Declaration public readonly string configID Field Value Type Description System.String id Declaration public readonly string id Field Value Type Description System.String Properties Config 任务的基础配置。 Declaration public TasksConfigItem Config { get; } Property Value Type Description TasksConfigItem EventScript 事件脚本。 Declaration public TaskEvent EventScript { get; } Property Value Type Description TaskEvent IsOptional 是否为可选任务。 Declaration public bool IsOptional { get; set; } Property Value Type Description System.Boolean Owner 任务的所有者。 Declaration public Level Owner { get; set; } Property Value Type Description Level Progress 完成进度。 Declaration public float Progress { get; set; } Property Value Type Description System.Single Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Destroy() Declaration public void Destroy() HasOwner() 是否拥有所有者。 Declaration public bool HasOwner() Returns Type Description System.Boolean 是否拥有所有者 Init() Declaration public void Init()"
  },
  "api/Global.TaskEvent.html": {
    "href": "api/Global.TaskEvent.html",
    "title": "Class TaskEvent | 塔防游戏API文档",
    "keywords": "Class TaskEvent Inheritance System.Object BaseEvent < Task > TaskEvent TaskEvent000 TaskEvent001 Inherited Members BaseEvent<Task>.Owner BaseEvent<Task>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Task>.SetInScreen(Transform, Single, Single) BaseEvent<Task>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TaskEvent : BaseEvent<Task> Methods GetTaskDesc() Declaration public virtual string GetTaskDesc() Returns Type Description System.String OnAnyViewClose(BaseView) Declaration protected override void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view Overrides BaseEvent<Task>.OnAnyViewClose(BaseView)"
  },
  "api/Global.TaskEvent000.html": {
    "href": "api/Global.TaskEvent000.html",
    "title": "Class TaskEvent000 | 塔防游戏API文档",
    "keywords": "Class TaskEvent000 Inheritance System.Object BaseEvent < Task > TaskEvent TaskEvent000 Implements IDeathHandler Inherited Members TaskEvent.OnAnyViewClose(BaseView) BaseEvent<Task>.Owner BaseEvent<Task>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Task>.SetInScreen(Transform, Single, Single) BaseEvent<Task>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TaskEvent000 : TaskEvent, IDeathHandler Methods GetTaskDesc() Declaration public override string GetTaskDesc() Returns Type Description System.String Overrides TaskEvent.GetTaskDesc() OnDeath(Unit, Unit, DamageInfo) Declaration public void OnDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IDeathHandler"
  },
  "api/Global.TaskEvent001.html": {
    "href": "api/Global.TaskEvent001.html",
    "title": "Class TaskEvent001 | 塔防游戏API文档",
    "keywords": "Class TaskEvent001 Inheritance System.Object BaseEvent < Task > TaskEvent TaskEvent001 Implements ISkillUseHandler Inherited Members TaskEvent.OnAnyViewClose(BaseView) BaseEvent<Task>.Owner BaseEvent<Task>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Task>.SetInScreen(Transform, Single, Single) BaseEvent<Task>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TaskEvent001 : TaskEvent, ISkillUseHandler Fields checkedSkill Declaration public ConfigItemReference<SkillsConfigItem> checkedSkill Field Value Type Description ConfigItemReference < SkillsConfigItem > Methods GetTaskDesc() Declaration public override string GetTaskDesc() Returns Type Description System.String Overrides TaskEvent.GetTaskDesc() OnSkillUse(SkillController) Declaration public void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Implements ISkillUseHandler"
  },
  "api/Global.TasksConfig.html": {
    "href": "api/Global.TasksConfig.html",
    "title": "Class TasksConfig | 塔防游戏API文档",
    "keywords": "Class TasksConfig 任务配置列表。 Inheritance System.Object BaseConfigTable < TasksConfigItem > TasksConfig Inherited Members BaseConfigTable<TasksConfigItem>.tabName BaseConfigTable<TasksConfigItem>.frameVersion BaseConfigTable<TasksConfigItem>.version BaseConfigTable<TasksConfigItem>.enableConsole BaseConfigTable<TasksConfigItem>.configList BaseConfigTable<TasksConfigItem>.ConfigTableVersion BaseConfigTable<TasksConfigItem>.Item[Int32] BaseConfigTable<TasksConfigItem>.Item[String] BaseConfigTable<TasksConfigItem>.GetConfigByName(String) BaseConfigTable<TasksConfigItem>.GetConfigIndex(TasksConfigItem) BaseConfigTable<TasksConfigItem>.ConfigCount BaseConfigTable<TasksConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TasksConfig : BaseConfigTable<TasksConfigItem>"
  },
  "api/Global.TasksConfigItem.html": {
    "href": "api/Global.TasksConfigItem.html",
    "title": "Class TasksConfigItem | 塔防游戏API文档",
    "keywords": "Class TasksConfigItem 任务配置数据。 Inheritance System.Object BaseConfigItem TasksConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class TasksConfigItem : BaseConfigItem Fields eventScript 事件脚本 Declaration public TaskEvent eventScript Field Value Type Description TaskEvent isOptional 是否为可选任务 Declaration public bool isOptional Field Value Type Description System.Boolean"
  },
  "api/Global.Test.html": {
    "href": "api/Global.Test.html",
    "title": "Class Test | 塔防游戏API文档",
    "keywords": "Class Test Inheritance System.Object Test SubTest Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Test : MonoBehaviour Fields createUnitList Declaration public List<ConfigItemReference<UnitsConfigItem>> createUnitList Field Value Type Description List < ConfigItemReference < UnitsConfigItem >> Methods OnDebug1Click(InputAction.CallbackContext) Declaration public void OnDebug1Click(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context"
  },
  "api/Global.TitleView.html": {
    "href": "api/Global.TitleView.html",
    "title": "Class TitleView | 塔防游戏API文档",
    "keywords": "Class TitleView 处理场景TitleScene的视图。 Inheritance System.Object BaseView TitleView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TitleView : BaseView Fields defaultAvailableUnitPool Declaration public List<ConfigItemReference<UnitsConfigItem>> defaultAvailableUnitPool Field Value Type Description List < ConfigItemReference < UnitsConfigItem >> defaultItemList Declaration public List<ConfigItemReference<UnitsConfigItem>> defaultItemList Field Value Type Description List < ConfigItemReference < UnitsConfigItem >> loadButton Declaration public Button loadButton Field Value Type Description Button testSkillList Declaration public List<ConfigItemReference<SkillsConfigItem>> testSkillList Field Value Type Description List < ConfigItemReference < SkillsConfigItem >> Methods ExitGame() Declaration public void ExitGame() LoadGame() Declaration public void LoadGame() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() OpenSettingsView() Declaration public void OpenSettingsView() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() StartGame() Declaration public void StartGame()"
  },
  "api/Global.Unit.html": {
    "href": "api/Global.Unit.html",
    "title": "Class Unit | 塔防游戏API文档",
    "keywords": "Class Unit 处理单位的类。 Inheritance System.Object BaseUserData ObservableUserData < Unit > Unit Player Inherited Members ObservableUserData<Unit>.OnDataChanged ObservableUserData<Unit>.TriggerDataChanged(Unit) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Unit : ObservableUserData<Unit> Constructors Unit(String) Declaration public Unit(string configID) Parameters Type Name Description System.String configID Unit(String, String) Declaration protected Unit(string id, string configID) Parameters Type Name Description System.String id System.String configID Fields _basicATK Declaration protected int _basicATK Field Value Type Description System.Int32 _basicDashRange Declaration protected int _basicDashRange Field Value Type Description System.Int32 _basicDEF Declaration protected int _basicDEF Field Value Type Description System.Int32 _basicEDF Declaration protected int _basicEDF Field Value Type Description System.Int32 _basicERS Declaration protected float _basicERS Field Value Type Description System.Single _basicMaxHP Declaration protected int _basicMaxHP Field Value Type Description System.Int32 _basicMaxTOU Declaration protected int _basicMaxTOU Field Value Type Description System.Int32 _basicRES Declaration protected float _basicRES Field Value Type Description System.Single _basicSPD Declaration protected float _basicSPD Field Value Type Description System.Single _hp Declaration protected int _hp Field Value Type Description System.Int32 _inventoryUnitList Declaration protected List<Unit> _inventoryUnitList Field Value Type Description List < Unit > _skillList Declaration protected List<Skill> _skillList Field Value Type Description List < Skill > _stateList Declaration protected List<State> _stateList Field Value Type Description List < State > _tou Declaration protected int _tou Field Value Type Description System.Int32 configID Declaration public readonly string configID Field Value Type Description System.String id Declaration public readonly string id Field Value Type Description System.String Properties ATK 单位的攻击力。 Declaration public int ATK { get; } Property Value Type Description System.Int32 BasicATK 单位的基础攻击力。 Declaration public int BasicATK { get; set; } Property Value Type Description System.Int32 BasicDashRange 单位的基础冲刺幅度（%）。 Declaration public int BasicDashRange { get; set; } Property Value Type Description System.Int32 BasicDEF 单位的基础物理防御力。 Declaration public int BasicDEF { get; set; } Property Value Type Description System.Int32 BasicEDF 单位的基础能量防御力。 Declaration public int BasicEDF { get; set; } Property Value Type Description System.Int32 BasicERS 单位的基础能量抗性（%）。 Declaration public float BasicERS { get; set; } Property Value Type Description System.Single BasicMaxHP 单位的基础生命值上限。 Declaration public int BasicMaxHP { get; set; } Property Value Type Description System.Int32 BasicMaxTOU 单位的基础韧性值上限。 Declaration public int BasicMaxTOU { get; set; } Property Value Type Description System.Int32 BasicRES 单位的基础物理抗性（%）。 Declaration public float BasicRES { get; set; } Property Value Type Description System.Single BasicSPD 单位的基础速度（格每秒）。 Declaration public float BasicSPD { get; set; } Property Value Type Description System.Single BonusATK 单位的攻击力加成。 Declaration public int BonusATK { get; } Property Value Type Description System.Int32 BonusATK_P 单位的攻击力加成百分比（%）。 Declaration public int BonusATK_P { get; } Property Value Type Description System.Int32 BonusDashRange 单位的冲刺幅度加成（%）。 Declaration public int BonusDashRange { get; } Property Value Type Description System.Int32 BonusDashRange_P 单位的冲刺幅度加成百分比（%）。 Declaration public int BonusDashRange_P { get; } Property Value Type Description System.Int32 BonusDEF 单位的物理防御力加成。 Declaration public int BonusDEF { get; } Property Value Type Description System.Int32 BonusDEF_P 单位的物理防御力加成百分比（%）。 Declaration public int BonusDEF_P { get; } Property Value Type Description System.Int32 BonusEDF 单位的能量防御力加成。 Declaration public int BonusEDF { get; } Property Value Type Description System.Int32 BonusEDF_P 单位的能量防御力加成百分比（%）。 Declaration public int BonusEDF_P { get; } Property Value Type Description System.Int32 BonusERS 单位的能量抗性加成（%）。 Declaration public float BonusERS { get; } Property Value Type Description System.Single BonusMaxHP 单位的生命值上限加成。 Declaration public int BonusMaxHP { get; } Property Value Type Description System.Int32 BonusMaxHP_P 单位的生命值上限加成百分比（%）。 Declaration public int BonusMaxHP_P { get; } Property Value Type Description System.Int32 BonusMaxTOU 单位的生命值上限加成。 Declaration public int BonusMaxTOU { get; } Property Value Type Description System.Int32 BonusMaxTOU_P 单位的生命值上限加成百分比（%）。 Declaration public int BonusMaxTOU_P { get; } Property Value Type Description System.Int32 BonusRES 单位的物理抗性加成（%）。 Declaration public float BonusRES { get; } Property Value Type Description System.Single BonusSPD 单位的速度加成（格每秒）。 Declaration public float BonusSPD { get; } Property Value Type Description System.Single BonusSPD_P 单位的速度加成百分比（%）。 Declaration public int BonusSPD_P { get; } Property Value Type Description System.Int32 Config 单位的基础配置。 Declaration public UnitsConfigItem Config { get; } Property Value Type Description UnitsConfigItem Controller 单位的控制器。 Declaration public UnitController Controller { get; set; } Property Value Type Description UnitController DashRange 单位的冲刺幅度（%）。 Declaration public int DashRange { get; } Property Value Type Description System.Int32 DEF 单位的物理防御力。 Declaration public int DEF { get; } Property Value Type Description System.Int32 EDF 单位的能量防御力。 Declaration public int EDF { get; } Property Value Type Description System.Int32 EnergyShield 单位的能量护盾总量。 Declaration public int EnergyShield { get; } Property Value Type Description System.Int32 ERS 单位的能量抗性（%）。 Declaration public float ERS { get; } Property Value Type Description System.Single EventScript 事件脚本。 Declaration public UnitEvent EventScript { get; } Property Value Type Description UnitEvent HP 单位的生命值。 Declaration public int HP { get; set; } Property Value Type Description System.Int32 InventoryUnitList 背包中的单位列表。 Declaration public ReadOnlyCollection<Unit> InventoryUnitList { get; } Property Value Type Description ReadOnlyCollection < Unit > IsAttackDisabled 攻击是否被禁用。 Declaration public bool IsAttackDisabled { get; } Property Value Type Description System.Boolean IsMoveDisabled 移动是否被禁用。 Declaration public bool IsMoveDisabled { get; } Property Value Type Description System.Boolean IsPlayer 是否为玩家。 Declaration public bool IsPlayer { get; } Property Value Type Description System.Boolean MaxHP 单位的生命值上限。 Declaration public int MaxHP { get; } Property Value Type Description System.Int32 MaxTOU 单位的韧性值上限。 Declaration public int MaxTOU { get; } Property Value Type Description System.Int32 Owner 单位的所有者。 Declaration public Unit Owner { get; set; } Property Value Type Description Unit PhysicalShield 单位的物理护盾总量。 Declaration public int PhysicalShield { get; } Property Value Type Description System.Int32 RES 单位的物理抗性（%）。 Declaration public float RES { get; } Property Value Type Description System.Single SkillList 单位的技能列表。 Declaration public virtual ReadOnlyCollection<Skill> SkillList { get; } Property Value Type Description ReadOnlyCollection < Skill > 技能列表 SPD 单位的速度（格每秒）。 Declaration public float SPD { get; } Property Value Type Description System.Single StateList 单位的状态列表。 Declaration public ReadOnlyCollection<State> StateList { get; } Property Value Type Description ReadOnlyCollection < State > 状态列表 TOU 单位的韧性值。 Declaration public int TOU { get; set; } Property Value Type Description System.Int32 UniversalShield 单位的全能护盾总量。 Declaration public int UniversalShield { get; } Property Value Type Description System.Int32 Methods AddListener() Declaration public void AddListener() AddState(State) 添加状态。 Declaration public bool AddState(State state) Parameters Type Name Description State state 状态 Returns Type Description System.Boolean 操作是否成功 AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Damage(Unit, DamageInfo, Func<Int32>) 受到伤害。 Declaration public void Damage(Unit attacker, DamageInfo damageInfo, Func<int> damageCalculator) Parameters Type Name Description Unit attacker 攻击者 DamageInfo damageInfo 伤害信息 System.Func < System.Int32 > damageCalculator 伤害计算器 Damage(Unit, DamageInfo, Single) 受到伤害。 Declaration public void Damage(Unit attacker, DamageInfo damageInfo, float power = 1F) Parameters Type Name Description Unit attacker 攻击者 DamageInfo damageInfo 伤害信息 System.Single power 伤害倍率 Destroy() Declaration public void Destroy() ForgetSkill(Skill) 遗忘技能。 Declaration public virtual bool ForgetSkill(Skill skill) Parameters Type Name Description Skill skill 技能 Returns Type Description System.Boolean 操作是否成功 GainUnit(Unit) 将单位添加到背包。 Declaration public bool GainUnit(Unit unit) Parameters Type Name Description Unit unit 单位 Returns Type Description System.Boolean 操作是否成功 HasOwner() 是否拥有所有者。 Declaration public bool HasOwner() Returns Type Description System.Boolean 是否拥有所有者 Init() Declaration public virtual void Init() LearnSkill(Skill) 习得技能。 Declaration public bool LearnSkill(Skill skill) Parameters Type Name Description Skill skill 技能 Returns Type Description System.Boolean 操作是否成功 LostUnit(Unit) 将单位移除背包。 Declaration public virtual bool LostUnit(Unit unit) Parameters Type Name Description Unit unit 单位 Returns Type Description System.Boolean 操作是否成功 RemoveState(State) 移除状态。 Declaration public bool RemoveState(State state) Parameters Type Name Description State state 状态 Returns Type Description System.Boolean 操作是否成功"
  },
  "api/Global.UnitCompoundType.html": {
    "href": "api/Global.UnitCompoundType.html",
    "title": "Enum UnitCompoundType | 塔防游戏API文档",
    "keywords": "Enum UnitCompoundType 单位复合类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax [Flags] public enum UnitCompoundType Fields Name Description Artifact 法器 Consumable 消耗品 Sword 剑"
  },
  "api/Global.UnitController.html": {
    "href": "api/Global.UnitController.html",
    "title": "Class UnitController | 塔防游戏API文档",
    "keywords": "Class UnitController 控制单位行为的类。 Inheritance System.Object UnitController PlayerController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitController : MonoBehaviour Fields animator Declaration public Animator animator Field Value Type Description Animator autoSorting Declaration public AutoSorting2D autoSorting Field Value Type Description AutoSorting2D chargeBar Declaration public Image chargeBar Field Value Type Description Image destroySpriteRenderer Declaration public SpriteRenderer destroySpriteRenderer Field Value Type Description SpriteRenderer healthBar Declaration public Image healthBar Field Value Type Description Image rb Declaration public Rigidbody2D rb Field Value Type Description Rigidbody2D skillBindLocalPosition Declaration protected Vector3 skillBindLocalPosition Field Value Type Description Vector3 skillControllerList Declaration public List<SkillController> skillControllerList Field Value Type Description List < SkillController > spriteRenderer Declaration public SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer statePanel Declaration public Image statePanel Field Value Type Description Image Properties Config Declaration public UnitsConfigItem Config { get; } Property Value Type Description UnitsConfigItem Data Declaration public Unit Data { get; set; } Property Value Type Description Unit Methods Awake() Declaration protected virtual void Awake() FixedUpdate() Declaration protected virtual void FixedUpdate() GetSkillController(ComboInfo, Boolean, String) 获得技能控制器。 若技能支持多动画则每次调用该方法获得的是不同的对象。 虽然部分参数对该方法没有用处，但可能会被部分技能作为判断条件，请不要忽略。 Declaration public SkillController GetSkillController(ComboInfo comboInfo, bool isChargeAttack = false, string comboID = null) Parameters Type Name Description ComboInfo comboInfo 连段信息 System.Boolean isChargeAttack 是否为蓄力攻击 System.String comboID 连段ID，若不填写则自动分配一个新ID Returns Type Description SkillController 技能控制器 GetSkillController(ComboUseInfo) 获得技能控制器。 若技能支持多动画则每次调用该方法获得的是不同的对象。 Declaration public SkillController GetSkillController(ComboUseInfo comboUseInfo) Parameters Type Name Description ComboUseInfo comboUseInfo 连段使用信息 Returns Type Description SkillController 技能控制器 GetSkillController(Skill, Int32, Boolean, String) 获得技能控制器。 若技能支持多动画则每次调用该方法获得的是不同的对象。 虽然部分参数对该方法没有用处，但可能会被部分技能作为判断条件，请不要忽略。 Declaration public SkillController GetSkillController(Skill skill, int comboIndex = 0, bool isChargeAttack = false, string comboID = null) Parameters Type Name Description Skill skill 技能 System.Int32 comboIndex 连段序号 System.Boolean isChargeAttack 是否为蓄力攻击 System.String comboID 连段ID，若不填写则自动分配一个新ID Returns Type Description SkillController 技能控制器 Kill() Declaration public void Kill() Knockback(Vector2) 击退单位。 Declaration public void Knockback(Vector2 knockbackForce) Parameters Type Name Description Vector2 knockbackForce 击退力 OnDataChanged(Unit) Declaration protected virtual void OnDataChanged(Unit userData) Parameters Type Name Description Unit userData OnDestroy() Declaration protected virtual void OnDestroy() Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update() UseSkill(ComboInfo, Boolean, String) 使用技能。 Declaration public SkillController UseSkill(ComboInfo comboInfo, bool isChargeAttack = false, string comboID = null) Parameters Type Name Description ComboInfo comboInfo 连段信息 System.Boolean isChargeAttack 是否为蓄力攻击 System.String comboID 连段ID，若不填写则自动分配一个新ID Returns Type Description SkillController 技能控制器 UseSkill(ComboUseInfo) 使用技能。 Declaration public SkillController UseSkill(ComboUseInfo comboUseInfo) Parameters Type Name Description ComboUseInfo comboUseInfo 连段使用信息 Returns Type Description SkillController 技能控制器 UseSkill(Skill, Int32, Boolean, String) 使用技能。 Declaration public SkillController UseSkill(Skill skill, int comboIndex = 0, bool isChargeAttack = false, string comboID = null) Parameters Type Name Description Skill skill 技能 System.Int32 comboIndex 连段序号 System.Boolean isChargeAttack 是否为蓄力攻击 System.String comboID 连段ID，若不填写则自动分配一个新ID Returns Type Description SkillController 技能控制器"
  },
  "api/Global.UnitCreater.html": {
    "href": "api/Global.UnitCreater.html",
    "title": "Class UnitCreater | 塔防游戏API文档",
    "keywords": "Class UnitCreater 单位生成器 Inheritance System.Object UnitCreater Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitCreater : MonoBehaviour Fields duration Declaration public float duration Field Value Type Description System.Single unitConfig Declaration public ConfigItemReference<UnitsConfigItem> unitConfig Field Value Type Description ConfigItemReference < UnitsConfigItem > warningSprite Declaration public SpriteRenderer warningSprite Field Value Type Description SpriteRenderer"
  },
  "api/Global.UnitEvent.html": {
    "href": "api/Global.UnitEvent.html",
    "title": "Class UnitEvent | 塔防游戏API文档",
    "keywords": "Class UnitEvent Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent000 UnitEvent002 UnitEvent007 UnitEvent010 UnitEvent015 UnitEvent017 UnitEvent019 UnitEvent021 UnitEvent022 Inherited Members BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent : BaseEvent<Unit> Methods Dash(UnitController) 单位控制器的冲刺行为。 Declaration public virtual IEnumerator Dash(UnitController unitController) Parameters Type Name Description UnitController unitController 单位控制器 Returns Type Description IEnumerator DoBehaviour(UnitController) 单位控制器的行为。 Declaration public virtual IEnumerator DoBehaviour(UnitController unitController) Parameters Type Name Description UnitController unitController 单位控制器 Returns Type Description IEnumerator OnAnyViewClose(BaseView) Declaration protected override void OnAnyViewClose(BaseView view) Parameters Type Name Description BaseView view Overrides BaseEvent<Unit>.OnAnyViewClose(BaseView)"
  },
  "api/Global.UnitEvent000.html": {
    "href": "api/Global.UnitEvent000.html",
    "title": "Class UnitEvent000 | 塔防游戏API文档",
    "keywords": "Class UnitEvent000 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent000 Implements IDeathHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent000 : UnitEvent, IDeathHandler Methods OnDeath(Unit, Unit, DamageInfo) Declaration public void OnDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IDeathHandler"
  },
  "api/Global.UnitEvent002.html": {
    "href": "api/Global.UnitEvent002.html",
    "title": "Class UnitEvent002 | 塔防游戏API文档",
    "keywords": "Class UnitEvent002 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent002 Implements ISkillTriggerUnitHandler ISkillCustomTriggerHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent002 : UnitEvent, ISkillTriggerUnitHandler, ISkillCustomTriggerHandler Fields autoUseSkill1 Declaration public ConfigItemReference<SkillsConfigItem> autoUseSkill1 Field Value Type Description ConfigItemReference < SkillsConfigItem > autoUseSkill2 Declaration public ConfigItemReference<SkillsConfigItem> autoUseSkill2 Field Value Type Description ConfigItemReference < SkillsConfigItem > triggerEffect Declaration public Transform triggerEffect Field Value Type Description Transform Methods OnSkillCustomTrigger(SkillController, String) Declaration public void OnSkillCustomTrigger(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Implements ISkillTriggerUnitHandler ISkillCustomTriggerHandler"
  },
  "api/Global.UnitEvent007.html": {
    "href": "api/Global.UnitEvent007.html",
    "title": "Class UnitEvent007 | 塔防游戏API文档",
    "keywords": "Class UnitEvent007 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent007 Implements ISkillTriggerUnitHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent007 : UnitEvent, ISkillTriggerUnitHandler Fields triggerEffect Declaration public Transform triggerEffect Field Value Type Description Transform Methods OnSkillTriggerUnit(SkillController, Unit) Declaration public void OnSkillTriggerUnit(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Implements ISkillTriggerUnitHandler"
  },
  "api/Global.UnitEvent010.html": {
    "href": "api/Global.UnitEvent010.html",
    "title": "Class UnitEvent010 | 塔防游戏API文档",
    "keywords": "Class UnitEvent010 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent010 Implements IBeforeDeathHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent010 : UnitEvent, IBeforeDeathHandler Methods BeforeDeath(Unit, Unit, DamageInfo) Declaration public void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IBeforeDeathHandler"
  },
  "api/Global.UnitEvent015.html": {
    "href": "api/Global.UnitEvent015.html",
    "title": "Class UnitEvent015 | 塔防游戏API文档",
    "keywords": "Class UnitEvent015 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent015 Implements IAfterDamageCalculatorHandler IUnitCreateHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent015 : UnitEvent, IAfterDamageCalculatorHandler, IUnitCreateHandler Fields autoCreateUnit Declaration public ConfigItemReference<UnitsConfigItem> autoCreateUnit Field Value Type Description ConfigItemReference < UnitsConfigItem > effect1Prefabs Declaration public List<SpriteRenderer> effect1Prefabs Field Value Type Description List < SpriteRenderer > effect2Prefabs Declaration public List<SpriteRenderer> effect2Prefabs Field Value Type Description List < SpriteRenderer > sprites Declaration public List<Sprite> sprites Field Value Type Description List < Sprite > Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo OnUnitCreate(UnitController) Declaration public void OnUnitCreate(UnitController unitController) Parameters Type Name Description UnitController unitController Implements IAfterDamageCalculatorHandler IUnitCreateHandler"
  },
  "api/Global.UnitEvent017.html": {
    "href": "api/Global.UnitEvent017.html",
    "title": "Class UnitEvent017 | 塔防游戏API文档",
    "keywords": "Class UnitEvent017 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent017 Implements IAfterDamageCalculatorHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent017 : UnitEvent, IAfterDamageCalculatorHandler Fields autoCreateUnit Declaration public ConfigItemReference<UnitsConfigItem> autoCreateUnit Field Value Type Description ConfigItemReference < UnitsConfigItem > newSprite Declaration public Sprite newSprite Field Value Type Description Sprite Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IAfterDamageCalculatorHandler"
  },
  "api/Global.UnitEvent019.html": {
    "href": "api/Global.UnitEvent019.html",
    "title": "Class UnitEvent019 | 塔防游戏API文档",
    "keywords": "Class UnitEvent019 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent019 Implements IInventoryUnitClickHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent019 : UnitEvent, IInventoryUnitClickHandler Methods OnInventoryUnitClick(Unit, PointerEventData) Declaration public void OnInventoryUnitClick(Unit unit, PointerEventData eventData) Parameters Type Name Description Unit unit PointerEventData eventData Implements IInventoryUnitClickHandler"
  },
  "api/Global.UnitEvent021.html": {
    "href": "api/Global.UnitEvent021.html",
    "title": "Class UnitEvent021 | 塔防游戏API文档",
    "keywords": "Class UnitEvent021 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent021 Implements IAfterDamageCalculatorHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent021 : UnitEvent, IAfterDamageCalculatorHandler Fields newSprite Declaration public Sprite newSprite Field Value Type Description Sprite Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IAfterDamageCalculatorHandler"
  },
  "api/Global.UnitEvent022.html": {
    "href": "api/Global.UnitEvent022.html",
    "title": "Class UnitEvent022 | 塔防游戏API文档",
    "keywords": "Class UnitEvent022 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent022 Implements IAfterDamageCalculatorHandler Inherited Members UnitEvent.DoBehaviour(UnitController) UnitEvent.Dash(UnitController) UnitEvent.OnAnyViewClose(BaseView) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer, Single) BaseEvent<Unit>.SetInScreen(Transform, Single, Single) BaseEvent<Unit>.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent022 : UnitEvent, IAfterDamageCalculatorHandler Fields newSprite Declaration public Sprite newSprite Field Value Type Description Sprite Methods AfterDamageCalculator(Unit, Unit, DamageInfo) Declaration public void AfterDamageCalculator(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Implements IAfterDamageCalculatorHandler"
  },
  "api/Global.UnitInfoShower.html": {
    "href": "api/Global.UnitInfoShower.html",
    "title": "Class UnitInfoShower | 塔防游戏API文档",
    "keywords": "Class UnitInfoShower 处理单位信息显示的类。 Inheritance System.Object UnitInfoShower InventoryItem PlayerInfoShower Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitInfoShower : MonoBehaviour Fields buildedText Declaration public TextMeshProUGUI buildedText Field Value Type Description TextMeshProUGUI customText Declaration public TextMeshProUGUI customText Field Value Type Description TextMeshProUGUI descText Declaration public TextMeshProUGUI descText Field Value Type Description TextMeshProUGUI enablePopWindow Declaration public bool enablePopWindow Field Value Type Description System.Boolean iconImage Declaration public Image iconImage Field Value Type Description Image iconText Declaration public TextMeshProUGUI iconText Field Value Type Description TextMeshProUGUI inventoryUnitContent Declaration public GridLayoutGroup inventoryUnitContent Field Value Type Description GridLayoutGroup inventoryUnitPrefab Declaration public UnitInfoShower inventoryUnitPrefab Field Value Type Description UnitInfoShower inventoryUnitShowType Declaration public UnitType inventoryUnitShowType Field Value Type Description UnitType levelImage Declaration public Image levelImage Field Value Type Description Image levelSprites Declaration public List<Sprite> levelSprites Field Value Type Description List < Sprite > nameText Declaration public TextMeshProUGUI nameText Field Value Type Description TextMeshProUGUI portraitImage Declaration public Image portraitImage Field Value Type Description Image rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform skillComboContent Declaration public GridLayoutGroup skillComboContent Field Value Type Description GridLayoutGroup skillComboPrefab Declaration public SkillComboInfoShower skillComboPrefab Field Value Type Description SkillComboInfoShower stateContent Declaration public GridLayoutGroup stateContent Field Value Type Description GridLayoutGroup statePrefab Declaration public StateInfoShower statePrefab Field Value Type Description StateInfoShower Properties TargetConfig Declaration public UnitsConfigItem TargetConfig { get; set; } Property Value Type Description UnitsConfigItem TargetUnit Declaration public Unit TargetUnit { get; set; } Property Value Type Description Unit Methods Awake() Declaration protected virtual void Awake() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnPointerClick(PointerEventData) Declaration public virtual void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public virtual void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public virtual void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public virtual void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public virtual void Refresh() Events OnInventoryUnitSelect Declaration public event UnityAction<Unit, PointerEventData> OnInventoryUnitSelect Event Type Type Description UnityAction < Unit , PointerEventData > OnPointerClickEvent Declaration public event UnityAction<PointerEventData> OnPointerClickEvent Event Type Type Description UnityAction < PointerEventData > OnSkillComboSelect Declaration public event UnityAction<ComboInfo, PointerEventData> OnSkillComboSelect Event Type Type Description UnityAction < ComboInfo , PointerEventData > OnStateSelect Declaration public event UnityAction<State, PointerEventData> OnStateSelect Event Type Type Description UnityAction < State , PointerEventData > Implements IPointerEnterHandler IPointerExitHandler IPointerClickHandler IPointerDownHandler"
  },
  "api/Global.UnitInfoView.html": {
    "href": "api/Global.UnitInfoView.html",
    "title": "Class UnitInfoView | 塔防游戏API文档",
    "keywords": "Class UnitInfoView 处理单位信息的视图。 Inheritance System.Object BaseView UnitInfoView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.OpenedViews BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitInfoView : BaseView Fields atkText Declaration public TextMeshProUGUI atkText Field Value Type Description TextMeshProUGUI dashRangeText Declaration public TextMeshProUGUI dashRangeText Field Value Type Description TextMeshProUGUI defText Declaration public TextMeshProUGUI defText Field Value Type Description TextMeshProUGUI edfText Declaration public TextMeshProUGUI edfText Field Value Type Description TextMeshProUGUI energyShieldText Declaration public TextMeshProUGUI energyShieldText Field Value Type Description TextMeshProUGUI ersText Declaration public TextMeshProUGUI ersText Field Value Type Description TextMeshProUGUI hpText Declaration public TextMeshProUGUI hpText Field Value Type Description TextMeshProUGUI physicalShieldText Declaration public TextMeshProUGUI physicalShieldText Field Value Type Description TextMeshProUGUI resText Declaration public TextMeshProUGUI resText Field Value Type Description TextMeshProUGUI spdText Declaration public TextMeshProUGUI spdText Field Value Type Description TextMeshProUGUI touText Declaration public TextMeshProUGUI touText Field Value Type Description TextMeshProUGUI universalShieldText Declaration public TextMeshProUGUI universalShieldText Field Value Type Description TextMeshProUGUI Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.UnitsConfig.html": {
    "href": "api/Global.UnitsConfig.html",
    "title": "Class UnitsConfig | 塔防游戏API文档",
    "keywords": "Class UnitsConfig 单位配置列表。 Inheritance System.Object BaseConfigTable < UnitsConfigItem > UnitsConfig Inherited Members BaseConfigTable<UnitsConfigItem>.tabName BaseConfigTable<UnitsConfigItem>.frameVersion BaseConfigTable<UnitsConfigItem>.version BaseConfigTable<UnitsConfigItem>.enableConsole BaseConfigTable<UnitsConfigItem>.configList BaseConfigTable<UnitsConfigItem>.ConfigTableVersion BaseConfigTable<UnitsConfigItem>.Item[Int32] BaseConfigTable<UnitsConfigItem>.Item[String] BaseConfigTable<UnitsConfigItem>.GetConfigByName(String) BaseConfigTable<UnitsConfigItem>.GetConfigIndex(UnitsConfigItem) BaseConfigTable<UnitsConfigItem>.ConfigCount BaseConfigTable<UnitsConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitsConfig : BaseConfigTable<UnitsConfigItem>"
  },
  "api/Global.UnitsConfigItem.html": {
    "href": "api/Global.UnitsConfigItem.html",
    "title": "Class UnitsConfigItem | 塔防游戏API文档",
    "keywords": "Class UnitsConfigItem 单位配置数据。 Inheritance System.Object BaseConfigItem UnitsConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.id BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnitsConfigItem : BaseConfigItem Fields attackDuration 攻击间隔（秒） Declaration public float attackDuration Field Value Type Description System.Single attackRadius 攻击半径（格） Declaration public float attackRadius Field Value Type Description System.Single attackType 攻击类型 Declaration public AttackType attackType Field Value Type Description AttackType autoPick 是否自动拾取 Declaration public bool autoPick Field Value Type Description System.Boolean damageType 伤害类型 Declaration public DamageType damageType Field Value Type Description DamageType defaultATK 默认伤害值 Declaration public int defaultATK Field Value Type Description System.Int32 defaultDashRange 冲刺幅度（%） Declaration public int defaultDashRange Field Value Type Description System.Int32 defaultMaxHP 默认最大生命值 Declaration public int defaultMaxHP Field Value Type Description System.Int32 defaultMaxTOU 默认最大韧性值 Declaration public int defaultMaxTOU Field Value Type Description System.Int32 defaultSkillList 默认技能列表 Declaration public List<ConfigItemReference<SkillsConfigItem>> defaultSkillList Field Value Type Description List < ConfigItemReference < SkillsConfigItem >> defaultSPD 默认速度（格每秒） Declaration public float defaultSPD Field Value Type Description System.Single eventScript 事件脚本 Declaration public UnitEvent eventScript Field Value Type Description UnitEvent faction 阵营类型 Declaration public FactionType faction Field Value Type Description FactionType hideInMenu 是否在菜单中隐藏 Declaration public bool hideInMenu Field Value Type Description System.Boolean icon 图标 Declaration public Sprite icon Field Value Type Description Sprite isAllyTargetable 是否可被己方作为目标 Declaration public bool isAllyTargetable Field Value Type Description System.Boolean isBuildable 是否可部署 Declaration public bool isBuildable Field Value Type Description System.Boolean isKillCounted 是否计入击杀数 Declaration public bool isKillCounted Field Value Type Description System.Boolean isKillMarked 击杀标记 达成目标击杀数后需要将场上带有该标记的单位全部击杀才能结束关卡 Declaration public bool isKillMarked Field Value Type Description System.Boolean isNonAllyTargetable 是否可被非己方作为目标 Declaration public bool isNonAllyTargetable Field Value Type Description System.Boolean knockbackForce 击退力（负数代表吸引） Declaration public float knockbackForce Field Value Type Description System.Single level 单位等级 Declaration public int level Field Value Type Description System.Int32 moveType 单位移动类型 Declaration public MoveType moveType Field Value Type Description MoveType nextLevelUnitList 下一等级单位列表 Declaration public List<ConfigItemReference<UnitsConfigItem>> nextLevelUnitList Field Value Type Description List < ConfigItemReference < UnitsConfigItem >> portrait 立绘 Declaration public Sprite portrait Field Value Type Description Sprite race 种族类型 Declaration public RaceType race Field Value Type Description RaceType skillSourcePrefab 技能释放主体预制体 Declaration public SpriteRenderer skillSourcePrefab Field Value Type Description SpriteRenderer type 单位类型 Declaration public UnitType type Field Value Type Description UnitType Methods CreateController(Transform) 创建控制器。 Declaration public UnitController CreateController(Transform parent = null) Parameters Type Name Description Transform parent 父对象 Returns Type Description UnitController 控制器 CreateController(Unit, Transform) 创建控制器。 Declaration public UnitController CreateController(Unit unit, Transform parent = null) Parameters Type Name Description Unit unit 单位 Transform parent 父对象 Returns Type Description UnitController 控制器"
  },
  "api/Global.UnitType.html": {
    "href": "api/Global.UnitType.html",
    "title": "Enum UnitType | 塔防游戏API文档",
    "keywords": "Enum UnitType 单位类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax [Flags] public enum UnitType Fields Name Description Artifact 法器 Elixir 丹药 FlyingSword 飞剑 LegendarySword 名剑 MartialArt 功法 Material 材料 Talisman 符箓"
  },
  "api/Global.UserDataManager.html": {
    "href": "api/Global.UserDataManager.html",
    "title": "Class UserDataManager | 塔防游戏API文档",
    "keywords": "Class UserDataManager 用户数据管理器 Inheritance System.Object UserDataManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UserDataManager Methods AutoSaveUserData() 保存自动存档。 Declaration public static bool AutoSaveUserData() Returns Type Description System.Boolean DeleteUserData(UserDataManager.UserDataInfo) 删除存档。 Declaration public static void DeleteUserData(UserDataManager.UserDataInfo userDataInfo) Parameters Type Name Description UserDataManager.UserDataInfo userDataInfo 存档信息 GetSystemData() Declaration public static SystemData GetSystemData() Returns Type Description SystemData GetUserData<T>() 获得用户数据。 Declaration public static T GetUserData<T>() where T : BaseUserData, new() Returns Type Description T 用户数据 Type Parameters Name Description T 用户数据类型 LoadSystemSettings() 加载系统设置。 Declaration public static void LoadSystemSettings() LoadUserData(UserDataManager.UserDataInfo) 读取存档。 Declaration public static bool LoadUserData(UserDataManager.UserDataInfo userDataInfo) Parameters Type Name Description UserDataManager.UserDataInfo userDataInfo 存档信息 Returns Type Description System.Boolean LoadUserDataInfoList(Boolean) 读取存档信息列表。 Declaration public static List<UserDataManager.UserDataInfo> LoadUserDataInfoList(bool isAutoSave) Parameters Type Name Description System.Boolean isAutoSave Returns Type Description List < UserDataManager.UserDataInfo > 存档信息列表 SaveSystemData() 保存系统数据。 Declaration public static bool SaveSystemData() Returns Type Description System.Boolean SaveUserData(Int32, String) 保存存档。 Declaration public static bool SaveUserData(int slot, string dataName) Parameters Type Name Description System.Int32 slot 存档位 System.String dataName 存档名 Returns Type Description System.Boolean"
  },
  "api/Global.UserDataManager.UserDataInfo.html": {
    "href": "api/Global.UserDataManager.UserDataInfo.html",
    "title": "Struct UserDataManager.UserDataInfo | 塔防游戏API文档",
    "keywords": "Struct UserDataManager.UserDataInfo 存档信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct UserDataInfo Fields isAutoSave 是否为自动存档 Declaration public bool isAutoSave Field Value Type Description System.Boolean name 存档名 Declaration public string name Field Value Type Description System.String slot 存档位 Declaration public int slot Field Value Type Description System.Int32"
  },
  "api/Global.Utils.html": {
    "href": "api/Global.Utils.html",
    "title": "Class Utils | 塔防游戏API文档",
    "keywords": "Class Utils 工具类。 Inheritance System.Object Utils Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Utils Methods CompareVersions(String, String) 比较版本号大小。 Declaration public static int CompareVersions(string version1, string version2) Parameters Type Name Description System.String version1 版本号1 System.String version2 版本号2 Returns Type Description System.Int32 比较结果 ToLocalized(String, String[]) 获得本地化文本。 Declaration public static string ToLocalized(this string key, params string[] replace) Parameters Type Name Description System.String key 文本key值 System.String [] replace 替换字符串，按顺序会依次替换文本中的{0}、{1}…… Returns Type Description System.String 目标文本"
  },
  "api/Global.WinLevelArea.html": {
    "href": "api/Global.WinLevelArea.html",
    "title": "Class WinLevelArea | 塔防游戏API文档",
    "keywords": "Class WinLevelArea 关卡胜利触发器。 Inheritance System.Object WinLevelArea Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WinLevelArea : MonoBehaviour Fields mark Declaration public Transform mark Field Value Type Description Transform"
  },
  "index.html": {
    "href": "index.html",
    "title": "这是个标题页。 | 塔防游戏API文档",
    "keywords": "这是个标题页。 随便写点东西凑数。"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | 塔防游戏API文档",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | 塔防游戏API文档",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}