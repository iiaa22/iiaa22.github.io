{
  "api/Global.AnimationUtils.html": {
    "href": "api/Global.AnimationUtils.html",
    "title": "Class AnimationUtils | 塔防游戏API文档",
    "keywords": "Class AnimationUtils 动画的工具类。 Inheritance System.Object AnimationUtils Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AnimationUtils : MonoBehaviour"
  },
  "api/Global.AttackType.html": {
    "href": "api/Global.AttackType.html",
    "title": "Enum AttackType | 塔防游戏API文档",
    "keywords": "Enum AttackType 攻击类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum AttackType Fields Name Description NonSourceFired 无源头发射 SourceFired 有源头发射 Surround 环绕 Swing 挥舞"
  },
  "api/Global.AutoSorting2D.html": {
    "href": "api/Global.AutoSorting2D.html",
    "title": "Class AutoSorting2D | 塔防游戏API文档",
    "keywords": "Class AutoSorting2D 根据y轴自动处理遮挡关系。 Inheritance System.Object AutoSorting2D Namespace : Global Assembly : cs.temp.dll.dll Syntax public class AutoSorting2D : MonoBehaviour Fields sortingRenderer Declaration public List<Renderer> sortingRenderer Field Value Type Description System.Collections.Generic.List < Renderer >"
  },
  "api/Global.BaseConfigItem.html": {
    "href": "api/Global.BaseConfigItem.html",
    "title": "Class BaseConfigItem | 塔防游戏API文档",
    "keywords": "Class BaseConfigItem 所有配置项的父类。 Inheritance System.Object BaseConfigItem LanguageConfigItem PlatformCommonConfigItem SkillsConfigItem StatesConfigItem UnitsConfigItem Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class BaseConfigItem Fields description 描述 Declaration public string description Field Value Type Description System.String name 名称 Declaration public string name Field Value Type Description System.String remark 备注 Declaration public string remark Field Value Type Description System.String"
  },
  "api/Global.BaseConfigTable-1.html": {
    "href": "api/Global.BaseConfigTable-1.html",
    "title": "Class BaseConfigTable<T> | 塔防游戏API文档",
    "keywords": "Class BaseConfigTable<T> 所有配置表的父类。 Inheritance System.Object BaseConfigTable<T> LanguageConfig PlatformCommonConfig SkillsConfig StatesConfig UnitsConfig Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseConfigTable<T> : ScriptableObject where T : BaseConfigItem, new() Type Parameters Name Description T 配置项类型 Fields configList 配置项列表 Declaration public List<T> configList Field Value Type Description System.Collections.Generic.List <T> enableConsole 是否启用控制台输出 Declaration public bool enableConsole Field Value Type Description System.Boolean tabName 标签页名称 Declaration public string tabName Field Value Type Description System.String version 配置表版本 Declaration public int version Field Value Type Description System.Int32 Properties ConfigCount 获得配置表长度。 Declaration public int ConfigCount { get; } Property Value Type Description System.Int32 ConfigNameList 配置项名称列表。 设置后将锁定配置表长度。 Declaration public virtual List<string> ConfigNameList { get; } Property Value Type Description System.Collections.Generic.List < System.String > Item[Int32] 根据ID获得配置项。 Declaration public T this[int id] { get; } Parameters Type Name Description System.Int32 id 配置项ID Property Value Type Description T 配置项 Item[String] 根据名称获得配置项。 Declaration public T this[string name] { get; } Parameters Type Name Description System.String name 配置项名称 Property Value Type Description T 配置项 Methods GetConfigID(T) 获得配置项ID。 Declaration public int GetConfigID(T config) Parameters Type Name Description T config 配置项 Returns Type Description System.Int32 配置项ID"
  },
  "api/Global.BaseEvent-1.html": {
    "href": "api/Global.BaseEvent-1.html",
    "title": "Class BaseEvent<T> | 塔防游戏API文档",
    "keywords": "Class BaseEvent<T> 单位的事件触发类。 注意事件被触发并不意味着本单位参与了该事件，一般要先判断本单位是参与者再执行逻辑。 Inheritance System.Object BaseEvent<T> SkillEvent000 SkillEvent001 SkillEvent002 SkillEvent003 SkillEvent004 SkillEvent005 SkillEvent006 SkillEvent007 StateEvent002 UnitEvent Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseEvent<T> : ScriptableObject Type Parameters Name Description T Properties Owner 事件的所有者。 Declaration public T Owner { get; set; } Property Value Type Description T Methods AfterUnitDash(UnitController) 单位冲刺结束事件。 Declaration public abstract void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController 冲刺的单位控制器 BeforeAttack(Unit, Unit, DamageInfo) 受到攻击前事件。 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 Declaration public abstract void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息 BeforeDamage(Unit, Unit, DamageInfo) 受到伤害前事件。 受到攻击不一定触发该事件，伤害可能被护盾等抵挡。 Declaration public abstract void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息 BeforeDeath(Unit, Unit, DamageInfo) 死亡前事件。 可以在此通过增加target的HP实现复活效果。 Declaration public abstract void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 Unit target 受击者 DamageInfo damageInfo 伤害信息 CreateAfterimage(SpriteRenderer) 创建残影效果。 Declaration protected void CreateAfterimage(SpriteRenderer spriteRenderer) Parameters Type Name Description SpriteRenderer spriteRenderer 残影形象 OnDeath(Unit) 死亡事件。 Declaration public abstract void OnDeath(Unit unit) Parameters Type Name Description Unit unit 死亡的单位 OnSkillCustomTriggered(SkillController, String) 技能自定义触发事件。 可以在动画中主动触发该事件。 Declaration public abstract void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController 使用的技能控制器 System.String arg 自定义参数 OnSkillForget(Skill) 技能遗忘事件。 Declaration public abstract void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill 遗忘的技能 OnSkillLearn(Skill) 技能习得事件。 Declaration public abstract void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill 习得的技能 OnSkillTriggered(SkillController, Unit) 技能触发事件 Declaration public abstract void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController 使用的技能控制器 Unit target 触发的单位 OnSkillUse(SkillController) 技能使用事件。 Declaration public abstract void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController 使用的技能控制器 OnStateGain(State) 状态获得事件。 Declaration public abstract void OnStateGain(State state) Parameters Type Name Description State state 获得的状态 OnStateLost(State) 状态失去事件。 Declaration public abstract void OnStateLost(State state) Parameters Type Name Description State state 失去的状态 OnStateUpdate(State) 状态持续事件，此事件会在状态维持期间每帧调用一次。 Declaration public abstract void OnStateUpdate(State state) Parameters Type Name Description State state 持续的状态 OnUnitDash(UnitController) 单位冲刺事件。 Declaration public abstract void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController 冲刺的单位控制器 OnUnitInit(Unit) 单位初始化事件。 Declaration public abstract void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit 初始化的单位"
  },
  "api/Global.BaseSingleton-1.html": {
    "href": "api/Global.BaseSingleton-1.html",
    "title": "Class BaseSingleton<T> | 塔防游戏API文档",
    "keywords": "Class BaseSingleton<T> 单例模式父类。 Inheritance System.Object BaseSingleton<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseSingleton<T> where T : new() Type Parameters Name Description T Properties Instance 获得单例对象。 Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/Global.BaseUserData.html": {
    "href": "api/Global.BaseUserData.html",
    "title": "Class BaseUserData | 塔防游戏API文档",
    "keywords": "Class BaseUserData 处理用户数据的类。 本类为抽象类，具体数据由子类管理。 Inheritance System.Object BaseUserData ObservableUserData<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseUserData Methods AfterLoad() 读取后触发的事件。 Declaration public abstract void AfterLoad() BeforeSave() 保存前触发的事件。 Declaration public abstract void BeforeSave()"
  },
  "api/Global.BaseView.html": {
    "href": "api/Global.BaseView.html",
    "title": "Class BaseView | 塔防游戏API文档",
    "keywords": "Class BaseView 所有视图的父类。 Inheritance System.Object BaseView GameOverView GameView GlobalView InventoryView LevelUpView LoadingView PlayView PopWindowView SelectUnitView SettingsView SkillComboView TitleView UnitInfoView Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseView : MonoBehaviour Fields allButtons 视图内的所有按钮 Declaration public List<Button> allButtons Field Value Type Description System.Collections.Generic.List < Button > layer 视图层级 除第0层外，相同层级的视图最多同时打开一个。 Declaration public int layer Field Value Type Description System.Int32 onClose 视图关闭事件 Declaration public UnityEvent onClose Field Value Type Description UnityEvent onOpen 视图打开事件 Declaration public UnityEvent onOpen Field Value Type Description UnityEvent onRefresh 视图刷新事件 Declaration public UnityEvent onRefresh Field Value Type Description UnityEvent Properties FloatingViews 所有已打开的浮动视图。 Declaration public static ReadOnlyCollection<BaseView> FloatingViews { get; } Property Value Type Description ReadOnlyCollection < BaseView > IsAnyViewOpen 是否存在打开的视图。 Declaration public static bool IsAnyViewOpen { get; } Property Value Type Description System.Boolean IsOpen 视图是否已经打开。 Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean Methods Close() 关闭视图。 Declaration public void Close() GetViewInLayer(Int32) 获得指定层级内已打开的视图。 Declaration public static BaseView GetViewInLayer(int layer) Parameters Type Name Description System.Int32 layer 视图层级，最小为1 Returns Type Description BaseView 视图 OnClose() 视图关闭时调用此方法。 Declaration protected abstract void OnClose() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnOpen() 视图打开时调用此方法。 Declaration protected abstract void OnOpen() Open() 打开视图。 Declaration public void Open() RealRefresh() 实际刷新视图。 Declaration protected abstract void RealRefresh() Refresh() 刷新视图。 为避免重复调用方法导致频繁刷新的情况，调用该方法不会立即刷新视图，实际刷新会在最多20毫秒内触发。 Declaration public void Refresh() Start() Declaration protected virtual void Start() Events OnButtonClick 按钮点击事件 Declaration public static event UnityAction<BaseView, Button> OnButtonClick Event Type Type Description UnityAction < BaseView , Button > OnViewClose 视图关闭事件 Declaration public static event UnityAction<BaseView> OnViewClose Event Type Type Description UnityAction < BaseView > OnViewOpen 视图打开事件 Declaration public static event UnityAction<BaseView> OnViewOpen Event Type Type Description UnityAction < BaseView >"
  },
  "api/Global.BaseWindow.html": {
    "href": "api/Global.BaseWindow.html",
    "title": "Class BaseWindow | 塔防游戏API文档",
    "keywords": "Class BaseWindow 所有窗口的父类。 Inheritance System.Object BaseWindow PopMessageWindow PopWindow Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class BaseWindow : MonoBehaviour Fields autoClose 视图关闭时自动关闭窗口 Declaration public bool autoClose Field Value Type Description System.Boolean canvasGroup Declaration protected CanvasGroup canvasGroup Field Value Type Description CanvasGroup closeButton 窗口关闭按钮 Declaration public Button closeButton Field Value Type Description Button isFloating 是否为浮动窗口 Declaration public bool isFloating Field Value Type Description System.Boolean onClose 窗口关闭事件 Declaration public UnityEvent onClose Field Value Type Description UnityEvent onOpen 窗口打开事件 Declaration public UnityEvent onOpen Field Value Type Description UnityEvent onRefresh 窗口刷新事件 Declaration public UnityEvent onRefresh Field Value Type Description UnityEvent Properties Current 当前窗口。 Declaration public static BaseWindow Current { get; } Property Value Type Description BaseWindow IsAnyWindowOpen 是否存在打开的窗口。 Declaration public static bool IsAnyWindowOpen { get; } Property Value Type Description System.Boolean IsOpen 窗口是否已经打开 Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean Methods AddListener() 添加监听器。 Declaration protected abstract void AddListener() Awake() Declaration protected virtual void Awake() Close() 关闭窗口。 Declaration public void Close() OnClose() 窗口关闭时调用此方法。 Declaration protected abstract void OnClose() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnOpen() 窗口打开时调用此方法。 Declaration protected abstract void OnOpen() Open() 打开窗口。 Declaration public void Open() OpenOrClose() 切换窗口打开状态。 Declaration public void OpenOrClose() PlayCloseAnimation() 设置窗口关闭动画。 Declaration protected virtual void PlayCloseAnimation() PlayOpenAnimation() 设置窗口出现动画。 注意窗口默认不透明度为0，需要将canvasGroup.alpha设为1才能正常显示。 Declaration protected virtual void PlayOpenAnimation() RealRefresh() 实际刷新窗口。 Declaration protected abstract void RealRefresh() Refresh() 刷新窗口。 为避免重复调用方法导致频繁刷新的情况，调用该方法不会立即刷新窗口，实际刷新会在最多20毫秒内触发。 Declaration public void Refresh() RemoveListener() 移除监听器。 Declaration protected abstract void RemoveListener() Start() Declaration protected virtual void Start() Events OnWindowClose 窗口关闭事件 Declaration public static event UnityAction<BaseWindow> OnWindowClose Event Type Type Description UnityAction < BaseWindow > OnWindowOpen 窗口打开事件 Declaration public static event UnityAction<BaseWindow> OnWindowOpen Event Type Type Description UnityAction < BaseWindow >"
  },
  "api/Global.ConfigEditor.html": {
    "href": "api/Global.ConfigEditor.html",
    "title": "Class ConfigEditor | 塔防游戏API文档",
    "keywords": "Class ConfigEditor 配置表的Inspector窗口。 Inheritance System.Object ConfigEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Global.ConfigEditorWindow.html": {
    "href": "api/Global.ConfigEditorWindow.html",
    "title": "Class ConfigEditorWindow | 塔防游戏API文档",
    "keywords": "Class ConfigEditorWindow 配置表的编辑器窗口。 Inheritance System.Object ConfigEditorWindow Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigEditorWindow : EditorWindow Methods ShowWindow() 显示窗口。 Declaration public static ConfigEditorWindow ShowWindow() Returns Type Description ConfigEditorWindow 窗口对象 ShowWindow(ScriptableObject) 显示窗口。 Declaration public static ConfigEditorWindow ShowWindow(ScriptableObject selectedConfig) Parameters Type Name Description ScriptableObject selectedConfig 默认选中项 Returns Type Description ConfigEditorWindow 窗口对象"
  },
  "api/Global.ConfigItemDrawer.html": {
    "href": "api/Global.ConfigItemDrawer.html",
    "title": "Class ConfigItemDrawer | 塔防游戏API文档",
    "keywords": "Class ConfigItemDrawer 引用类型配置项在编辑器内的绘制逻辑。 Inheritance System.Object ConfigItemDrawer Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigItemDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Global.ConfigItemReference-1.html": {
    "href": "api/Global.ConfigItemReference-1.html",
    "title": "Class ConfigItemReference<T> | 塔防游戏API文档",
    "keywords": "Class ConfigItemReference<T> 用于引用配置项的类。 Inheritance System.Object ConfigItemReference<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class ConfigItemReference<T> where T : BaseConfigItem, new() Type Parameters Name Description T 配置项类型 Fields configID 配置项ID Declaration public int configID Field Value Type Description System.Int32 Properties Config 配置项对象 Declaration public T Config { get; } Property Value Type Description T"
  },
  "api/Global.ConfigManager.html": {
    "href": "api/Global.ConfigManager.html",
    "title": "Class ConfigManager | 塔防游戏API文档",
    "keywords": "Class ConfigManager 配置管理器。 该管理器会自动查找Resources文件夹下的所有配置表数据并记录。 Inheritance System.Object ConfigManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ConfigManager Methods GetConfigData<T>(Int32) 获得配置项。 Declaration public static T GetConfigData<T>(int configID) where T : BaseConfigItem, new() Parameters Type Name Description System.Int32 configID 配置项ID Returns Type Description T 配置项 Type Parameters Name Description T 配置项类型 GetConfigData<T>(String) 获得配置项。 Declaration public static T GetConfigData<T>(string configName) where T : BaseConfigItem, new() Parameters Type Name Description System.String configName 配置项名称 Returns Type Description T 配置项 Type Parameters Name Description T 配置项类型 GetConfigDataID<T>(T) 获得配置项ID。 Declaration public static int GetConfigDataID<T>(T configItem) where T : BaseConfigItem, new() Parameters Type Name Description T configItem 配置项 Returns Type Description System.Int32 配置项ID Type Parameters Name Description T 配置项类型 GetConfigLength<T>() 获得配置表长度。 Declaration public static int GetConfigLength<T>() where T : BaseConfigItem, new() Returns Type Description System.Int32 配置表长度 Type Parameters Name Description T 配置项类型 Load() 加载配置。 Declaration public static void Load()"
  },
  "api/Global.DamageInfo.html": {
    "href": "api/Global.DamageInfo.html",
    "title": "Class DamageInfo | 塔防游戏API文档",
    "keywords": "Class DamageInfo 伤害信息 Inheritance System.Object DamageInfo Namespace : Global Assembly : cs.temp.dll.dll Syntax public class DamageInfo Fields damage 伤害量 Declaration public int damage Field Value Type Description System.Int32 damageType 伤害类型 Declaration public DamageType damageType Field Value Type Description DamageType"
  },
  "api/Global.DamageType.html": {
    "href": "api/Global.DamageType.html",
    "title": "Enum DamageType | 塔防游戏API文档",
    "keywords": "Enum DamageType 伤害类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum DamageType Fields Name Description Energy 能量 Physical 物理"
  },
  "api/Global.EnemyCreater.html": {
    "href": "api/Global.EnemyCreater.html",
    "title": "Class EnemyCreater | 塔防游戏API文档",
    "keywords": "Class EnemyCreater 敌人生成器 Inheritance System.Object EnemyCreater Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EnemyCreater : MonoBehaviour Fields enemyConfig Declaration public ConfigItemReference<UnitsConfigItem> enemyConfig Field Value Type Description ConfigItemReference < UnitsConfigItem > warningSprite Declaration public SpriteRenderer warningSprite Field Value Type Description SpriteRenderer"
  },
  "api/Global.EventManager.html": {
    "href": "api/Global.EventManager.html",
    "title": "Class EventManager | 塔防游戏API文档",
    "keywords": "Class EventManager 事件管理器。 管理游戏中的各种事件。 Inheritance System.Object EventManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class EventManager Fields AfterUnitDash 单位冲刺结束事件 参数1：冲刺的单位控制器 Declaration public static UnityAction<UnitController> AfterUnitDash Field Value Type Description UnityAction < UnitController > BeforeAttack 受到攻击前事件 攻击不一定触发该事件，攻击可能被免疫攻击等技能免疫。 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeAttack Field Value Type Description UnityAction < Unit , Unit , DamageInfo > BeforeDamage 受到伤害前事件 受到攻击不一定触发该事件，伤害可能被护盾等抵挡。 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeDamage Field Value Type Description UnityAction < Unit , Unit , DamageInfo > BeforeDeath 死亡前事件 可以在此通过增加target的HP实现复活效果 参数1：攻击者 参数2：受击者 参数3：伤害信息 Declaration public static UnityAction<Unit, Unit, DamageInfo> BeforeDeath Field Value Type Description UnityAction < Unit , Unit , DamageInfo > OnDeath 死亡事件 参数1：死亡的单位 Declaration public static UnityAction<Unit> OnDeath Field Value Type Description UnityAction < Unit > OnPlayerSkillIdle 玩家技能闲置事件 Declaration public static UnityAction OnPlayerSkillIdle Field Value Type Description UnityAction OnSkillCustomTriggered 技能自定义触发事件 可以在动画中主动触发该事件 参数1：使用的技能控制器 参数2：自定义参数 Declaration public static UnityAction<SkillController, string> OnSkillCustomTriggered Field Value Type Description UnityAction < SkillController , System.String > OnSkillForget 技能遗忘事件 参数1：遗忘的技能 Declaration public static UnityAction<Skill> OnSkillForget Field Value Type Description UnityAction < Skill > OnSkillLearn 技能习得事件 参数1：习得的技能 Declaration public static UnityAction<Skill> OnSkillLearn Field Value Type Description UnityAction < Skill > OnSkillTriggered 技能触发事件 参数1：使用的技能控制器 参数2：触发的单位 Declaration public static UnityAction<SkillController, Unit> OnSkillTriggered Field Value Type Description UnityAction < SkillController , Unit > OnSkillUse 技能使用事件 参数1：使用的技能控制器 Declaration public static UnityAction<SkillController> OnSkillUse Field Value Type Description UnityAction < SkillController > OnStateGain 状态获得事件 参数1：获得的状态 Declaration public static UnityAction<State> OnStateGain Field Value Type Description UnityAction < State > OnStateLost 状态失去事件 参数1：失去的状态 Declaration public static UnityAction<State> OnStateLost Field Value Type Description UnityAction < State > OnStateUpdate 状态持续事件，此事件会在状态维持期间每帧调用一次 参数1：持续的状态 Declaration public static UnityAction<State> OnStateUpdate Field Value Type Description UnityAction < State > OnUnitDash 单位冲刺事件 参数1：冲刺的单位控制器 Declaration public static UnityAction<UnitController> OnUnitDash Field Value Type Description UnityAction < UnitController > OnUnitInit 单位初始化事件 参数1：初始化的单位 Declaration public static UnityAction<Unit> OnUnitInit Field Value Type Description UnityAction < Unit >"
  },
  "api/Global.FactionType.html": {
    "href": "api/Global.FactionType.html",
    "title": "Enum FactionType | 塔防游戏API文档",
    "keywords": "Enum FactionType 阵营类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum FactionType Fields Name Description Ally 我方 Enemy 敌方 Neutral 中立"
  },
  "api/Global.FrameEntry.html": {
    "href": "api/Global.FrameEntry.html",
    "title": "Class FrameEntry | 塔防游戏API文档",
    "keywords": "Class FrameEntry 框架入口。 调用FrameEntry.Init()启动框架。 Inheritance System.Object FrameEntry Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FrameEntry : MonoBehaviour Fields autoSave 是否自动存档 Declaration public static bool autoSave Field Value Type Description System.Boolean Methods Init() 初始化框架。 Declaration public static IEnumerator Init() Returns Type Description System.Collections.IEnumerator Events OnGlobalRefresh 全局刷新事件，每20毫秒触发一次 目前仅用于刷新UI。 Declaration public static event UnityAction OnGlobalRefresh Event Type Type Description UnityAction"
  },
  "api/Global.GameManager.html": {
    "href": "api/Global.GameManager.html",
    "title": "Class GameManager | 塔防游戏API文档",
    "keywords": "Class GameManager 管理游戏进程的类。 Inheritance System.Object GameManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameManager : MonoBehaviour Fields DOUBLE_CLICK_TIME_THRESHOLD 双击触发间隔阈值 Declaration public const float DOUBLE_CLICK_TIME_THRESHOLD = 0.3F Field Value Type Description System.Single gameOverView 游戏结束视图 Declaration public GameOverView gameOverView Field Value Type Description GameOverView gameView 游戏HUD视图 Declaration public GameView gameView Field Value Type Description GameView globalView 全局视图 Declaration public GlobalView globalView Field Value Type Description GlobalView instance 实例对象 Declaration public static GameManager instance Field Value Type Description GameManager inventoryView 背包视图 Declaration public InventoryView inventoryView Field Value Type Description InventoryView levelUpView 单位升级视图 Declaration public LevelUpView levelUpView Field Value Type Description LevelUpView loadingView 加载视图 Declaration public static LoadingView loadingView Field Value Type Description LoadingView map 地图 Declaration public static MapController map Field Value Type Description MapController popWindowView 弹出窗口视图 Declaration public PopWindowView popWindowView Field Value Type Description PopWindowView selectUnitView 单位选择视图 Declaration public SelectUnitView selectUnitView Field Value Type Description SelectUnitView settingsView 设置视图 Declaration public SettingsView settingsView Field Value Type Description SettingsView skillComboView 技能连段视图 Declaration public SkillComboView skillComboView Field Value Type Description SkillComboView unitInfoView 单位信息视图 Declaration public UnitInfoView unitInfoView Field Value Type Description UnitInfoView"
  },
  "api/Global.GameOverView.html": {
    "href": "api/Global.GameOverView.html",
    "title": "Class GameOverView | 塔防游戏API文档",
    "keywords": "Class GameOverView 处理游戏结束的视图。 Inheritance System.Object BaseView GameOverView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameOverView : BaseView Fields prompt Declaration public Image prompt Field Value Type Description Image restartButtonText Declaration public TextMeshProUGUI restartButtonText Field Value Type Description TextMeshProUGUI titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI toTitleButtonText Declaration public TextMeshProUGUI toTitleButtonText Field Value Type Description TextMeshProUGUI Methods CheckDoubleClick() Declaration public void CheckDoubleClick() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Restart() Declaration public void Restart() ToTitle() Declaration public void ToTitle()"
  },
  "api/Global.GameSkillComboItem.html": {
    "href": "api/Global.GameSkillComboItem.html",
    "title": "Class GameSkillComboItem | 塔防游戏API文档",
    "keywords": "Class GameSkillComboItem 处理HUD中技能连段项目的类。 Inheritance System.Object GameSkillComboItem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameSkillComboItem : MonoBehaviour Fields attackCombo Declaration public int attackCombo Field Value Type Description System.Int32 background Declaration public Image background Field Value Type Description Image comboText Declaration public TextMeshProUGUI comboText Field Value Type Description TextMeshProUGUI icon Declaration public Image icon Field Value Type Description Image rectTransform Declaration public RectTransform rectTransform Field Value Type Description RectTransform titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Methods Refresh() Declaration public void Refresh() SetComboInfo(Int32, Boolean) Declaration public void SetComboInfo(int attackCombo, bool isRightAttack) Parameters Type Name Description System.Int32 attackCombo System.Boolean isRightAttack"
  },
  "api/Global.GameView.html": {
    "href": "api/Global.GameView.html",
    "title": "Class GameView | 塔防游戏API文档",
    "keywords": "Class GameView 处理游戏HUD的视图。 Inheritance System.Object BaseView GameView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameView : BaseView Fields atkText Declaration public TextMeshProUGUI atkText Field Value Type Description TextMeshProUGUI bottom Declaration public Transform bottom Field Value Type Description Transform comboCommonSprite Declaration public Sprite comboCommonSprite Field Value Type Description Sprite comboHighlightSprite Declaration public Sprite comboHighlightSprite Field Value Type Description Sprite comboItemSpacing Declaration public float comboItemSpacing Field Value Type Description System.Single defText Declaration public TextMeshProUGUI defText Field Value Type Description TextMeshProUGUI edfText Declaration public TextMeshProUGUI edfText Field Value Type Description TextMeshProUGUI ersText Declaration public TextMeshProUGUI ersText Field Value Type Description TextMeshProUGUI hpText Declaration public TextMeshProUGUI hpText Field Value Type Description TextMeshProUGUI left Declaration public Transform left Field Value Type Description Transform pickUpPrompt Declaration public Image pickUpPrompt Field Value Type Description Image resText Declaration public TextMeshProUGUI resText Field Value Type Description TextMeshProUGUI skillComboContent1 Declaration public Transform skillComboContent1 Field Value Type Description Transform skillComboContent2 Declaration public Transform skillComboContent2 Field Value Type Description Transform skillComboPrefab Declaration public GameSkillComboItem skillComboPrefab Field Value Type Description GameSkillComboItem spdText Declaration public TextMeshProUGUI spdText Field Value Type Description TextMeshProUGUI targetKillText Declaration public TextMeshProUGUI targetKillText Field Value Type Description TextMeshProUGUI top Declaration public Transform top Field Value Type Description Transform touText Declaration public TextMeshProUGUI touText Field Value Type Description TextMeshProUGUI Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.GlobalView.html": {
    "href": "api/Global.GlobalView.html",
    "title": "Class GlobalView | 塔防游戏API文档",
    "keywords": "Class GlobalView 处理全局UI的视图。 一些不确定视图归属的UI可以放在这里。 Inheritance System.Object BaseView GlobalView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GlobalView : BaseView Fields cursorEffect 光标特效 Declaration public Image cursorEffect Field Value Type Description Image popMessageWindow 弹出信息窗口 Declaration public PopMessageWindow popMessageWindow Field Value Type Description PopMessageWindow popWindow 弹出窗口 Declaration public PopWindow popWindow Field Value Type Description PopWindow Methods OnChangeCursor(InputAction.CallbackContext) Declaration public void OnChangeCursor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | 塔防游戏API文档",
    "keywords": "Namespace Global Classes AnimationUtils 动画的工具类。 AutoSorting2D 根据y轴自动处理遮挡关系。 BaseConfigItem 所有配置项的父类。 BaseConfigTable<T> 所有配置表的父类。 BaseEvent<T> 单位的事件触发类。 注意事件被触发并不意味着本单位参与了该事件，一般要先判断本单位是参与者再执行逻辑。 BaseSingleton<T> 单例模式父类。 BaseUserData 处理用户数据的类。 本类为抽象类，具体数据由子类管理。 BaseView 所有视图的父类。 BaseWindow 所有窗口的父类。 ConfigEditor 配置表的Inspector窗口。 ConfigEditorWindow 配置表的编辑器窗口。 ConfigItemDrawer 引用类型配置项在编辑器内的绘制逻辑。 ConfigItemReference<T> 用于引用配置项的类。 ConfigManager 配置管理器。 该管理器会自动查找Resources文件夹下的所有配置表数据并记录。 DamageInfo 伤害信息 EnemyCreater 敌人生成器 EventManager 事件管理器。 管理游戏中的各种事件。 FrameEntry 框架入口。 调用FrameEntry.Init()启动框架。 GameManager 管理游戏进程的类。 GameOverView 处理游戏结束的视图。 GameSkillComboItem 处理HUD中技能连段项目的类。 GameView 处理游戏HUD的视图。 GlobalView 处理全局UI的视图。 一些不确定视图归属的UI可以放在这里。 InventoryItem 处理背包项目的类。 InventoryView 处理背包与装备的视图。 LanguageConfig 语言配置列表。 LanguageConfigItem 语言配置数据。 LevelUpView 处理单位升级的视图。 LoadingView 处理加载界面的视图。 Map 处理地图的类。 MapController 控制地图的类。 ObservableUserData<T> 处理可监听用户数据的类。 本类为抽象类，具体数据由子类管理。 PlatformCommonConfig 平台通用配置列表。 PlatformCommonConfigItem 平台通用配置数据。 PlatformManager 平台管理器。 Player 处理主角的类。 PlayerController 控制主角行为的类。 PlayView 处理游玩场景的视图。 PopMessageWindow 处理弹出消息的类。 PopWindow 处理弹出窗口的类。 PopWindowView 处理弹出窗口的视图。 SelectUnitItem 处理单位选择项目的类。 SelectUnitView 处理单位选择的视图。 SettingsView 处理设置的视图。 Skill 处理技能的类。 SkillComboItem 处理技能连段项目的类。 SkillComboView 处理技能连段的视图。 SkillController 控制技能行为的类。 SkillEvent000 SkillEvent001 SkillEvent002 SkillEvent003 SkillEvent004 SkillEvent005 SkillEvent006 SkillEvent007 SkillsConfig 技能配置列表。 SkillsConfigItem 技能配置数据。 State 处理状态的类。 StateEvent002 StatesConfig 状态配置列表。 StatesConfigItem 状态配置数据。 SystemData 处理系统设置的类。 Test TitleView 处理场景TitleScene的视图。 Unit 处理单位的类。 UnitController 控制单位行为的类。 UnitEvent UnitEvent000 UnitEvent002 UnitEvent007 UnitEvent010 UnitInfoView 处理单位信息的视图。 UnitsConfig 单位配置列表。 UnitsConfigItem 单位配置数据。 UnitSkillItem 处理单位技能列表项目的类。 UserDataManager 用户数据管理器 Utils 工具类。 Structs LanguageConfigItem.LanguageInfo 语言文本键值对信息。 Player.ComboInfo 连段信息 UserDataManager.UserDataInfo 存档信息 Enums AttackType 攻击类型 DamageType 伤害类型 FactionType 阵营类型 LanguageType 语言类型 MoveType 单位移动类型 PlatformType 平台类型 RaceType 种族类型 SkillMoveType 技能移动类型 UnitType 单位类型 Delegates ObservableUserData<T>.DataChangedHandler 数据改变事件用委托 Unit.DamagedHandler 受到伤害等事件用委托。"
  },
  "api/Global.InventoryItem.html": {
    "href": "api/Global.InventoryItem.html",
    "title": "Class InventoryItem | 塔防游戏API文档",
    "keywords": "Class InventoryItem 处理背包项目的类。 Inheritance System.Object InventoryItem Implements IBeginDragHandler IDragHandler IEndDragHandler IPointerEnterHandler IPointerExitHandler IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryItem : MonoBehaviour Fields buildedText Declaration public TextMeshProUGUI buildedText Field Value Type Description TextMeshProUGUI titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Properties IsDrag Declaration public bool IsDrag { get; } Property Value Type Description System.Boolean TargetUnit Declaration public Unit TargetUnit { get; set; } Property Value Type Description Unit Methods OnBeginDrag(PointerEventData) Declaration public void OnBeginDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnClick() Declaration public void OnClick() OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnEndDrag(PointerEventData) Declaration public void OnEndDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public void Refresh() Implements IBeginDragHandler IDragHandler IEndDragHandler IPointerEnterHandler IPointerExitHandler IPointerDownHandler"
  },
  "api/Global.InventoryView.html": {
    "href": "api/Global.InventoryView.html",
    "title": "Class InventoryView | 塔防游戏API文档",
    "keywords": "Class InventoryView 处理背包与装备的视图。 Inheritance System.Object BaseView InventoryView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryView : BaseView Fields canvasGroup Declaration public CanvasGroup canvasGroup Field Value Type Description CanvasGroup content1 Declaration public Transform content1 Field Value Type Description Transform content2 Declaration public Transform content2 Field Value Type Description Transform itemPrefab Declaration public InventoryItem itemPrefab Field Value Type Description InventoryItem noItemText Declaration public TextMeshProUGUI noItemText Field Value Type Description TextMeshProUGUI titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Methods CheckAndClose() Declaration public void CheckAndClose() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.LanguageConfig.html": {
    "href": "api/Global.LanguageConfig.html",
    "title": "Class LanguageConfig | 塔防游戏API文档",
    "keywords": "Class LanguageConfig 语言配置列表。 Inheritance System.Object BaseConfigTable < LanguageConfigItem > LanguageConfig Inherited Members BaseConfigTable<LanguageConfigItem>.tabName BaseConfigTable<LanguageConfigItem>.version BaseConfigTable<LanguageConfigItem>.enableConsole BaseConfigTable<LanguageConfigItem>.configList BaseConfigTable<LanguageConfigItem>.Item[Int32] BaseConfigTable<LanguageConfigItem>.Item[String] BaseConfigTable<LanguageConfigItem>.GetConfigID(LanguageConfigItem) BaseConfigTable<LanguageConfigItem>.ConfigCount Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LanguageConfig : BaseConfigTable<LanguageConfigItem> Properties ConfigNameList Declaration public override List<string> ConfigNameList { get; } Property Value Type Description System.Collections.Generic.List < System.String > Overrides BaseConfigTable<LanguageConfigItem>.ConfigNameList"
  },
  "api/Global.LanguageConfigItem.html": {
    "href": "api/Global.LanguageConfigItem.html",
    "title": "Class LanguageConfigItem | 塔防游戏API文档",
    "keywords": "Class LanguageConfigItem 语言配置数据。 Inheritance System.Object BaseConfigItem LanguageConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class LanguageConfigItem : BaseConfigItem Fields texts 语言文本列表 Declaration public List<LanguageConfigItem.LanguageInfo> texts Field Value Type Description System.Collections.Generic.List < LanguageConfigItem.LanguageInfo >"
  },
  "api/Global.LanguageConfigItem.LanguageInfo.html": {
    "href": "api/Global.LanguageConfigItem.LanguageInfo.html",
    "title": "Struct LanguageConfigItem.LanguageInfo | 塔防游戏API文档",
    "keywords": "Struct LanguageConfigItem.LanguageInfo 语言文本键值对信息。 Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public struct LanguageInfo Fields key 文本键值 Declaration public string key Field Value Type Description System.String value 目标文本 Declaration public string value Field Value Type Description System.String"
  },
  "api/Global.LanguageType.html": {
    "href": "api/Global.LanguageType.html",
    "title": "Enum LanguageType | 塔防游戏API文档",
    "keywords": "Enum LanguageType 语言类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum LanguageType Fields Name Description English 英文 SChinese 简体中文 TChinese 繁体中文"
  },
  "api/Global.LevelUpView.html": {
    "href": "api/Global.LevelUpView.html",
    "title": "Class LevelUpView | 塔防游戏API文档",
    "keywords": "Class LevelUpView 处理单位升级的视图。 Inheritance System.Object BaseView LevelUpView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelUpView : BaseView Fields checkInfo Declaration public Transform checkInfo Field Value Type Description Transform descText Declaration public TextMeshProUGUI descText Field Value Type Description TextMeshProUGUI levelUpButton Declaration public Button levelUpButton Field Value Type Description Button levelUpButtonPrompt Declaration public Image levelUpButtonPrompt Field Value Type Description Image levelUpInfo Declaration public Transform levelUpInfo Field Value Type Description Transform levelUpText Declaration public TextMeshProUGUI levelUpText Field Value Type Description TextMeshProUGUI nextText1 Declaration public TextMeshProUGUI nextText1 Field Value Type Description TextMeshProUGUI nextText2 Declaration public TextMeshProUGUI nextText2 Field Value Type Description TextMeshProUGUI prompt Declaration public Image prompt Field Value Type Description Image unitText1 Declaration public TextMeshProUGUI unitText1 Field Value Type Description TextMeshProUGUI unitText2 Declaration public TextMeshProUGUI unitText2 Field Value Type Description TextMeshProUGUI Properties DescTargetIndex Declaration public int DescTargetIndex { get; set; } Property Value Type Description System.Int32 TargetUnit Declaration public Unit TargetUnit { get; set; } Property Value Type Description Unit Methods CheckDoubleClick() Declaration public void CheckDoubleClick() CheckLevelUp(Int32) Declaration public void CheckLevelUp(int nextLevelUnitIndex) Parameters Type Name Description System.Int32 nextLevelUnitIndex GetItem() Declaration public void GetItem() LevelUp() Declaration public void LevelUp() NextLevel() Declaration public void NextLevel() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() SelectTargetUnit() Declaration public void SelectTargetUnit() ToTraining() Declaration public void ToTraining()"
  },
  "api/Global.LoadingView.html": {
    "href": "api/Global.LoadingView.html",
    "title": "Class LoadingView | 塔防游戏API文档",
    "keywords": "Class LoadingView 处理加载界面的视图。 Inheritance System.Object BaseView LoadingView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LoadingView : BaseView Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.Map.html": {
    "href": "api/Global.Map.html",
    "title": "Class Map | 塔防游戏API文档",
    "keywords": "Class Map 处理地图的类。 Inheritance System.Object BaseUserData ObservableUserData < Map > Map Inherited Members ObservableUserData<Map>.OnDataChanged ObservableUserData<Map>.TriggerDataChanged(Map) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Map : ObservableUserData<Map> Properties CountDown 倒计时。 Declaration public int CountDown { get; set; } Property Value Type Description System.Int32 TargetKillCount 目标杀怪数。 Declaration public int TargetKillCount { get; set; } Property Value Type Description System.Int32 Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave()"
  },
  "api/Global.MapController.html": {
    "href": "api/Global.MapController.html",
    "title": "Class MapController | 塔防游戏API文档",
    "keywords": "Class MapController 控制地图的类。 Inheritance System.Object MapController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MapController : MonoBehaviour Fields autoCreateUnitList Declaration public List<ConfigItemReference<UnitsConfigItem>> autoCreateUnitList Field Value Type Description System.Collections.Generic.List < ConfigItemReference < UnitsConfigItem >> createDuration Declaration public float createDuration Field Value Type Description System.Single enemyCreaterPrefab Declaration public EnemyCreater enemyCreaterPrefab Field Value Type Description EnemyCreater player Declaration public PlayerController player Field Value Type Description PlayerController Properties Data Declaration public Map Data { get; } Property Value Type Description Map PlayerData Declaration public Player PlayerData { get; } Property Value Type Description Player"
  },
  "api/Global.MoveType.html": {
    "href": "api/Global.MoveType.html",
    "title": "Enum MoveType | 塔防游戏API文档",
    "keywords": "Enum MoveType 单位移动类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum MoveType Fields Name Description Fixed 固定 Free 自由"
  },
  "api/Global.ObservableUserData-1.DataChangedHandler.html": {
    "href": "api/Global.ObservableUserData-1.DataChangedHandler.html",
    "title": "Delegate ObservableUserData<T>.DataChangedHandler | 塔防游戏API文档",
    "keywords": "Delegate ObservableUserData<T>.DataChangedHandler 数据改变事件用委托 Namespace : Global Assembly : cs.temp.dll.dll Syntax public delegate void DataChangedHandler(T userData); Parameters Type Name Description T userData 被改变的数据"
  },
  "api/Global.ObservableUserData-1.html": {
    "href": "api/Global.ObservableUserData-1.html",
    "title": "Class ObservableUserData<T> | 塔防游戏API文档",
    "keywords": "Class ObservableUserData<T> 处理可监听用户数据的类。 本类为抽象类，具体数据由子类管理。 Inheritance System.Object BaseUserData ObservableUserData<T> Map Skill State SystemData Unit Inherited Members BaseUserData.BeforeSave() BaseUserData.AfterLoad() Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class ObservableUserData<T> : BaseUserData where T : ObservableUserData<T> Type Parameters Name Description T 子类的泛型 Methods TriggerDataChanged(T) 触发数据改变事件。 Declaration protected void TriggerDataChanged(T data) Parameters Type Name Description T data 数据对象（this） Events OnDataChanged 数据发生改变时触发该事件 Declaration public event ObservableUserData<T>.DataChangedHandler OnDataChanged Event Type Type Description ObservableUserData.DataChangedHandler <>"
  },
  "api/Global.PlatformCommonConfig.html": {
    "href": "api/Global.PlatformCommonConfig.html",
    "title": "Class PlatformCommonConfig | 塔防游戏API文档",
    "keywords": "Class PlatformCommonConfig 平台通用配置列表。 Inheritance System.Object BaseConfigTable < PlatformCommonConfigItem > PlatformCommonConfig Inherited Members BaseConfigTable<PlatformCommonConfigItem>.tabName BaseConfigTable<PlatformCommonConfigItem>.version BaseConfigTable<PlatformCommonConfigItem>.enableConsole BaseConfigTable<PlatformCommonConfigItem>.configList BaseConfigTable<PlatformCommonConfigItem>.Item[Int32] BaseConfigTable<PlatformCommonConfigItem>.Item[String] BaseConfigTable<PlatformCommonConfigItem>.GetConfigID(PlatformCommonConfigItem) BaseConfigTable<PlatformCommonConfigItem>.ConfigCount Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlatformCommonConfig : BaseConfigTable<PlatformCommonConfigItem> Properties ConfigNameList Declaration public override List<string> ConfigNameList { get; } Property Value Type Description System.Collections.Generic.List < System.String > Overrides BaseConfigTable<PlatformCommonConfigItem>.ConfigNameList"
  },
  "api/Global.PlatformCommonConfigItem.html": {
    "href": "api/Global.PlatformCommonConfigItem.html",
    "title": "Class PlatformCommonConfigItem | 塔防游戏API文档",
    "keywords": "Class PlatformCommonConfigItem 平台通用配置数据。 Inheritance System.Object BaseConfigItem PlatformCommonConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class PlatformCommonConfigItem : BaseConfigItem Fields appID 游戏ID Declaration public string appID Field Value Type Description System.String appVersion 游戏版本 Declaration public string appVersion Field Value Type Description System.String debugMode 测试模式 Declaration public bool debugMode Field Value Type Description System.Boolean defaultLanguage 默认语言 Declaration public LanguageType defaultLanguage Field Value Type Description LanguageType"
  },
  "api/Global.PlatformManager.html": {
    "href": "api/Global.PlatformManager.html",
    "title": "Class PlatformManager | 塔防游戏API文档",
    "keywords": "Class PlatformManager 平台管理器。 Inheritance System.Object PlatformManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlatformManager Properties Current 当前平台。 Declaration public static PlatformType Current { get; } Property Value Type Description PlatformType Methods ExitGame() 退出游戏。 Declaration public static void ExitGame() Init() 初始化管理器。 Declaration public static void Init()"
  },
  "api/Global.PlatformType.html": {
    "href": "api/Global.PlatformType.html",
    "title": "Enum PlatformType | 塔防游戏API文档",
    "keywords": "Enum PlatformType 平台类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum PlatformType Fields Name Description Default 默认"
  },
  "api/Global.Player.ComboInfo.html": {
    "href": "api/Global.Player.ComboInfo.html",
    "title": "Struct Player.ComboInfo | 塔防游戏API文档",
    "keywords": "Struct Player.ComboInfo 连段信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct ComboInfo Fields comboID 连段序号 Declaration public int comboID Field Value Type Description System.Int32 skillID 技能ID Declaration public string skillID Field Value Type Description System.String variantName 变体名称 Declaration public string variantName Field Value Type Description System.String Properties SkillSource Declaration public Skill SkillSource { readonly get; set; } Property Value Type Description Skill Methods Equals(Player.ComboInfo) Declaration public bool Equals(Player.ComboInfo other) Parameters Type Name Description Player.ComboInfo other Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators Equality(Player.ComboInfo, Player.ComboInfo) Declaration public static bool operator ==(Player.ComboInfo left, Player.ComboInfo right) Parameters Type Name Description Player.ComboInfo left Player.ComboInfo right Returns Type Description System.Boolean Inequality(Player.ComboInfo, Player.ComboInfo) Declaration public static bool operator !=(Player.ComboInfo left, Player.ComboInfo right) Parameters Type Name Description Player.ComboInfo left Player.ComboInfo right Returns Type Description System.Boolean"
  },
  "api/Global.Player.html": {
    "href": "api/Global.Player.html",
    "title": "Class Player | 塔防游戏API文档",
    "keywords": "Class Player 处理主角的类。 Inheritance System.Object BaseUserData ObservableUserData < Unit > Unit Player Inherited Members Unit.configID Unit._basicMaxHP Unit._hp Unit._basicMaxTOU Unit._tou Unit._basicATK Unit._basicDEF Unit._basicEDF Unit._basicSPD Unit._basicDashRange Unit._basicRES Unit._basicERS Unit._itemSkillList Unit._skillList Unit._stateList Unit.Config Unit.EventScript Unit.Controller Unit.BeforeAttack Unit.BeforeDamage Unit.OnDeath Unit.AddListener() Unit.Destroy() Unit.IsPlayer Unit.IsAttackDisabled Unit.IsMoveDisabled Unit.BasicMaxHP Unit.BonusMaxHP Unit.BonusMaxHP_P Unit.MaxHP Unit.HP Unit.Damage(Unit, DamageInfo) Unit.BasicMaxTOU Unit.BonusMaxTOU Unit.BonusMaxTOU_P Unit.MaxTOU Unit.TOU Unit.BasicATK Unit.BonusATK Unit.BonusATK_P Unit.ATK Unit.BasicDEF Unit.BonusDEF Unit.BonusDEF_P Unit.DEF Unit.BasicEDF Unit.BonusEDF Unit.BonusEDF_P Unit.EDF Unit.BasicSPD Unit.BonusSPD Unit.BonusSPD_P Unit.SPD Unit.BasicDashRange Unit.BonusDashRange Unit.BonusDashRange_P Unit.DashRange Unit.BasicRES Unit.BonusRES Unit.RES Unit.BasicERS Unit.BonusERS Unit.ERS Unit.GetItemSkills() Unit.AddItemSkill(Skill) Unit.RemoveItemSkill(Skill) Unit.LearnSkill(Skill) Unit.GetStates() Unit.AddState(State) Unit.RemoveState(State) Unit.PhysicalShield Unit.EnergyShield Unit.UniversalShield ObservableUserData<Unit>.OnDataChanged ObservableUserData<Unit>.TriggerDataChanged(Unit) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Player : Unit Constructors Player() Declaration public Player() Properties AvailableUnitIDPool 可获得的单位ID列表。 Declaration public List<int> AvailableUnitIDPool { get; } Property Value Type Description System.Collections.Generic.List < System.Int32 > CompletedWave 已完成波次。 Declaration public int CompletedWave { get; set; } Property Value Type Description System.Int32 EquippedUnitList 装备中的单位列表。 Declaration public ReadOnlyCollection<Unit> EquippedUnitList { get; } Property Value Type Description ReadOnlyCollection < Unit > Guid 随机数标识符。 Declaration public Guid Guid { get; } Property Value Type Description System.Guid InventoryUnitList 背包中的单位列表。 Declaration public ReadOnlyCollection<Unit> InventoryUnitList { get; } Property Value Type Description ReadOnlyCollection < Unit > LeftComboInfoList 左键连段信息列表。 Declaration public ReadOnlyCollection<Player.ComboInfo> LeftComboInfoList { get; } Property Value Type Description ReadOnlyCollection < Player.ComboInfo > MaxComboCount 最大连段数量。 Declaration public int MaxComboCount { get; } Property Value Type Description System.Int32 MaxEquippedCount 最大装备栏位。 Declaration public int MaxEquippedCount { get; } Property Value Type Description System.Int32 RightComboInfoList 右键连段信息列表。 Declaration public ReadOnlyCollection<Player.ComboInfo> RightComboInfoList { get; } Property Value Type Description ReadOnlyCollection < Player.ComboInfo > Methods AddLeftCombo(Player.ComboInfo) 添加左键连段。 Declaration public bool AddLeftCombo(Player.ComboInfo comboInfo) Parameters Type Name Description Player.ComboInfo comboInfo 连段信息 Returns Type Description System.Boolean AddRightCombo(Player.ComboInfo) 添加右键连段。 Declaration public bool AddRightCombo(Player.ComboInfo comboInfo) Parameters Type Name Description Player.ComboInfo comboInfo 连段信息 Returns Type Description System.Boolean AfterLoad() Declaration public override void AfterLoad() Overrides Unit.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides Unit.BeforeSave() CompactEquippedUnit() 整理装备中的单位。 Declaration public void CompactEquippedUnit() EquipUnit(Unit, Int32) 装备单位。 Declaration public bool EquipUnit(Unit unit, int index) Parameters Type Name Description Unit unit 单位 System.Int32 index 装备栏位 Returns Type Description System.Boolean 是否装备成功 ForgetSkill(Skill) Declaration public override bool ForgetSkill(Skill skill) Parameters Type Name Description Skill skill Returns Type Description System.Boolean Overrides Unit.ForgetSkill(Skill) GainUnit(Unit) 将单位添加到背包。 Declaration public void GainUnit(Unit unit) Parameters Type Name Description Unit unit 单位 GetSkills() Declaration public override ReadOnlyCollection<Skill> GetSkills() Returns Type Description ReadOnlyCollection < Skill > Overrides Unit.GetSkills() Init() Declaration public override void Init() Overrides Unit.Init() LostUnit(Unit) 将单位移除背包。 Declaration public void LostUnit(Unit unit) Parameters Type Name Description Unit unit 单位 RemoveLeftCombo(Player.ComboInfo) 移除左键连段。 Declaration public void RemoveLeftCombo(Player.ComboInfo comboInfo) Parameters Type Name Description Player.ComboInfo comboInfo 连段信息 RemoveRightCombo(Player.ComboInfo) 移除右键连段。 Declaration public void RemoveRightCombo(Player.ComboInfo comboInfo) Parameters Type Name Description Player.ComboInfo comboInfo 连段信息 UnequipUnit(Unit) 卸载单位。 Declaration public void UnequipUnit(Unit unit) Parameters Type Name Description Unit unit 单位 UnequipUnitAt(Int32) 卸载单位。 Declaration public void UnequipUnitAt(int index) Parameters Type Name Description System.Int32 index 装备栏位 Events OnComboInfoChanged Declaration public event UnityAction OnComboInfoChanged Event Type Type Description UnityAction"
  },
  "api/Global.PlayerController.html": {
    "href": "api/Global.PlayerController.html",
    "title": "Class PlayerController | 塔防游戏API文档",
    "keywords": "Class PlayerController 控制主角行为的类。 Inheritance System.Object UnitController PlayerController Inherited Members UnitController.spriteRenderer UnitController.destroySpriteRenderer UnitController.statePanel UnitController.healthBar UnitController.chargeBar UnitController.animator UnitController.rb UnitController.autoSorting UnitController.movement UnitController.overrideMovement UnitController.skillControllerList UnitController.skillBindLocalPosition UnitController.Data UnitController.Config UnitController.Start() UnitController.OnDataChanged(Unit) UnitController.UseSkill(Skill, String, Int32) UnitController.GetSkillController(Skill) UnitController.OnDestroy() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerController : UnitController Fields input Declaration public PlayerInput input Field Value Type Description PlayerInput Properties IsRightAttack Declaration public bool IsRightAttack { get; } Property Value Type Description System.Boolean LeftAttackCombo Declaration public int LeftAttackCombo { get; } Property Value Type Description System.Int32 RightAttackCombo Declaration public int RightAttackCombo { get; } Property Value Type Description System.Int32 Methods Awake() Declaration protected override void Awake() Overrides UnitController.Awake() FixedUpdate() Declaration protected override void FixedUpdate() Overrides UnitController.FixedUpdate() OnDash(InputAction.CallbackContext) Declaration public void OnDash(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnLeftAttack(InputAction.CallbackContext) Declaration public void OnLeftAttack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove(InputAction.CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseInventory(InputAction.CallbackContext) Declaration public void OnOpenOrCloseInventory(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseSettings(InputAction.CallbackContext) Declaration public void OnOpenOrCloseSettings(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnOpenOrCloseSkillCombo(InputAction.CallbackContext) Declaration public void OnOpenOrCloseSkillCombo(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPickUp(InputAction.CallbackContext) Declaration public void OnPickUp(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRightAttack(InputAction.CallbackContext) Declaration public void OnRightAttack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Update() Declaration protected override void Update() Overrides UnitController.Update()"
  },
  "api/Global.PlayView.html": {
    "href": "api/Global.PlayView.html",
    "title": "Class PlayView | 塔防游戏API文档",
    "keywords": "Class PlayView 处理游玩场景的视图。 Inheritance System.Object BaseView PlayView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayView : BaseView Fields isTraining Declaration public bool isTraining Field Value Type Description System.Boolean Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Start() Declaration protected override void Start() Overrides BaseView.Start()"
  },
  "api/Global.PopMessageWindow.html": {
    "href": "api/Global.PopMessageWindow.html",
    "title": "Class PopMessageWindow | 塔防游戏API文档",
    "keywords": "Class PopMessageWindow 处理弹出消息的类。 Inheritance System.Object BaseWindow PopMessageWindow Inherited Members BaseWindow.isFloating BaseWindow.autoClose BaseWindow.closeButton BaseWindow.onOpen BaseWindow.onClose BaseWindow.onRefresh BaseWindow.canvasGroup BaseWindow.OnWindowOpen BaseWindow.OnWindowClose BaseWindow.Current BaseWindow.IsAnyWindowOpen BaseWindow.Awake() BaseWindow.OnEnable() BaseWindow.OnDisable() BaseWindow.Open() BaseWindow.Close() BaseWindow.OpenOrClose() BaseWindow.IsOpen BaseWindow.Refresh() BaseWindow.PlayOpenAnimation() BaseWindow.PlayCloseAnimation() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopMessageWindow : BaseWindow Fields displayText Declaration public TextMeshProUGUI displayText Field Value Type Description TextMeshProUGUI Methods AddListener() Declaration protected override void AddListener() Overrides BaseWindow.AddListener() OnClose() Declaration protected override void OnClose() Overrides BaseWindow.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseWindow.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseWindow.RealRefresh() RemoveListener() Declaration protected override void RemoveListener() Overrides BaseWindow.RemoveListener() Show(String) Declaration public void Show(string text) Parameters Type Name Description System.String text Start() Declaration protected override void Start() Overrides BaseWindow.Start()"
  },
  "api/Global.PopWindow.html": {
    "href": "api/Global.PopWindow.html",
    "title": "Class PopWindow | 塔防游戏API文档",
    "keywords": "Class PopWindow 处理弹出窗口的类。 Inheritance System.Object BaseWindow PopWindow Implements IBeginDragHandler IDragHandler IPointerClickHandler Inherited Members BaseWindow.isFloating BaseWindow.autoClose BaseWindow.closeButton BaseWindow.onOpen BaseWindow.onClose BaseWindow.onRefresh BaseWindow.canvasGroup BaseWindow.OnWindowOpen BaseWindow.OnWindowClose BaseWindow.Current BaseWindow.IsAnyWindowOpen BaseWindow.Awake() BaseWindow.OnEnable() BaseWindow.OnDisable() BaseWindow.Open() BaseWindow.Close() BaseWindow.OpenOrClose() BaseWindow.IsOpen BaseWindow.Refresh() BaseWindow.PlayOpenAnimation() BaseWindow.PlayCloseAnimation() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopWindow : BaseWindow Fields bottom Declaration public Transform bottom Field Value Type Description Transform exampleText Declaration public TextMeshProUGUI exampleText Field Value Type Description TextMeshProUGUI mouseOffset Declaration public Vector2 mouseOffset Field Value Type Description Vector2 progress Declaration public Image progress Field Value Type Description Image Methods AddListener() Declaration protected override void AddListener() Overrides BaseWindow.AddListener() OnBeginDrag(PointerEventData) Declaration public void OnBeginDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnClose() Declaration protected override void OnClose() Overrides BaseWindow.OnClose() OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnOpen() Declaration protected override void OnOpen() Overrides BaseWindow.OnOpen() OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData RealRefresh() Declaration protected override void RealRefresh() Overrides BaseWindow.RealRefresh() RemoveListener() Declaration protected override void RemoveListener() Overrides BaseWindow.RemoveListener() Show(List<String>, List<String>, UnityAction<String>) Declaration public void Show(List<string> textList, List<string> allTextList, UnityAction<string> callback = null) Parameters Type Name Description System.Collections.Generic.List < System.String > textList System.Collections.Generic.List < System.String > allTextList UnityAction < System.String > callback Start() Declaration protected override void Start() Overrides BaseWindow.Start() Implements IBeginDragHandler IDragHandler IPointerClickHandler"
  },
  "api/Global.PopWindowView.html": {
    "href": "api/Global.PopWindowView.html",
    "title": "Class PopWindowView | 塔防游戏API文档",
    "keywords": "Class PopWindowView 处理弹出窗口的视图。 Inheritance System.Object BaseView PopWindowView Implements IPointerClickHandler Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopWindowView : BaseView Methods DestroyPopWindow(Int32) Declaration public void DestroyPopWindow(int startIndex) Parameters Type Name Description System.Int32 startIndex OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Implements IPointerClickHandler"
  },
  "api/Global.RaceType.html": {
    "href": "api/Global.RaceType.html",
    "title": "Enum RaceType | 塔防游戏API文档",
    "keywords": "Enum RaceType 种族类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum RaceType Fields Name Description Human 人族 Primordial 洪荒"
  },
  "api/Global.SelectUnitItem.html": {
    "href": "api/Global.SelectUnitItem.html",
    "title": "Class SelectUnitItem | 塔防游戏API文档",
    "keywords": "Class SelectUnitItem 处理单位选择项目的类。 Inheritance System.Object SelectUnitItem Implements IPointerEnterHandler IPointerExitHandler IPointerDownHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SelectUnitItem : MonoBehaviour Fields buildedText Declaration public TextMeshProUGUI buildedText Field Value Type Description TextMeshProUGUI button Declaration public Button button Field Value Type Description Button titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Properties TargetUnit Declaration public Unit TargetUnit { get; set; } Property Value Type Description Unit Methods OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public void Refresh() Implements IPointerEnterHandler IPointerExitHandler IPointerDownHandler"
  },
  "api/Global.SelectUnitView.html": {
    "href": "api/Global.SelectUnitView.html",
    "title": "Class SelectUnitView | 塔防游戏API文档",
    "keywords": "Class SelectUnitView 处理单位选择的视图。 Inheritance System.Object BaseView SelectUnitView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SelectUnitView : BaseView Fields content Declaration public Transform content Field Value Type Description Transform itemPrefab Declaration public SelectUnitItem itemPrefab Field Value Type Description SelectUnitItem noItemText Declaration public TextMeshProUGUI noItemText Field Value Type Description TextMeshProUGUI titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Events OnSelected Declaration public event UnityAction<Unit> OnSelected Event Type Type Description UnityAction < Unit >"
  },
  "api/Global.SettingsView.html": {
    "href": "api/Global.SettingsView.html",
    "title": "Class SettingsView | 塔防游戏API文档",
    "keywords": "Class SettingsView 处理设置的视图。 Inheritance System.Object BaseView SettingsView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SettingsView : BaseView Fields exitTrainingButton Declaration public Transform exitTrainingButton Field Value Type Description Transform restartButton Declaration public Transform restartButton Field Value Type Description Transform Methods Back() Declaration public void Back() CheckAndClose() Declaration public void CheckAndClose() ExitGame() Declaration public void ExitGame() ExitTrainingScene() Declaration public void ExitTrainingScene() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() Restart() Declaration public void Restart() ToTitle() Declaration public void ToTitle()"
  },
  "api/Global.Skill.html": {
    "href": "api/Global.Skill.html",
    "title": "Class Skill | 塔防游戏API文档",
    "keywords": "Class Skill 处理技能的类。 Inheritance System.Object BaseUserData ObservableUserData < Skill > Skill Inherited Members ObservableUserData<Skill>.OnDataChanged ObservableUserData<Skill>.TriggerDataChanged(Skill) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Skill : ObservableUserData<Skill> Constructors Skill(Int32) Declaration public Skill(int configID) Parameters Type Name Description System.Int32 configID Fields configID Declaration public readonly int configID Field Value Type Description System.Int32 id Declaration public readonly string id Field Value Type Description System.String Properties BonusATK 技能的攻击力加成值 Declaration public int BonusATK { get; set; } Property Value Type Description System.Int32 BonusATK_P 技能的攻击力加成百分比（%） Declaration public int BonusATK_P { get; set; } Property Value Type Description System.Int32 BonusDashRange 技能的冲刺幅度加成（%） Declaration public int BonusDashRange { get; set; } Property Value Type Description System.Int32 BonusDashRange_P 技能的冲刺幅度加成百分比（%） Declaration public int BonusDashRange_P { get; set; } Property Value Type Description System.Int32 BonusDEF 技能的物理防御力加成值 Declaration public int BonusDEF { get; set; } Property Value Type Description System.Int32 BonusDEF_P 技能的物理防御力加成百分比（%） Declaration public int BonusDEF_P { get; set; } Property Value Type Description System.Int32 BonusEDF 技能的能量防御力加成值 Declaration public int BonusEDF { get; set; } Property Value Type Description System.Int32 BonusEDF_P 技能的能量防御力加成百分比（%） Declaration public int BonusEDF_P { get; set; } Property Value Type Description System.Int32 BonusERS 技能的能量抗性加成值（%） Declaration public float BonusERS { get; set; } Property Value Type Description System.Single BonusMaxHP 技能的生命值上限加成值 Declaration public int BonusMaxHP { get; set; } Property Value Type Description System.Int32 BonusMaxHP_P 技能的生命值上限加成百分比（%） Declaration public int BonusMaxHP_P { get; set; } Property Value Type Description System.Int32 BonusMaxTOU 技能的韧性值上限加成值 Declaration public int BonusMaxTOU { get; set; } Property Value Type Description System.Int32 BonusMaxTOU_P 技能的韧性值上限加成百分比（%） Declaration public int BonusMaxTOU_P { get; set; } Property Value Type Description System.Int32 BonusRES 技能的物理抗性加成值（%） Declaration public float BonusRES { get; set; } Property Value Type Description System.Single BonusSPD 技能的速度加成值 Declaration public float BonusSPD { get; set; } Property Value Type Description System.Single BonusSPD_P 技能的速度加成百分比（%） Declaration public int BonusSPD_P { get; set; } Property Value Type Description System.Int32 Config 技能的基础配置。 Declaration public SkillsConfigItem Config { get; } Property Value Type Description SkillsConfigItem DisableAttack 技能是否禁用攻击 Declaration public bool DisableAttack { get; set; } Property Value Type Description System.Boolean DisableMove 技能是否禁用移动 Declaration public bool DisableMove { get; set; } Property Value Type Description System.Boolean EventScript 事件脚本。 Declaration public BaseEvent<Skill> EventScript { get; } Property Value Type Description BaseEvent < Skill > Owner 技能的所有者。 Declaration public Unit Owner { get; set; } Property Value Type Description Unit Methods AddListener() Declaration public void AddListener() AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Destroy() Declaration public void Destroy() GetFloat(Int32) 获得float参数。 Declaration public float GetFloat(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.Single 值 GetInt(Int32) 获得int参数。 Declaration public int GetInt(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.Int32 值 GetString(Int32) 获得string参数。 Declaration public string GetString(int index) Parameters Type Name Description System.Int32 index 索引 Returns Type Description System.String 值 Init() Declaration public void Init() SetFloat(Int32, Single) 设置float参数。 Declaration public void SetFloat(int index, float value) Parameters Type Name Description System.Int32 index 索引 System.Single value 值 SetInt(Int32, Int32) 设置int参数。 Declaration public void SetInt(int index, int value) Parameters Type Name Description System.Int32 index 索引 System.Int32 value 值 SetString(Int32, String) 设置string参数。 Declaration public void SetString(int index, string value) Parameters Type Name Description System.Int32 index 索引 System.String value 值"
  },
  "api/Global.SkillComboItem.html": {
    "href": "api/Global.SkillComboItem.html",
    "title": "Class SkillComboItem | 塔防游戏API文档",
    "keywords": "Class SkillComboItem 处理技能连段项目的类。 Inheritance System.Object SkillComboItem Implements IPointerClickHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillComboItem : MonoBehaviour Fields comboText Declaration public TextMeshProUGUI comboText Field Value Type Description TextMeshProUGUI icon Declaration public Image icon Field Value Type Description Image titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Properties TargetComboInfo Declaration public Player.ComboInfo TargetComboInfo { get; set; } Property Value Type Description Player.ComboInfo Methods OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Refresh() Declaration public void Refresh() Events OnPointerClickEvent Declaration public event UnityAction<PointerEventData> OnPointerClickEvent Event Type Type Description UnityAction < PointerEventData > Implements IPointerClickHandler"
  },
  "api/Global.SkillComboView.html": {
    "href": "api/Global.SkillComboView.html",
    "title": "Class SkillComboView | 塔防游戏API文档",
    "keywords": "Class SkillComboView 处理技能连段的视图。 Inheritance System.Object BaseView SkillComboView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillComboView : BaseView Fields content1 Declaration public Transform content1 Field Value Type Description Transform content2 Declaration public Transform content2 Field Value Type Description Transform content3 Declaration public Transform content3 Field Value Type Description Transform skillComboItemPrefab Declaration public SkillComboItem skillComboItemPrefab Field Value Type Description SkillComboItem titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI unitSkillItemPrefab Declaration public UnitSkillItem unitSkillItemPrefab Field Value Type Description UnitSkillItem Methods CheckAndClose() Declaration public void CheckAndClose() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.SkillController.html": {
    "href": "api/Global.SkillController.html",
    "title": "Class SkillController | 塔防游戏API文档",
    "keywords": "Class SkillController 控制技能行为的类。 Inheritance System.Object SkillController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillController : MonoBehaviour Fields animator Declaration public Animator animator Field Value Type Description Animator rb Declaration public Rigidbody2D rb Field Value Type Description Rigidbody2D unitSource Declaration public Transform unitSource Field Value Type Description Transform user Declaration public UnitController user Field Value Type Description UnitController userBinding Declaration public bool userBinding Field Value Type Description System.Boolean Properties Config Declaration public SkillsConfigItem Config { get; } Property Value Type Description SkillsConfigItem Data Declaration public Skill Data { get; set; } Property Value Type Description Skill Direction Declaration public Vector2 Direction { get; set; } Property Value Type Description Vector2 Duration Declaration public float Duration { get; set; } Property Value Type Description System.Single MoveSpeed Declaration public float MoveSpeed { get; set; } Property Value Type Description System.Single"
  },
  "api/Global.SkillEvent000.html": {
    "href": "api/Global.SkillEvent000.html",
    "title": "Class SkillEvent000 | 塔防游戏API文档",
    "keywords": "Class SkillEvent000 Inheritance System.Object BaseEvent < Skill > SkillEvent000 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent000 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent001.html": {
    "href": "api/Global.SkillEvent001.html",
    "title": "Class SkillEvent001 | 塔防游戏API文档",
    "keywords": "Class SkillEvent001 Inheritance System.Object BaseEvent < Skill > SkillEvent001 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent001 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent002.html": {
    "href": "api/Global.SkillEvent002.html",
    "title": "Class SkillEvent002 | 塔防游戏API文档",
    "keywords": "Class SkillEvent002 Inheritance System.Object BaseEvent < Skill > SkillEvent002 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent002 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent003.html": {
    "href": "api/Global.SkillEvent003.html",
    "title": "Class SkillEvent003 | 塔防游戏API文档",
    "keywords": "Class SkillEvent003 Inheritance System.Object BaseEvent < Skill > SkillEvent003 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent003 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent004.html": {
    "href": "api/Global.SkillEvent004.html",
    "title": "Class SkillEvent004 | 塔防游戏API文档",
    "keywords": "Class SkillEvent004 Inheritance System.Object BaseEvent < Skill > SkillEvent004 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent004 : BaseEvent<Skill> Fields triggerEffect1 Declaration public Transform triggerEffect1 Field Value Type Description Transform triggerEffect2 Declaration public Transform triggerEffect2 Field Value Type Description Transform Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent005.html": {
    "href": "api/Global.SkillEvent005.html",
    "title": "Class SkillEvent005 | 塔防游戏API文档",
    "keywords": "Class SkillEvent005 Inheritance System.Object BaseEvent < Skill > SkillEvent005 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent005 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent006.html": {
    "href": "api/Global.SkillEvent006.html",
    "title": "Class SkillEvent006 | 塔防游戏API文档",
    "keywords": "Class SkillEvent006 Inheritance System.Object BaseEvent < Skill > SkillEvent006 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent006 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillEvent007.html": {
    "href": "api/Global.SkillEvent007.html",
    "title": "Class SkillEvent007 | 塔防游戏API文档",
    "keywords": "Class SkillEvent007 Inheritance System.Object BaseEvent < Skill > SkillEvent007 Inherited Members BaseEvent<Skill>.Owner BaseEvent<Skill>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillEvent007 : BaseEvent<Skill> Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Skill>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Skill>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Skill>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Skill>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Skill>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Skill>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Skill>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Skill>.OnUnitInit(Unit)"
  },
  "api/Global.SkillMoveType.html": {
    "href": "api/Global.SkillMoveType.html",
    "title": "Enum SkillMoveType | 塔防游戏API文档",
    "keywords": "Enum SkillMoveType 技能移动类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum SkillMoveType Fields Name Description Bind 绑定 Directional 发射 Fixed 固定 Follow 跟随"
  },
  "api/Global.SkillsConfig.html": {
    "href": "api/Global.SkillsConfig.html",
    "title": "Class SkillsConfig | 塔防游戏API文档",
    "keywords": "Class SkillsConfig 技能配置列表。 Inheritance System.Object BaseConfigTable < SkillsConfigItem > SkillsConfig Inherited Members BaseConfigTable<SkillsConfigItem>.tabName BaseConfigTable<SkillsConfigItem>.version BaseConfigTable<SkillsConfigItem>.enableConsole BaseConfigTable<SkillsConfigItem>.configList BaseConfigTable<SkillsConfigItem>.Item[Int32] BaseConfigTable<SkillsConfigItem>.Item[String] BaseConfigTable<SkillsConfigItem>.GetConfigID(SkillsConfigItem) BaseConfigTable<SkillsConfigItem>.ConfigCount BaseConfigTable<SkillsConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SkillsConfig : BaseConfigTable<SkillsConfigItem>"
  },
  "api/Global.SkillsConfigItem.html": {
    "href": "api/Global.SkillsConfigItem.html",
    "title": "Class SkillsConfigItem | 塔防游戏API文档",
    "keywords": "Class SkillsConfigItem 技能配置数据。 Inheritance System.Object BaseConfigItem SkillsConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class SkillsConfigItem : BaseConfigItem Fields allowMultipleAnimations 允许创建多个动画 若设置此项，建议把持续时间调整为0以上或在动画中通过事件销毁，否则会很消耗性能 Declaration public bool allowMultipleAnimations Field Value Type Description System.Boolean bonusATK 攻击力加成值 Declaration public int bonusATK Field Value Type Description System.Int32 bonusATK_P 攻击力加成百分比（%） Declaration public int bonusATK_P Field Value Type Description System.Int32 bonusDashRange 冲刺幅度加成（%） Declaration public int bonusDashRange Field Value Type Description System.Int32 bonusDashRange_P 冲刺幅度加成百分比（%） Declaration public int bonusDashRange_P Field Value Type Description System.Int32 bonusDEF 物理防御力加成值 Declaration public int bonusDEF Field Value Type Description System.Int32 bonusDEF_P 物理防御力加成百分比（%） Declaration public int bonusDEF_P Field Value Type Description System.Int32 bonusEDF 能量防御力加成值 Declaration public int bonusEDF Field Value Type Description System.Int32 bonusEDF_P 能量防御力加成百分比（%） Declaration public int bonusEDF_P Field Value Type Description System.Int32 bonusERS 能量抗性加成值（%） Declaration public float bonusERS Field Value Type Description System.Single bonusMaxHP 生命值上限加成值 Declaration public int bonusMaxHP Field Value Type Description System.Int32 bonusMaxHP_P 生命值上限加成百分比（%） Declaration public int bonusMaxHP_P Field Value Type Description System.Int32 bonusMaxTOU 韧性值上限加成值 Declaration public int bonusMaxTOU Field Value Type Description System.Int32 bonusMaxTOU_P 韧性值上限加成百分比（%） Declaration public int bonusMaxTOU_P Field Value Type Description System.Int32 bonusRES 物理抗性加成值（%） Declaration public float bonusRES Field Value Type Description System.Single bonusSPD 速度加成值 Declaration public float bonusSPD Field Value Type Description System.Single bonusSPD_P 速度加成百分比（%） Declaration public int bonusSPD_P Field Value Type Description System.Int32 canBeUsed 是否可以主动使用 Declaration public bool canBeUsed Field Value Type Description System.Boolean controllerPrefab Declaration public SkillController controllerPrefab Field Value Type Description SkillController disableAttack Declaration public bool disableAttack Field Value Type Description System.Boolean disableMove 禁用移动 Declaration public bool disableMove Field Value Type Description System.Boolean duration 持续时间（秒）（0代表无限时间） Declaration public float duration Field Value Type Description System.Single eventScript 事件脚本 Declaration public BaseEvent<Skill> eventScript Field Value Type Description BaseEvent < Skill > hideInMenu 是否在菜单中隐藏 Declaration public bool hideInMenu Field Value Type Description System.Boolean iconList 图标列表 按照连段顺序排列 Declaration public List<Sprite> iconList Field Value Type Description System.Collections.Generic.List < Sprite > moveSpeed 移动速度 Declaration public float moveSpeed Field Value Type Description System.Single moveType 移动类型 Declaration public SkillMoveType moveType Field Value Type Description SkillMoveType Methods CreateController(Skill, UnitController, Transform) 创建控制器。 与单位控制器不同的是，技能控制器和技能数据并非强绑定关系，一个技能数据可以创建多个控制器。 Declaration public SkillController CreateController(Skill skill, UnitController user, Transform parent = null) Parameters Type Name Description Skill skill 技能 UnitController user 使用者 Transform parent 父对象 Returns Type Description SkillController 控制器"
  },
  "api/Global.State.html": {
    "href": "api/Global.State.html",
    "title": "Class State | 塔防游戏API文档",
    "keywords": "Class State 处理状态的类。 Inheritance System.Object BaseUserData ObservableUserData < State > State Inherited Members ObservableUserData<State>.OnDataChanged ObservableUserData<State>.TriggerDataChanged(State) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class State : ObservableUserData<State> Constructors State(Int32) Declaration public State(int configID) Parameters Type Name Description System.Int32 configID Fields configID Declaration public readonly int configID Field Value Type Description System.Int32 Properties BonusATK 状态的攻击力加成值 Declaration public int BonusATK { get; set; } Property Value Type Description System.Int32 BonusATK_P 状态的攻击力加成百分比（%） Declaration public int BonusATK_P { get; set; } Property Value Type Description System.Int32 BonusDashRange 状态的冲刺幅度加成（%） Declaration public int BonusDashRange { get; set; } Property Value Type Description System.Int32 BonusDashRange_P 状态的冲刺幅度加成百分比（%） Declaration public int BonusDashRange_P { get; set; } Property Value Type Description System.Int32 BonusDEF 状态的物理防御力加成值 Declaration public int BonusDEF { get; set; } Property Value Type Description System.Int32 BonusDEF_P 状态的物理防御力加成百分比（%） Declaration public int BonusDEF_P { get; set; } Property Value Type Description System.Int32 BonusEDF 状态的能量防御力加成值 Declaration public int BonusEDF { get; set; } Property Value Type Description System.Int32 BonusEDF_P 状态的能量防御力加成百分比（%） Declaration public int BonusEDF_P { get; set; } Property Value Type Description System.Int32 BonusERS 状态的能量抗性加成值（%） Declaration public float BonusERS { get; set; } Property Value Type Description System.Single BonusMaxHP 状态的生命值上限加成值 Declaration public int BonusMaxHP { get; set; } Property Value Type Description System.Int32 BonusMaxHP_P 状态的生命值上限加成百分比（%） Declaration public int BonusMaxHP_P { get; set; } Property Value Type Description System.Int32 BonusMaxTOU 状态的韧性值上限加成值 Declaration public int BonusMaxTOU { get; set; } Property Value Type Description System.Int32 BonusMaxTOU_P 状态的韧性值上限加成百分比（%） Declaration public int BonusMaxTOU_P { get; set; } Property Value Type Description System.Int32 BonusRES 状态的物理抗性加成值（%） Declaration public float BonusRES { get; set; } Property Value Type Description System.Single BonusSPD 状态的速度加成值 Declaration public float BonusSPD { get; set; } Property Value Type Description System.Single BonusSPD_P 状态的速度加成百分比（%） Declaration public int BonusSPD_P { get; set; } Property Value Type Description System.Int32 Config 状态的基础配置。 Declaration public StatesConfigItem Config { get; } Property Value Type Description StatesConfigItem DisableAttack 状态是否禁用攻击 Declaration public bool DisableAttack { get; set; } Property Value Type Description System.Boolean DisableMove 状态是否禁用移动 Declaration public bool DisableMove { get; set; } Property Value Type Description System.Boolean Duration 状态的持续时间（秒）。 Declaration public float Duration { get; set; } Property Value Type Description System.Single EnergyShield 状态提供的能量护盾。 Declaration public int EnergyShield { get; set; } Property Value Type Description System.Int32 EventScript 事件脚本。 Declaration public BaseEvent<State> EventScript { get; } Property Value Type Description BaseEvent < State > IsEnergyAttackImmune 状态是否免疫能量攻击 Declaration public bool IsEnergyAttackImmune { get; set; } Property Value Type Description System.Boolean IsPhysicalAttackImmune 状态是否免疫物理攻击 Declaration public bool IsPhysicalAttackImmune { get; set; } Property Value Type Description System.Boolean Owner 状态的所有者。 Declaration public Unit Owner { get; set; } Property Value Type Description Unit PhysicalShield 状态提供的物理护盾。 Declaration public int PhysicalShield { get; set; } Property Value Type Description System.Int32 UniversalShield 状态提供的全能护盾。 Declaration public int UniversalShield { get; set; } Property Value Type Description System.Int32 Methods AddListener() Declaration public void AddListener() AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Destroy() Declaration public void Destroy() Init() Declaration public void Init()"
  },
  "api/Global.StateEvent002.html": {
    "href": "api/Global.StateEvent002.html",
    "title": "Class StateEvent002 | 塔防游戏API文档",
    "keywords": "Class StateEvent002 Inheritance System.Object BaseEvent < State > StateEvent002 Inherited Members BaseEvent<State>.Owner BaseEvent<State>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StateEvent002 : BaseEvent<State> Fields effect1Prefab Declaration public SpriteRenderer effect1Prefab Field Value Type Description SpriteRenderer effect2Prefab Declaration public TrailRenderer effect2Prefab Field Value Type Description TrailRenderer Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<State>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<State>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<State>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<State>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<State>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<State>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<State>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<State>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<State>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<State>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<State>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<State>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<State>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<State>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<State>.OnUnitInit(Unit)"
  },
  "api/Global.StatesConfig.html": {
    "href": "api/Global.StatesConfig.html",
    "title": "Class StatesConfig | 塔防游戏API文档",
    "keywords": "Class StatesConfig 状态配置列表。 Inheritance System.Object BaseConfigTable < StatesConfigItem > StatesConfig Inherited Members BaseConfigTable<StatesConfigItem>.tabName BaseConfigTable<StatesConfigItem>.version BaseConfigTable<StatesConfigItem>.enableConsole BaseConfigTable<StatesConfigItem>.configList BaseConfigTable<StatesConfigItem>.Item[Int32] BaseConfigTable<StatesConfigItem>.Item[String] BaseConfigTable<StatesConfigItem>.GetConfigID(StatesConfigItem) BaseConfigTable<StatesConfigItem>.ConfigCount BaseConfigTable<StatesConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class StatesConfig : BaseConfigTable<StatesConfigItem>"
  },
  "api/Global.StatesConfigItem.html": {
    "href": "api/Global.StatesConfigItem.html",
    "title": "Class StatesConfigItem | 塔防游戏API文档",
    "keywords": "Class StatesConfigItem 状态配置数据。 Inheritance System.Object BaseConfigItem StatesConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class StatesConfigItem : BaseConfigItem Fields allowMultiple 允许添加多个相同状态 Declaration public bool allowMultiple Field Value Type Description System.Boolean bonusATK 攻击力加成值 Declaration public int bonusATK Field Value Type Description System.Int32 bonusATK_P 攻击力加成百分比（%） Declaration public int bonusATK_P Field Value Type Description System.Int32 bonusDashRange 冲刺幅度加成（%） Declaration public int bonusDashRange Field Value Type Description System.Int32 bonusDashRange_P 冲刺幅度加成百分比（%） Declaration public int bonusDashRange_P Field Value Type Description System.Int32 bonusDEF 物理防御力加成值 Declaration public int bonusDEF Field Value Type Description System.Int32 bonusDEF_P 物理防御力加成百分比（%） Declaration public int bonusDEF_P Field Value Type Description System.Int32 bonusEDF 能量防御力加成值 Declaration public int bonusEDF Field Value Type Description System.Int32 bonusEDF_P 能量防御力加成百分比（%） Declaration public int bonusEDF_P Field Value Type Description System.Int32 bonusERS 能量抗性加成值（%） Declaration public float bonusERS Field Value Type Description System.Single bonusMaxHP 生命值上限加成值 Declaration public int bonusMaxHP Field Value Type Description System.Int32 bonusMaxHP_P 生命值上限加成百分比（%） Declaration public int bonusMaxHP_P Field Value Type Description System.Int32 bonusMaxTOU 韧性值上限加成值 Declaration public int bonusMaxTOU Field Value Type Description System.Int32 bonusMaxTOU_P 韧性值上限加成百分比（%） Declaration public int bonusMaxTOU_P Field Value Type Description System.Int32 bonusRES 物理抗性加成值（%） Declaration public float bonusRES Field Value Type Description System.Single bonusSPD 速度加成值 Declaration public float bonusSPD Field Value Type Description System.Single bonusSPD_P 速度加成百分比（%） Declaration public int bonusSPD_P Field Value Type Description System.Int32 disableAttack 禁用攻击 Declaration public bool disableAttack Field Value Type Description System.Boolean disableMove 禁用移动 Declaration public bool disableMove Field Value Type Description System.Boolean duration 持续时间（秒）（0代表无限时间） Declaration public float duration Field Value Type Description System.Single energyShield 能量护盾 Declaration public int energyShield Field Value Type Description System.Int32 eventScript 事件脚本 Declaration public BaseEvent<State> eventScript Field Value Type Description BaseEvent < State > hideInMenu 是否在菜单中隐藏 Declaration public bool hideInMenu Field Value Type Description System.Boolean isEnergyAttackImmune 免疫能量攻击 Declaration public bool isEnergyAttackImmune Field Value Type Description System.Boolean isPhysicalAttackImmune 免疫物理攻击 Declaration public bool isPhysicalAttackImmune Field Value Type Description System.Boolean overridingStateList 覆盖状态列表 本状态无法与下列状态共存，下列状态会被移除且本状态保留 Declaration public List<ConfigItemReference<StatesConfigItem>> overridingStateList Field Value Type Description System.Collections.Generic.List < ConfigItemReference < StatesConfigItem >> physicalShield 物理护盾 Declaration public int physicalShield Field Value Type Description System.Int32 universalShield 全能护盾 Declaration public int universalShield Field Value Type Description System.Int32"
  },
  "api/Global.SystemData.html": {
    "href": "api/Global.SystemData.html",
    "title": "Class SystemData | 塔防游戏API文档",
    "keywords": "Class SystemData 处理系统设置的类。 Inheritance System.Object BaseUserData ObservableUserData < SystemData > SystemData Inherited Members ObservableUserData<SystemData>.OnDataChanged ObservableUserData<SystemData>.TriggerDataChanged(SystemData) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SystemData : ObservableUserData<SystemData> Constructors SystemData() Declaration public SystemData() Properties AutoSave 自动存档开关。 Declaration public bool AutoSave { get; set; } Property Value Type Description System.Boolean AutoSaveDuration 自动存档间隔（秒）。 Declaration public int AutoSaveDuration { get; set; } Property Value Type Description System.Int32 AutoSaveSlotList 可用自动存档的存档位列表。 Declaration public ObservableCollection<int> AutoSaveSlotList { get; } Property Value Type Description ObservableCollection < System.Int32 > BGMVolume 背景音乐音量（0-100）。 Declaration public int BGMVolume { get; set; } Property Value Type Description System.Int32 Language 语言。 Declaration public LanguageType Language { get; set; } Property Value Type Description LanguageType LastAutoSaveSlot 上一次自动存档的位置。 Declaration public int LastAutoSaveSlot { get; set; } Property Value Type Description System.Int32 MaxAutoSaveCount 最大自动存档数量。 Declaration public int MaxAutoSaveCount { get; set; } Property Value Type Description System.Int32 SaveSlotList 可用存档的存档位列表。 Declaration public ObservableCollection<int> SaveSlotList { get; } Property Value Type Description ObservableCollection < System.Int32 > SEVolume 音效音量（0-100）。 Declaration public int SEVolume { get; set; } Property Value Type Description System.Int32 Methods AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave()"
  },
  "api/Global.Test.html": {
    "href": "api/Global.Test.html",
    "title": "Class Test | 塔防游戏API文档",
    "keywords": "Class Test Inheritance System.Object Test Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Test : MonoBehaviour"
  },
  "api/Global.TitleView.html": {
    "href": "api/Global.TitleView.html",
    "title": "Class TitleView | 塔防游戏API文档",
    "keywords": "Class TitleView 处理场景TitleScene的视图。 Inheritance System.Object BaseView TitleView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TitleView : BaseView Fields loadButton Declaration public Button loadButton Field Value Type Description Button Methods ExitGame() Declaration public void ExitGame() LoadGame() Declaration public void LoadGame() OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() OpenSettingsView() Declaration public void OpenSettingsView() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh() StartGame() Declaration public void StartGame()"
  },
  "api/Global.Unit.DamagedHandler.html": {
    "href": "api/Global.Unit.DamagedHandler.html",
    "title": "Delegate Unit.DamagedHandler | 塔防游戏API文档",
    "keywords": "Delegate Unit.DamagedHandler 受到伤害等事件用委托。 Namespace : Global Assembly : cs.temp.dll.dll Syntax public delegate void DamagedHandler(Unit attacker, DamageInfo damageInfo); Parameters Type Name Description Unit attacker 攻击者 DamageInfo damageInfo 伤害信息"
  },
  "api/Global.Unit.html": {
    "href": "api/Global.Unit.html",
    "title": "Class Unit | 塔防游戏API文档",
    "keywords": "Class Unit 处理单位的类。 Inheritance System.Object BaseUserData ObservableUserData < Unit > Unit Player Inherited Members ObservableUserData<Unit>.OnDataChanged ObservableUserData<Unit>.TriggerDataChanged(Unit) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Unit : ObservableUserData<Unit> Constructors Unit(Int32) Declaration public Unit(int configID) Parameters Type Name Description System.Int32 configID Fields _basicATK Declaration protected int _basicATK Field Value Type Description System.Int32 _basicDashRange Declaration protected int _basicDashRange Field Value Type Description System.Int32 _basicDEF Declaration protected int _basicDEF Field Value Type Description System.Int32 _basicEDF Declaration protected int _basicEDF Field Value Type Description System.Int32 _basicERS Declaration protected float _basicERS Field Value Type Description System.Single _basicMaxHP Declaration protected int _basicMaxHP Field Value Type Description System.Int32 _basicMaxTOU Declaration protected int _basicMaxTOU Field Value Type Description System.Int32 _basicRES Declaration protected float _basicRES Field Value Type Description System.Single _basicSPD Declaration protected float _basicSPD Field Value Type Description System.Single _hp Declaration protected int _hp Field Value Type Description System.Int32 _itemSkillList Declaration protected List<Skill> _itemSkillList Field Value Type Description System.Collections.Generic.List < Skill > _skillList Declaration protected List<Skill> _skillList Field Value Type Description System.Collections.Generic.List < Skill > _stateList Declaration protected List<State> _stateList Field Value Type Description System.Collections.Generic.List < State > _tou Declaration protected int _tou Field Value Type Description System.Int32 configID Declaration public readonly int configID Field Value Type Description System.Int32 Properties ATK 单位的攻击力。 Declaration public int ATK { get; } Property Value Type Description System.Int32 BasicATK 单位的基础攻击力。 Declaration public int BasicATK { get; set; } Property Value Type Description System.Int32 BasicDashRange 单位的基础冲刺幅度（%）。 Declaration public int BasicDashRange { get; set; } Property Value Type Description System.Int32 BasicDEF 单位的基础物理防御力。 Declaration public int BasicDEF { get; set; } Property Value Type Description System.Int32 BasicEDF 单位的基础能量防御力。 Declaration public int BasicEDF { get; set; } Property Value Type Description System.Int32 BasicERS 单位的基础能量抗性（%）。 Declaration public float BasicERS { get; set; } Property Value Type Description System.Single BasicMaxHP 单位的基础生命值上限。 Declaration public int BasicMaxHP { get; set; } Property Value Type Description System.Int32 BasicMaxTOU 单位的基础韧性值上限。 Declaration public int BasicMaxTOU { get; set; } Property Value Type Description System.Int32 BasicRES 单位的基础物理抗性（%）。 Declaration public float BasicRES { get; set; } Property Value Type Description System.Single BasicSPD 单位的基础速度（格每秒）。 Declaration public float BasicSPD { get; set; } Property Value Type Description System.Single BonusATK 单位的攻击力加成。 Declaration public int BonusATK { get; } Property Value Type Description System.Int32 BonusATK_P 单位的攻击力加成百分比（%）。 Declaration public int BonusATK_P { get; } Property Value Type Description System.Int32 BonusDashRange 单位的冲刺幅度加成（%）。 Declaration public int BonusDashRange { get; } Property Value Type Description System.Int32 BonusDashRange_P 单位的冲刺幅度加成百分比（%）。 Declaration public int BonusDashRange_P { get; } Property Value Type Description System.Int32 BonusDEF 单位的物理防御力加成。 Declaration public int BonusDEF { get; } Property Value Type Description System.Int32 BonusDEF_P 单位的物理防御力加成百分比（%）。 Declaration public int BonusDEF_P { get; } Property Value Type Description System.Int32 BonusEDF 单位的能量防御力加成。 Declaration public int BonusEDF { get; } Property Value Type Description System.Int32 BonusEDF_P 单位的能量防御力加成百分比（%）。 Declaration public int BonusEDF_P { get; } Property Value Type Description System.Int32 BonusERS 单位的能量抗性加成（%）。 Declaration public float BonusERS { get; } Property Value Type Description System.Single BonusMaxHP 单位的生命值上限加成。 Declaration public int BonusMaxHP { get; } Property Value Type Description System.Int32 BonusMaxHP_P 单位的生命值上限加成百分比（%）。 Declaration public int BonusMaxHP_P { get; } Property Value Type Description System.Int32 BonusMaxTOU 单位的生命值上限加成。 Declaration public int BonusMaxTOU { get; } Property Value Type Description System.Int32 BonusMaxTOU_P 单位的生命值上限加成百分比（%）。 Declaration public int BonusMaxTOU_P { get; } Property Value Type Description System.Int32 BonusRES 单位的物理抗性加成（%）。 Declaration public float BonusRES { get; } Property Value Type Description System.Single BonusSPD 单位的速度加成（格每秒）。 Declaration public float BonusSPD { get; } Property Value Type Description System.Single BonusSPD_P 单位的速度加成百分比（%）。 Declaration public int BonusSPD_P { get; } Property Value Type Description System.Int32 Config 单位的基础配置。 Declaration public UnitsConfigItem Config { get; } Property Value Type Description UnitsConfigItem Controller 单位的控制器。 Declaration public UnitController Controller { get; set; } Property Value Type Description UnitController DashRange 单位的冲刺幅度（%）。 Declaration public int DashRange { get; } Property Value Type Description System.Int32 DEF 单位的物理防御力。 Declaration public int DEF { get; } Property Value Type Description System.Int32 EDF 单位的能量防御力。 Declaration public int EDF { get; } Property Value Type Description System.Int32 EnergyShield 单位的能量护盾总量。 Declaration public int EnergyShield { get; } Property Value Type Description System.Int32 ERS 单位的能量抗性（%）。 Declaration public float ERS { get; } Property Value Type Description System.Single EventScript 事件脚本。 Declaration public UnitEvent EventScript { get; } Property Value Type Description UnitEvent HP 单位的生命值。 Declaration public int HP { get; set; } Property Value Type Description System.Int32 IsAttackDisabled 攻击是否被禁用。 Declaration public bool IsAttackDisabled { get; } Property Value Type Description System.Boolean IsMoveDisabled 移动是否被禁用。 Declaration public bool IsMoveDisabled { get; } Property Value Type Description System.Boolean IsPlayer 是否为玩家。 Declaration public bool IsPlayer { get; } Property Value Type Description System.Boolean MaxHP 单位的生命值上限。 Declaration public int MaxHP { get; } Property Value Type Description System.Int32 MaxTOU 单位的韧性值上限。 Declaration public int MaxTOU { get; } Property Value Type Description System.Int32 PhysicalShield 单位的物理护盾总量。 Declaration public int PhysicalShield { get; } Property Value Type Description System.Int32 RES 单位的物理抗性（%）。 Declaration public float RES { get; } Property Value Type Description System.Single SPD 单位的速度（格每秒）。 Declaration public float SPD { get; } Property Value Type Description System.Single TOU 单位的韧性值。 Declaration public int TOU { get; set; } Property Value Type Description System.Int32 UniversalShield 单位的全能护盾总量。 Declaration public int UniversalShield { get; } Property Value Type Description System.Int32 Methods AddItemSkill(Skill) 添加道具技能。 Declaration public void AddItemSkill(Skill skill) Parameters Type Name Description Skill skill 道具技能 AddListener() Declaration public void AddListener() AddState(State) 添加状态。 Declaration public void AddState(State state) Parameters Type Name Description State state 状态 AfterLoad() Declaration public override void AfterLoad() Overrides BaseUserData.AfterLoad() BeforeSave() Declaration public override void BeforeSave() Overrides BaseUserData.BeforeSave() Damage(Unit, DamageInfo) 受到伤害。 Declaration public void Damage(Unit attacker, DamageInfo damageInfo) Parameters Type Name Description Unit attacker 攻击者 DamageInfo damageInfo 伤害信息 Destroy() Declaration public void Destroy() ForgetSkill(Skill) 遗忘技能。 Declaration public virtual bool ForgetSkill(Skill skill) Parameters Type Name Description Skill skill 技能 Returns Type Description System.Boolean 单位是否带有此技能 GetItemSkills() 获得单位的道具技能列表。 Declaration public virtual ReadOnlyCollection<Skill> GetItemSkills() Returns Type Description ReadOnlyCollection < Skill > 道具技能列表 GetSkills() 获得单位的技能列表。 Declaration public virtual ReadOnlyCollection<Skill> GetSkills() Returns Type Description ReadOnlyCollection < Skill > 技能列表 GetStates() 获得单位的状态列表。 Declaration public ReadOnlyCollection<State> GetStates() Returns Type Description ReadOnlyCollection < State > 状态列表 Init() Declaration public virtual void Init() LearnSkill(Skill) 习得技能。 Declaration public void LearnSkill(Skill skill) Parameters Type Name Description Skill skill 技能 RemoveItemSkill(Skill) 移除道具技能。 Declaration public bool RemoveItemSkill(Skill skill) Parameters Type Name Description Skill skill 道具技能 Returns Type Description System.Boolean 单位是否带有此道具技能 RemoveState(State) 移除状态。 Declaration public bool RemoveState(State state) Parameters Type Name Description State state 状态 Returns Type Description System.Boolean 单位是否带有此状态 Events BeforeAttack 受到攻击事件。 Declaration public event Unit.DamagedHandler BeforeAttack Event Type Type Description Unit.DamagedHandler BeforeDamage 受到伤害事件。 Declaration public event Unit.DamagedHandler BeforeDamage Event Type Type Description Unit.DamagedHandler OnDeath 死亡事件。 Declaration public event Unit.DamagedHandler OnDeath Event Type Type Description Unit.DamagedHandler"
  },
  "api/Global.UnitController.html": {
    "href": "api/Global.UnitController.html",
    "title": "Class UnitController | 塔防游戏API文档",
    "keywords": "Class UnitController 控制单位行为的类。 Inheritance System.Object UnitController PlayerController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitController : MonoBehaviour Fields animator Declaration public Animator animator Field Value Type Description Animator autoSorting Declaration public AutoSorting2D autoSorting Field Value Type Description AutoSorting2D chargeBar Declaration public Image chargeBar Field Value Type Description Image destroySpriteRenderer Declaration public SpriteRenderer destroySpriteRenderer Field Value Type Description SpriteRenderer healthBar Declaration public Image healthBar Field Value Type Description Image movement Declaration public Vector2 movement Field Value Type Description Vector2 overrideMovement Declaration public Vector2 overrideMovement Field Value Type Description Vector2 rb Declaration public Rigidbody2D rb Field Value Type Description Rigidbody2D skillBindLocalPosition Declaration protected Vector3 skillBindLocalPosition Field Value Type Description Vector3 skillControllerList Declaration public List<SkillController> skillControllerList Field Value Type Description System.Collections.Generic.List < SkillController > spriteRenderer Declaration public SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer statePanel Declaration public Image statePanel Field Value Type Description Image Properties Config Declaration public UnitsConfigItem Config { get; } Property Value Type Description UnitsConfigItem Data Declaration public Unit Data { get; set; } Property Value Type Description Unit Methods Awake() Declaration protected virtual void Awake() FixedUpdate() Declaration protected virtual void FixedUpdate() GetSkillController(Skill) Declaration protected SkillController GetSkillController(Skill skill) Parameters Type Name Description Skill skill Returns Type Description SkillController OnDataChanged(Unit) Declaration protected virtual void OnDataChanged(Unit userData) Parameters Type Name Description Unit userData OnDestroy() Declaration protected virtual void OnDestroy() Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update() UseSkill(Skill, String, Int32) 使用技能。 Declaration public SkillController UseSkill(Skill skill, string variantName = \"\", int combo = 0) Parameters Type Name Description Skill skill 技能 System.String variantName 变体名称（Variant开头），若名称无效则随机释放 System.Int32 combo 当前连段，仅对主角有效 Returns Type Description SkillController 技能控制器"
  },
  "api/Global.UnitEvent.html": {
    "href": "api/Global.UnitEvent.html",
    "title": "Class UnitEvent | 塔防游戏API文档",
    "keywords": "Class UnitEvent Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent000 UnitEvent002 UnitEvent007 UnitEvent010 Inherited Members BaseEvent<Unit>.Owner BaseEvent<Unit>.OnUnitInit(Unit) BaseEvent<Unit>.OnUnitDash(UnitController) BaseEvent<Unit>.AfterUnitDash(UnitController) BaseEvent<Unit>.OnSkillLearn(Skill) BaseEvent<Unit>.OnSkillForget(Skill) BaseEvent<Unit>.OnSkillUse(SkillController) BaseEvent<Unit>.OnSkillTriggered(SkillController, Unit) BaseEvent<Unit>.OnSkillCustomTriggered(SkillController, String) BaseEvent<Unit>.OnStateGain(State) BaseEvent<Unit>.OnStateLost(State) BaseEvent<Unit>.OnStateUpdate(State) BaseEvent<Unit>.BeforeAttack(Unit, Unit, DamageInfo) BaseEvent<Unit>.BeforeDamage(Unit, Unit, DamageInfo) BaseEvent<Unit>.BeforeDeath(Unit, Unit, DamageInfo) BaseEvent<Unit>.OnDeath(Unit) BaseEvent<Unit>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public abstract class UnitEvent : BaseEvent<Unit> Methods Dash(UnitController) Declaration public virtual IEnumerator Dash(UnitController unitController) Parameters Type Name Description UnitController unitController Returns Type Description System.Collections.IEnumerator"
  },
  "api/Global.UnitEvent000.html": {
    "href": "api/Global.UnitEvent000.html",
    "title": "Class UnitEvent000 | 塔防游戏API文档",
    "keywords": "Class UnitEvent000 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent000 Inherited Members UnitEvent.Dash(UnitController) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent000 : UnitEvent Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Unit>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Unit>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Unit>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnUnitInit(Unit)"
  },
  "api/Global.UnitEvent002.html": {
    "href": "api/Global.UnitEvent002.html",
    "title": "Class UnitEvent002 | 塔防游戏API文档",
    "keywords": "Class UnitEvent002 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent002 Inherited Members UnitEvent.Dash(UnitController) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent002 : UnitEvent Fields triggerEffect Declaration public Transform triggerEffect Field Value Type Description Transform Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Unit>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Unit>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Unit>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnUnitInit(Unit)"
  },
  "api/Global.UnitEvent007.html": {
    "href": "api/Global.UnitEvent007.html",
    "title": "Class UnitEvent007 | 塔防游戏API文档",
    "keywords": "Class UnitEvent007 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent007 Inherited Members UnitEvent.Dash(UnitController) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent007 : UnitEvent Fields triggerEffect Declaration public Transform triggerEffect Field Value Type Description Transform Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Unit>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Unit>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Unit>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnUnitInit(Unit)"
  },
  "api/Global.UnitEvent010.html": {
    "href": "api/Global.UnitEvent010.html",
    "title": "Class UnitEvent010 | 塔防游戏API文档",
    "keywords": "Class UnitEvent010 Inheritance System.Object BaseEvent < Unit > UnitEvent UnitEvent010 Inherited Members UnitEvent.Dash(UnitController) BaseEvent<Unit>.Owner BaseEvent<Unit>.CreateAfterimage(SpriteRenderer) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitEvent010 : UnitEvent Methods AfterUnitDash(UnitController) Declaration public override void AfterUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.AfterUnitDash(UnitController) BeforeAttack(Unit, Unit, DamageInfo) Declaration public override void BeforeAttack(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeAttack(Unit, Unit, DamageInfo) BeforeDamage(Unit, Unit, DamageInfo) Declaration public override void BeforeDamage(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDamage(Unit, Unit, DamageInfo) BeforeDeath(Unit, Unit, DamageInfo) Declaration public override void BeforeDeath(Unit attacker, Unit target, DamageInfo damageInfo) Parameters Type Name Description Unit attacker Unit target DamageInfo damageInfo Overrides BaseEvent<Unit>.BeforeDeath(Unit, Unit, DamageInfo) OnDeath(Unit) Declaration public override void OnDeath(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnDeath(Unit) OnSkillCustomTriggered(SkillController, String) Declaration public override void OnSkillCustomTriggered(SkillController skillController, string arg) Parameters Type Name Description SkillController skillController System.String arg Overrides BaseEvent<Unit>.OnSkillCustomTriggered(SkillController, System.String) OnSkillForget(Skill) Declaration public override void OnSkillForget(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillForget(Skill) OnSkillLearn(Skill) Declaration public override void OnSkillLearn(Skill skill) Parameters Type Name Description Skill skill Overrides BaseEvent<Unit>.OnSkillLearn(Skill) OnSkillTriggered(SkillController, Unit) Declaration public override void OnSkillTriggered(SkillController skillController, Unit target) Parameters Type Name Description SkillController skillController Unit target Overrides BaseEvent<Unit>.OnSkillTriggered(SkillController, Unit) OnSkillUse(SkillController) Declaration public override void OnSkillUse(SkillController skillController) Parameters Type Name Description SkillController skillController Overrides BaseEvent<Unit>.OnSkillUse(SkillController) OnStateGain(State) Declaration public override void OnStateGain(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateGain(State) OnStateLost(State) Declaration public override void OnStateLost(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateLost(State) OnStateUpdate(State) Declaration public override void OnStateUpdate(State state) Parameters Type Name Description State state Overrides BaseEvent<Unit>.OnStateUpdate(State) OnUnitDash(UnitController) Declaration public override void OnUnitDash(UnitController unitController) Parameters Type Name Description UnitController unitController Overrides BaseEvent<Unit>.OnUnitDash(UnitController) OnUnitInit(Unit) Declaration public override void OnUnitInit(Unit unit) Parameters Type Name Description Unit unit Overrides BaseEvent<Unit>.OnUnitInit(Unit)"
  },
  "api/Global.UnitInfoView.html": {
    "href": "api/Global.UnitInfoView.html",
    "title": "Class UnitInfoView | 塔防游戏API文档",
    "keywords": "Class UnitInfoView 处理单位信息的视图。 Inheritance System.Object BaseView UnitInfoView Inherited Members BaseView.layer BaseView.onOpen BaseView.onClose BaseView.onRefresh BaseView.allButtons BaseView.OnViewOpen BaseView.OnViewClose BaseView.OnButtonClick BaseView.IsAnyViewOpen BaseView.FloatingViews BaseView.GetViewInLayer(Int32) BaseView.Start() BaseView.OnEnable() BaseView.OnDisable() BaseView.Open() BaseView.Close() BaseView.IsOpen BaseView.Refresh() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitInfoView : BaseView Fields atkText Declaration public TextMeshProUGUI atkText Field Value Type Description TextMeshProUGUI dashRangeText Declaration public TextMeshProUGUI dashRangeText Field Value Type Description TextMeshProUGUI defText Declaration public TextMeshProUGUI defText Field Value Type Description TextMeshProUGUI edfText Declaration public TextMeshProUGUI edfText Field Value Type Description TextMeshProUGUI energyShieldText Declaration public TextMeshProUGUI energyShieldText Field Value Type Description TextMeshProUGUI ersText Declaration public TextMeshProUGUI ersText Field Value Type Description TextMeshProUGUI hpText Declaration public TextMeshProUGUI hpText Field Value Type Description TextMeshProUGUI physicalShieldText Declaration public TextMeshProUGUI physicalShieldText Field Value Type Description TextMeshProUGUI resText Declaration public TextMeshProUGUI resText Field Value Type Description TextMeshProUGUI spdText Declaration public TextMeshProUGUI spdText Field Value Type Description TextMeshProUGUI touText Declaration public TextMeshProUGUI touText Field Value Type Description TextMeshProUGUI universalShieldText Declaration public TextMeshProUGUI universalShieldText Field Value Type Description TextMeshProUGUI Methods OnClose() Declaration protected override void OnClose() Overrides BaseView.OnClose() OnOpen() Declaration protected override void OnOpen() Overrides BaseView.OnOpen() RealRefresh() Declaration protected override void RealRefresh() Overrides BaseView.RealRefresh()"
  },
  "api/Global.UnitsConfig.html": {
    "href": "api/Global.UnitsConfig.html",
    "title": "Class UnitsConfig | 塔防游戏API文档",
    "keywords": "Class UnitsConfig 单位配置列表。 Inheritance System.Object BaseConfigTable < UnitsConfigItem > UnitsConfig Inherited Members BaseConfigTable<UnitsConfigItem>.tabName BaseConfigTable<UnitsConfigItem>.version BaseConfigTable<UnitsConfigItem>.enableConsole BaseConfigTable<UnitsConfigItem>.configList BaseConfigTable<UnitsConfigItem>.Item[Int32] BaseConfigTable<UnitsConfigItem>.Item[String] BaseConfigTable<UnitsConfigItem>.GetConfigID(UnitsConfigItem) BaseConfigTable<UnitsConfigItem>.ConfigCount BaseConfigTable<UnitsConfigItem>.ConfigNameList Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitsConfig : BaseConfigTable<UnitsConfigItem>"
  },
  "api/Global.UnitsConfigItem.html": {
    "href": "api/Global.UnitsConfigItem.html",
    "title": "Class UnitsConfigItem | 塔防游戏API文档",
    "keywords": "Class UnitsConfigItem 单位配置数据。 Inheritance System.Object BaseConfigItem UnitsConfigItem Inherited Members BaseConfigItem.name BaseConfigItem.description BaseConfigItem.remark Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnitsConfigItem : BaseConfigItem Fields attackDuration 攻击间隔（秒） Declaration public float attackDuration Field Value Type Description System.Single attackRadius 攻击半径（格） Declaration public float attackRadius Field Value Type Description System.Single attackType 攻击类型 Declaration public AttackType attackType Field Value Type Description AttackType damageType 伤害类型 Declaration public DamageType damageType Field Value Type Description DamageType defaultATK 默认伤害值 Declaration public int defaultATK Field Value Type Description System.Int32 defaultDashRange 冲刺幅度（%） Declaration public int defaultDashRange Field Value Type Description System.Int32 defaultMaxHP 默认最大生命值 Declaration public int defaultMaxHP Field Value Type Description System.Int32 defaultMaxTOU 默认最大韧性值 Declaration public int defaultMaxTOU Field Value Type Description System.Int32 defaultSkillList 默认技能列表 Declaration public List<ConfigItemReference<SkillsConfigItem>> defaultSkillList Field Value Type Description System.Collections.Generic.List < ConfigItemReference < SkillsConfigItem >> defaultSPD 默认速度（格每秒） Declaration public float defaultSPD Field Value Type Description System.Single eventScript 事件脚本 Declaration public UnitEvent eventScript Field Value Type Description UnitEvent faction 阵营类型 Declaration public FactionType faction Field Value Type Description FactionType isAllyTargetable 是否可被己方作为目标 Declaration public bool isAllyTargetable Field Value Type Description System.Boolean isBuildable 是否可部署 Declaration public bool isBuildable Field Value Type Description System.Boolean isEquippable 是否可装备 Declaration public bool isEquippable Field Value Type Description System.Boolean isNonAllyTargetable 是否可被非己方作为目标 Declaration public bool isNonAllyTargetable Field Value Type Description System.Boolean itemSkillList 道具技能列表 Declaration public List<ConfigItemReference<SkillsConfigItem>> itemSkillList Field Value Type Description System.Collections.Generic.List < ConfigItemReference < SkillsConfigItem >> knockbackDistance 击退距离（格）（负数代表吸引） Declaration public float knockbackDistance Field Value Type Description System.Single level 单位等级 Declaration public int level Field Value Type Description System.Int32 moveType 单位移动类型 Declaration public MoveType moveType Field Value Type Description MoveType nextLevelUnitList 下一等级单位列表 Declaration public List<ConfigItemReference<UnitsConfigItem>> nextLevelUnitList Field Value Type Description System.Collections.Generic.List < ConfigItemReference < UnitsConfigItem >> race 种族类型 Declaration public RaceType race Field Value Type Description RaceType skillSourcePrefab 技能释放主体预制体 Declaration public Transform skillSourcePrefab Field Value Type Description Transform type 单位类型 Declaration public UnitType type Field Value Type Description UnitType Methods CreateController(Transform) 创建控制器。 Declaration public UnitController CreateController(Transform parent = null) Parameters Type Name Description Transform parent 父对象 Returns Type Description UnitController 控制器 CreateController(Unit, Transform) 创建控制器。 Declaration public UnitController CreateController(Unit unit, Transform parent = null) Parameters Type Name Description Unit unit 单位 Transform parent 父对象 Returns Type Description UnitController 控制器"
  },
  "api/Global.UnitSkillItem.html": {
    "href": "api/Global.UnitSkillItem.html",
    "title": "Class UnitSkillItem | 塔防游戏API文档",
    "keywords": "Class UnitSkillItem 处理单位技能列表项目的类。 Inheritance System.Object UnitSkillItem Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UnitSkillItem : MonoBehaviour Fields content Declaration public Transform content Field Value Type Description Transform skillComboItemPrefab Declaration public SkillComboItem skillComboItemPrefab Field Value Type Description SkillComboItem titleText Declaration public TextMeshProUGUI titleText Field Value Type Description TextMeshProUGUI Properties TargetUnit Declaration public Unit TargetUnit { get; set; } Property Value Type Description Unit Methods Refresh() Declaration public void Refresh() Events OnSkillComboSelect Declaration public event UnityAction<Player.ComboInfo, bool> OnSkillComboSelect Event Type Type Description UnityAction < Player.ComboInfo , System.Boolean >"
  },
  "api/Global.UnitType.html": {
    "href": "api/Global.UnitType.html",
    "title": "Enum UnitType | 塔防游戏API文档",
    "keywords": "Enum UnitType 单位类型 Namespace : Global Assembly : cs.temp.dll.dll Syntax [Flags] public enum UnitType Fields Name Description Artifact 法器 Free 自由 Technique 功法 Weapon 武器"
  },
  "api/Global.UserDataManager.html": {
    "href": "api/Global.UserDataManager.html",
    "title": "Class UserDataManager | 塔防游戏API文档",
    "keywords": "Class UserDataManager 用户数据管理器 Inheritance System.Object UserDataManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UserDataManager Methods AutoSaveUserData() 保存自动存档。 Declaration public static bool AutoSaveUserData() Returns Type Description System.Boolean DeleteUserData(UserDataManager.UserDataInfo) 删除存档。 Declaration public static void DeleteUserData(UserDataManager.UserDataInfo userDataInfo) Parameters Type Name Description UserDataManager.UserDataInfo userDataInfo 存档信息 GetSystemData() Declaration public static SystemData GetSystemData() Returns Type Description SystemData GetUserData<T>() 获得用户数据。 Declaration public static T GetUserData<T>() where T : BaseUserData, new() Returns Type Description T 用户数据 Type Parameters Name Description T 用户数据类型 LoadSystemSettings() 加载系统设置。 Declaration public static void LoadSystemSettings() LoadUserData(UserDataManager.UserDataInfo) 读取存档。 Declaration public static bool LoadUserData(UserDataManager.UserDataInfo userDataInfo) Parameters Type Name Description UserDataManager.UserDataInfo userDataInfo 存档信息 Returns Type Description System.Boolean LoadUserDataInfoList(Boolean) 读取存档信息列表。 Declaration public static List<UserDataManager.UserDataInfo> LoadUserDataInfoList(bool isAutoSave) Parameters Type Name Description System.Boolean isAutoSave Returns Type Description System.Collections.Generic.List < UserDataManager.UserDataInfo > 存档信息列表 SaveSystemData() 保存系统数据。 Declaration public static bool SaveSystemData() Returns Type Description System.Boolean SaveUserData(Int32, String) 保存存档。 Declaration public static bool SaveUserData(int slot, string dataName) Parameters Type Name Description System.Int32 slot 存档位 System.String dataName 存档名 Returns Type Description System.Boolean"
  },
  "api/Global.UserDataManager.UserDataInfo.html": {
    "href": "api/Global.UserDataManager.UserDataInfo.html",
    "title": "Struct UserDataManager.UserDataInfo | 塔防游戏API文档",
    "keywords": "Struct UserDataManager.UserDataInfo 存档信息 Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct UserDataInfo Fields isAutoSave 是否为自动存档 Declaration public bool isAutoSave Field Value Type Description System.Boolean name 存档名 Declaration public string name Field Value Type Description System.String slot 存档位 Declaration public int slot Field Value Type Description System.Int32"
  },
  "api/Global.Utils.html": {
    "href": "api/Global.Utils.html",
    "title": "Class Utils | 塔防游戏API文档",
    "keywords": "Class Utils 工具类。 Inheritance System.Object Utils Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class Utils Methods ToLocalized(String, String[]) 获得本地化文本。 Declaration public static string ToLocalized(this string key, params string[] replace) Parameters Type Name Description System.String key 文本key值 System.String [] replace 替换字符串，按顺序会依次替换文本中的{0}、{1}…… Returns Type Description System.String 目标文本"
  },
  "index.html": {
    "href": "index.html",
    "title": "这是个标题页。 | 塔防游戏API文档",
    "keywords": "这是个标题页。 随便写点东西凑数。"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | 塔防游戏API文档",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | 塔防游戏API文档",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}